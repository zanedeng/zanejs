@use '../../../global/styles/commons';

/**
 * @prop --zane-button-color: Button filling color.
 * @prop --zane-button-color-light: Button filling color for light variant.
 * @prop --zane-button-color-hover: Button filling color on hover.
 * @prop --zane-button-color-active: Button filling color on active.
 * @prop --zane-button-support-contrast-color: Button support color (text or border). Should be white or black based on weight of button filling color.
 */
:host {
  --zane-button-border-width: var(--zane-theme-button-border-width);

  /**
   * @prop --zane-button-border-radius: Button border radius.
   * @prop --zane-theme-button-border-radius: Theme level button border radius. (applies to all buttons)
   */
  --zane-button-border-radius: var(
    --zane-theme-button-border-radius,
    #{commons.v(--border-radius)}
  );

  /**
   * @prop --zane-button-border-style: Button border style.
   * @prop --zane-theme-button-border-style: Theme level button border style. (applies to all buttons)
   */
  --zane-button-border-style: var(--zane-theme-button-border-style, solid);

  /**
    * @prop --zane-button-padding: Button padding.
   */
  --zane-button-padding: unset;
  --zane-button-height: unset;
  --zane-button-icon-size: 1rem;

  display: inline-block;
  height: var(--zane-button-height);
}

.button {
  --internal-button-inner-padding: 0.0625rem;

  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;

  .native-button {
    --zane-spinner-color: currentcolor;
    --zane-icon-size: var(--zane-button-icon-size);

    z-index: commons.v(--z-index-button);
    display: flex;
    flex: 1;
    flex-direction: column;
    width: 100%;
    padding: 0;
    text-decoration: none;
    cursor: pointer;
    outline: none;
    background: transparent;
    border-color: transparent;
    border-style: var(--zane-button-border-style);
    border-width: var(
      --zane-button-border-width,
      var(--internal-button-border-width, 0.125rem)
    );
    border-radius: var(--zane-button-border-radius);

    .button-content {
      box-sizing: border-box;
      display: flex;
      flex: 1;
      flex-direction: row;
      align-items: center;
      width: 100%;
      height: 100%;
      padding: 0
        calc(
          var(
              --zane-button-padding,
              var(--internal-button-padding, 1rem)
            ) - var(--internal-button-inner-padding)
        );
      border: var(--internal-button-inner-padding) solid transparent;
      border-radius: var(--zane-button-border-radius);

      @include commons.font-style(body-compact-01);
    }

    .slot-container {
      display: none;
    }
  }

  &.has-focus:not(.active) .native-button {
    .button-content {
      border-color: commons.v(--color-light);
    }
  }

  .button-background {
    position: absolute;
    display: block;
    width: 100%;
    height: 100%;
    pointer-events: none;
    border-radius: var(--zane-button-border-radius);
  }

  .button-neo-background {
    display: none;
  }

  &.disabled .native-button {
    cursor: not-allowed;
  }

  &.has-content {
    .slot-container {
      display: flex;
      flex: 1;
      padding-right: 0;
    }
  }

  &.has-content.has-icon,
  &.has-content.show-loader {
    .button-content {
      gap: var(--internal-button-gap, 2rem);
    }

    .slot-container {
      padding-right: 2rem;
    }
  }
}

/**
  * SIZES
  */
.button.size-xs,
.button.size-extra-small {
  min-height: var(--zane-button-height, 1.5rem);

  &:not(.has-content).has-icon,
  &:not(.has-content).show-loader {
    --internal-button-padding: 0.25rem;
  }
}

.button.size-sm,
.button.size-small {
  min-height: var(--zane-button-height, 2rem);

  &:not(.has-content).has-icon,
  &:not(.has-content).show-loader {
    --internal-button-padding: 0.5rem;
  }
}

.button.size-md,
.button.size-medium {
  min-height: var(--zane-button-height, 2.5rem);

  &:not(.has-content).has-icon,
  &:not(.has-content).show-loader {
    --internal-button-padding: 0.75rem;
  }
}

.button.size-lg,
.button.size-large {
  min-height: var(--zane-button-height, 3rem);
}

.button.size-xl {
  min-height: var(--zane-button-height, 4rem);

  .button-content {
    padding-bottom: 1rem;
  }
}

.button.size-2xl {
  height: 5rem;

  .button-content {
    padding-bottom: 2rem;
  }
}

.button.variant-simple {
  &.has-content .slot-container {
    padding-right: 0;
  }
}

.button.variant-block {
  .native-button {
    width: 100%;
  }

  .button-content {
    justify-content: center;
  }

  &.has-content {
    .slot-container {
      flex: none;
      justify-content: center;
      padding-right: 0;
    }
  }
}

/**
 * Button variant definitions
 */
.button.variant-default {
  .native-button {
    color: var(--internal-button-support-contrast-color);
    border-color: var(--internal-button-color);
  }

  .button-background {
    background: var(--internal-button-color);
  }

  &:hover {
    .native-button {
      border-color: var(--internal-button-color-hover);
    }

    .button-background {
      background: var(--internal-button-color-hover);
    }
  }

  &.active,
  &.selected {
    .native-button {
      border-color: var(--internal-button-color-active);
    }

    .button-background {
      background: var(--internal-button-color-active);
    }
  }

  &.has-focus:not(.active) .native-button {
    border-color: var(
      --internal-button-color-focus,
      commons.v(--color-primary)
    );

    .button-content {
      border-color: commons.v(--color-white);
    }
  }

  &.disabled {
    .native-button {
      color: var(--disabled-03);
      border-color: var(--text-disabled) !important;
    }

    .button-background {
      background: var(--text-disabled) !important;
    }

    &.has-focus:not(.active) .native-button {
      border-color: commons.v(--color-neutral) !important;
    }
  }
}

.button.variant-light {
  .native-button {
    color: var(--internal-button-color);
    border-color: var(--internal-button-color-light);
  }

  .button-background {
    background: var(--internal-button-color-light);
  }

  &:hover {
    .native-button {
      color: var(--internal-button-support-contrast-color);
      border-color: var(--internal-button-color-hover);
    }

    .button-background {
      background: var(--internal-button-color-hover);
    }
  }

  &.active,
  &.selected {
    .native-button {
      color: var(--internal-button-support-contrast-color);
      border-color: var(--internal-button-color-active);
    }

    .button-background {
      background: var(--internal-button-color-active);
    }
  }

  &.has-focus:not(.active) .native-button {
    border-color: var(
      --internal-button-color-focus,
      commons.v(--color-primary)
    );

    .button-content {
      border-color: commons.v(--color-white);
    }
  }

  &.disabled {
    .native-button {
      color: var(--disabled-03);
      border-color: var(--text-disabled) !important;
    }

    .button-background {
      background: var(--text-disabled) !important;
    }

    &.has-focus:not(.active) .native-button {
      border-color: commons.v(--color-neutral) !important;
    }
  }
}

.button.variant-outline {
  .native-button {
    color: var(--internal-button-color);
    border-color: var(--internal-button-color);
  }

  .button-background {
    background: transparent;
  }

  &:hover {
    .native-button {
      color: var(--internal-button-support-contrast-color);
      border-color: var(--internal-button-color);
    }

    .button-background {
      background: var(--internal-button-color);
    }
  }

  &.active,
  &.selected {
    .native-button {
      color: var(--internal-button-support-contrast-color);
      border-color: var(--internal-button-color-active);
    }

    .button-background {
      background: var(--internal-button-color-active);
    }
  }

  &.has-focus:not(.active) {
    .native-button {
      color: var(--internal-button-support-contrast-color);
      border-color: var(
        --internal-button-color-focus,
        commons.v(--color-primary)
      );
    }

    .button-background {
      background: var(--internal-button-color);
    }

    .button-content {
      border-color: commons.v(--color-white);
    }
  }

  &.disabled {
    .native-button {
      color: var(--disabled-03) !important;
      border-color: var(--text-disabled) !important;
    }

    .button-background {
      background: transparent !important;
    }

    &.has-focus:not(.active) .native-button {
      border-color: commons.v(--color-neutral) !important;
    }
  }
}

.button.variant-ghost {
  --internal-button-gap: 0.5rem;

  .native-button {
    color: var(--internal-button-color);
    border-color: transparent;
  }

  .button-background {
    background: transparent;
  }

  &:hover {
    .button-background {
      background: var(--background-hover);
    }
  }

  &.active,
  &.selected {
    .native-button {
      color: var(--internal-button-color);
    }

    .button-background {
      background: var(--background-active);
    }
  }

  &.has-focus:not(.active) .native-button {
    border-color: var(
      --internal-button-color-focus,
      commons.v(--color-primary)
    );
  }

  &.disabled {
    .native-button {
      color: var(--disabled-03) !important;
      border-color: transparent !important;
    }

    .button-background {
      background: transparent !important;
    }

    &.has-focus:not(.active) .native-button {
      border-color: var(
        --internal-button-color-focus,
        commons.v(--color-neutral)
      ) !important;
    }
  }
}

.button.variant-link {
  --internal-button-padding: 0;

  .native-button {
    color: var(--internal-button-support-contrast-color);
    border-color: transparent;
  }

  .button-background {
    background: transparent;
  }

  &.has-content .slot-container {
    padding-right: 0;
  }

  &.has-focus:not(.active) .native-button {
    border-color: var(
      --internal-button-color-focus,
      commons.v(--color-primary)
    );
  }

  &.disabled {
    .native-button {
      color: var(--disabled-03) !important;
      border-color: transparent !important;
    }

    .button-background {
      background: transparent !important;
    }

    &.has-focus:not(.active) .native-button {
      border-color: var(
        --internal-button-color-focus,
        commons.v(--color-neutral)
      ) !important;
    }
  }
}

.button.variant-neo {
  margin-block-end: 0.25rem;
  margin-inline-end: 0.25rem;

  .native-button {
    color: commons.v(--color-dark);
    border-color: commons.v(--color-dark);
  }

  .button-neo-background {
    position: absolute;
    display: block;
    width: 100%;
    height: 100%;
    pointer-events: none;
    background: commons.v(--color-dark);
    border-radius: var(--zane-button-border-radius);
    transform: translateX(0.25rem) translateY(0.25rem);
  }

  .button-background {
    background: var(--internal-button-color-neo);
  }

  &:hover {
    .native-button,
    .button-background {
      transform: translateY(-0.125rem);
    }
  }

  &.active {
    .native-button,
    .button-background {
      transform: translateX(0.25rem) translateY(0.25rem);
    }
  }

  &.active,
  &.selected {
    .native-button {
      border-color: commons.v(--color-dark);
    }
  }

  &.has-focus:not(.active) {
    .native-button {
      .button-content {
        border-color: commons.v(--color-light);
      }
    }

    .button-background {
      border: calc(1.5 * var(--internal-button-border-width)) solid
        commons.v(--color-dark);
    }
  }

  &.disabled {
    .native-button {
      color: var(--disabled-03);
      border-color: var(--text-disabled) !important;
    }

    .button-background {
      background: var(--text-disabled) !important;
    }

    &.has-focus:not(.active) .native-button {
      border-color: commons.v(--color-neutral) !important;
    }
  }
}

/**
  * Color Variants
  */
@mixin defineButtonVariables(
  $type,
  $color,
  $color-light,
  $color-hover,
  $color-active
) {
}

.button.color-primary {
  --internal-button-color: var(
    --zane-button-color,
    #{commons.v(--color-primary)}
  );
  --internal-button-color-light: var(
    --zane-button-color-light,
    #{commons.v(--color-primary-10)}
  );
  --internal-button-color-neo: var(
    --zane-button-color-neo,
    #{commons.v(--color-primary-50)}
  );
  --internal-button-color-hover: var(
    --zane-button-color-hover,
    #{commons.v(--color-primary-hover-60)}
  );
  --internal-button-color-active: var(
    --zane-button-color-active,
    #{commons.v(--color-primary-80)}
  );
}

.button.color-success {
  --internal-button-color: var(
    --zane-button-color,
    #{commons.v(--color-success)}
  );
  --internal-button-color-light: var(
    --zane-button-color-light,
    #{commons.v(--color-success-10)}
  );
  --internal-button-color-neo: var(
    --zane-button-color-neo,
    #{commons.v(--color-success-50)}
  );
  --internal-button-color-hover: var(
    --zane-button-color-hover,
    #{commons.v(--color-success-70)}
  );
  --internal-button-color-active: var(
    --zane-button-color-active,
    #{commons.v(--color-success-80)}
  );
}

.button.color-info {
  --internal-button-color: var(--zane-button-color, #{commons.v(--color-info)});
  --internal-button-color-light: var(
    --zane-button-color-light,
    #{commons.v(--color-info-10)}
  );
  --internal-button-color-neo: var(
    --zane-button-color-neo,
    #{commons.v(--color-info-50)}
  );
  --internal-button-color-hover: var(
    --zane-button-color-hover,
    #{commons.v(--color-info-hover-60)}
  );
  --internal-button-color-active: var(
    --zane-button-color-active,
    #{commons.v(--color-info-80)}
  );
}

.button.color-warning {
  --internal-button-color: var(
    --zane-button-color,
    #{commons.v(--color-warning)}
  );
  --internal-button-color-light: var(
    --zane-button-color-light,
    #{commons.v(--color-warning-10)}
  );
  --internal-button-color-neo: var(
    --zane-button-color-neo,
    #{commons.v(--color-warning-50)}
  );
  --internal-button-color-hover: var(
    --zane-button-color-hover,
    #{commons.v(--color-warning-70)}
  );
  --internal-button-color-active: var(
    --zane-button-color-active,
    #{commons.v(--color-warning-80)}
  );
}

.button.color-error,
.button.color-danger {
  --internal-button-color: var(
    --zane-button-color,
    #{commons.v(--color-error)}
  );
  --internal-button-color-light: var(
    --zane-button-color-light,
    #{commons.v(--color-error-10)}
  );
  --internal-button-color-neo: var(
    --zane-button-color-neo,
    #{commons.v(--color-error-50)}
  );
  --internal-button-color-hover: var(
    --zane-button-color-hover,
    #{commons.v(--color-error-70)}
  );
  --internal-button-color-active: var(
    --zane-button-color-active,
    #{commons.v(--color-error-80)}
  );
}

.button.color-white {
  --internal-button-color: var(
    --zane-button-color,
    #{commons.v(--color-white)}
  );
  --internal-button-color-light: var(
    --zane-button-color-light,
    #{commons.v(--color-white)}
  );
  --internal-button-color-neo: var(
    --zane-button-color-neo,
    #{commons.v(--color-white)}
  );
  --internal-button-color-hover: var(
    --zane-button-color-hover,
    #{commons.v(--color-gray-10)}
  );
  --internal-button-color-active: var(
    --zane-button-color-active,
    #{commons.v(--color-gray-70)}
  );
}

.button.color-black {
  --internal-button-color: var(
    --zane-button-color,
    #{commons.v(--color-black)}
  );
  --internal-button-color-light: var(
    --zane-button-color-light,
    #{commons.v(--color-gray-10)}
  );
  --internal-button-color-neo: var(
    --zane-button-color-neo,
    #{commons.v(--color-black)}
  );
  --internal-button-color-hover: var(
    --zane-button-color-hover,
    #{commons.v(--color-gray-70)}
  );
  --internal-button-color-active: var(
    --zane-button-color-active,
    #{commons.v(--color-gray-90)}
  );
}

.button.color-secondary {
  --internal-button-color: var(
    --zane-button-color,
    #{commons.v(--button-secondary)}
  );
  --internal-button-color-light: var(
    --zane-button-color-light,
    #{commons.v(--color-white)}
  );
  --internal-button-color-neo: var(
    --zane-button-color-neo,
    #{commons.v(--button-secondary)}
  );
  --internal-button-color-hover: var(
    --zane-button-color-hover,
    #{commons.v(--button-secondary-hover)}
  );
  --internal-button-color-active: var(
    --zane-button-color-active,
    #{commons.v(--button-secondary-active)}
  );
}

:host(.rounded) {
  .native-button {
    border-radius: 100%;
  }

  .button-content {
    border-radius: 100%;
  }

  .button-background {
    border-radius: 100%;
  }
}

:host(.no-padding) {
  .button-content {
    padding: 0;
  }
}
