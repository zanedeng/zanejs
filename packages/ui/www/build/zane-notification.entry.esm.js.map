{"version":3,"file":"zane-notification.entry.esm.js","sources":["src/components/notification/notification.scss?tag=zane-notification&encapsulation=shadow","src/components/notification/notification.tsx"],"sourcesContent":["@use '../../global/styles/commons';\n\n:host {\n  display: block;\n  margin-bottom: commons.v(--spacing-03);\n}\n\n:host(:not([inline])) {\n  width: 18rem;\n}\n\n.notification {\n  display: flex;\n  border-color: transparent;\n  border-style: solid;\n\n  .state-icon {\n    padding: 0.875rem commons.v(--spacing-04);\n    line-height: 0;\n  }\n\n  .content {\n    flex: 1;\n    padding-block: commons.v(--spacing-04);\n\n    .title {\n      word-break: break-all;\n\n      @include commons.font-style(heading-compact-01);\n    }\n\n    .subtitle {\n      word-break: break-all;\n\n      @include commons.font-style(body-compact-01);\n    }\n\n    .actions {\n      display: flex;\n      gap: var(--spacing-04);\n      align-items: center;\n      padding-top: 1.5rem;\n\n      .action {\n        --zane-button-border-radius: none;\n      }\n    }\n  }\n\n  &.inline .content {\n    display: flex;\n    padding-block: 0;\n\n    .content-text {\n      flex: 1;\n      padding-block: commons.v(--spacing-04);\n\n      .title,\n      .subtitle {\n        display: inline;\n        padding-inline-end: 0.25rem;\n      }\n\n      .title slot::slotted(*),\n      .subtitle slot::slotted(*) {\n        display: inline;\n      }\n    }\n\n    .actions {\n      padding-inline-end: commons.v(--spacing-03);\n      padding-top: 0;\n    }\n  }\n\n  .close-button {\n    --zane-button-padding: 0.75rem;\n    --zane-button-height: 3rem;\n    --zane-button-border-radius: none;\n\n    margin: 0;\n  }\n}\n\n:host(:not([dismissible])) .content {\n  padding-inline-end: commons.v(--spacing-04);\n}\n\n@mixin alertState($color, $dark) {\n  @if $dark {\n    .alert {\n      background-color: commons.v(--color-#{$color});\n\n      .content {\n        .message {\n          --link-color: white;\n\n          color: white;\n        }\n\n        .description {\n          color: commons.v(--text-primary);\n        }\n      }\n    }\n  } @else {\n    .alert {\n      background-color: commons.v(--color-#{$color}-20);\n\n      .content {\n        .message {\n          --link-color: #{commons.v(--color-#{$color}-70)};\n\n          color: commons.v(--color-#{$color}-70);\n        }\n\n        .description {\n          color: commons.v(--text-secondary);\n        }\n      }\n    }\n  }\n}\n\n@each $state in [info, success, warning, error] {\n  .notification.state-#{$state} {\n    &.high-contrast {\n      color: commons.v(--text-inverse);\n      background: commons.v(--background-inverse);\n      border-width: 0 0 0 3px;\n      border-left-color: commons.v(--support-#{$state}-inverse);\n\n      .close-button {\n        .icon {\n          color: commons.v(--text-inverse);\n        }\n      }\n\n      .state-icon {\n        color: commons.v(--support-#{$state}-inverse);\n      }\n    }\n\n    &:not(.high-contrast) {\n      color: commons.v(--color-neutral-100);\n      background: commons.v(--color-#{$state}-10);\n      border-color: commons.v(--support-#{$state});\n      border-width: 1px 1px 1px 3px;\n\n      .close-button {\n        .icon {\n          --icon-color: commons.v(--color-neutral-100);\n        }\n      }\n\n      .state-icon {\n        color: commons.v(--support-#{$state});\n      }\n    }\n  }\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  State,\n} from '@stencil/core';\n\nimport { isDarkMode, observeThemeChange } from '../../utils';\n\n/**\n * @name Notification\n * @description Notifications are messages that communicate information to the user.\n * @category Informational\n * @tags notification\n * @example <zane-notification state=\"success\">\n *               <div slot='title'>Successful saved the record</div>\n *             </zane-notification>\n */\n@Component({\n  shadow: true,\n  styleUrl: 'notification.scss',\n  tag: 'zane-notification',\n})\nexport class Notification implements ComponentInterface {\n  /**\n   * Action to be displayed on the notification\n   */\n  @Prop() action: string;\n\n  /**\n   * Whether the notification is dismissible\n   */\n  @Prop() dismissible: boolean = false;\n\n  @Element() elm!: HTMLElement;\n\n  @State() hidden: boolean = false;\n\n  /**\n   * Whether to use high contrast mode\n   */\n  @Prop() highContrast: boolean = false;\n\n  /**\n   * Whether the notification should be displayed inline\n   */\n  @Prop({ reflect: true }) inline: boolean = false;\n\n  @State() isDarkMode: boolean = isDarkMode();\n\n  /**\n   * Whether the notification is managed by the notification manager\n   */\n  @Prop() managed: boolean = false;\n\n  /**\n   * The state of the notification.\n   * Possible values are: 'success', 'error', 'info', 'warning'\n   */\n  @Prop({ reflect: true }) state: 'error' | 'info' | 'success' | 'warning' =\n    'info';\n\n  @Event({ eventName: 'zane-notification--action-click' })\n  zaneActionClick: EventEmitter;\n  /**\n   * Emitted when the notification is dismissed\n   */\n  @Event({ eventName: 'zane-notification--dismiss' }) zaneDismiss: EventEmitter;\n\n  componentWillLoad() {\n    observeThemeChange(() => {\n      this.isDarkMode = isDarkMode();\n    });\n  }\n\n  render() {\n    return (\n      <Host hidden={this.hidden}>\n        <div\n          class={{\n            [`state-${this.state}`]: true,\n            'high-contrast': this.highContrast,\n            inline: this.inline,\n            notification: true,\n          }}\n          role=\"alert\"\n        >\n          <div class=\"state-icon\">{this.renderStateIcon()}</div>\n          <div class=\"content\">\n            <div class=\"content-text\">\n              <div class=\"title\">\n                <slot name=\"title\" />\n                <slot />\n              </div>\n              <div class=\"subtitle\">\n                <slot name=\"subtitle\" />\n              </div>\n            </div>\n            {this.#renderActions()}\n          </div>\n\n          {this.#renderCloseButtons()}\n        </div>\n      </Host>\n    );\n  }\n\n  renderStateIcon() {\n    switch (this.state) {\n      case 'error': {\n        return (\n          <zane-icon class=\"inherit\" name=\"error--filled\" size={'1.25rem'} />\n        );\n      }\n      case 'info': {\n        return (\n          <zane-icon\n            class=\"inherit\"\n            name=\"information--filled\"\n            size={'1.25rem'}\n          />\n        );\n      }\n      case 'success': {\n        return (\n          <zane-icon\n            class=\"inherit\"\n            name=\"checkmark--filled\"\n            size={'1.25rem'}\n          />\n        );\n      }\n      case 'warning': {\n        return (\n          <zane-icon class=\"inherit\" name=\"warning--filled\" size={'1.25rem'} />\n        );\n      }\n      // No default\n    }\n  }\n\n  #renderActions() {\n    if (this.action) {\n      return (\n        <div class=\"actions\">\n          <zane-button\n            class=\"action\"\n            color={!this.highContrast || this.isDarkMode ? 'primary' : 'white'}\n            onZane-button--click={() => {\n              this.zaneActionClick.emit();\n            }}\n            size=\"sm\"\n            variant={this.inline ? 'ghost.simple' : 'outline.simple'}\n          >\n            {this.action}\n          </zane-button>\n        </div>\n      );\n    }\n  }\n\n  #renderCloseButtons() {\n    if (this.dismissible) {\n      return (\n        <div class=\"close-button-container\">\n          <zane-button\n            aria-label=\"Close alert\"\n            class=\"close-button\"\n            color=\"black\"\n            onZane-button--click={(evt) => {\n              evt.preventDefault();\n              evt.stopPropagation();\n              if (!this.managed) {\n                this.hidden = true;\n              }\n              this.zaneDismiss.emit(evt);\n            }}\n            variant=\"ghost.simple\"\n          >\n            <zane-icon class=\"icon\" name=\"close\" size=\"1.25rem\" />\n          </zane-button>\n        </div>\n      );\n    }\n  }\n}\n"],"names":[],"mappings":"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"}