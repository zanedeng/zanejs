{"version":3,"file":"zane-notification.entry.esm.js","sources":["src/components/notification/notification.scss?tag=zane-notification&encapsulation=shadow","src/components/notification/notification.tsx"],"sourcesContent":["@use '../../global/styles/commons';\n\n:host {\n  display: block;\n  margin-bottom: commons.v(--spacing-03);\n}\n\n:host(:not([inline])) {\n  width: 18rem;\n}\n\n.notification {\n  display: flex;\n  border-color: transparent;\n  border-style: solid;\n\n  .state-icon {\n    padding: 0.875rem commons.v(--spacing-04);\n    line-height: 0;\n  }\n\n  .content {\n    flex: 1;\n    padding-block: commons.v(--spacing-04);\n\n    .title {\n      word-break: break-all;\n\n      @include commons.font-style(heading-compact-01);\n    }\n\n    .subtitle {\n      word-break: break-all;\n\n      @include commons.font-style(body-compact-01);\n    }\n\n    .actions {\n      display: flex;\n      gap: var(--spacing-04);\n      align-items: center;\n      padding-top: 1.5rem;\n\n      .action {\n        --zane-button-border-radius: none;\n      }\n    }\n  }\n\n  &.inline .content {\n    display: flex;\n    padding-block: 0;\n\n    .content-text {\n      flex: 1;\n      padding-block: commons.v(--spacing-04);\n\n      .title,\n      .subtitle {\n        display: inline;\n        padding-inline-end: 0.25rem;\n      }\n\n      .title slot::slotted(*),\n      .subtitle slot::slotted(*) {\n        display: inline;\n      }\n    }\n\n    .actions {\n      padding-inline-end: commons.v(--spacing-03);\n      padding-top: 0;\n    }\n  }\n\n  .close-button {\n    --zane-button-padding: 0.75rem;\n    --zane-button-height: 3rem;\n    --zane-button-border-radius: none;\n\n    margin: 0;\n  }\n}\n\n:host(:not([dismissible])) .content {\n  padding-inline-end: commons.v(--spacing-04);\n}\n\n@mixin alertState($color, $dark) {\n  @if $dark {\n    .alert {\n      background-color: commons.v(--color-#{$color});\n\n      .content {\n        .message {\n          --link-color: white;\n\n          color: white;\n        }\n\n        .description {\n          color: commons.v(--text-primary);\n        }\n      }\n    }\n  } @else {\n    .alert {\n      background-color: commons.v(--color-#{$color}-20);\n\n      .content {\n        .message {\n          --link-color: #{commons.v(--color-#{$color}-70)};\n\n          color: commons.v(--color-#{$color}-70);\n        }\n\n        .description {\n          color: commons.v(--text-secondary);\n        }\n      }\n    }\n  }\n}\n\n@each $state in [info, success, warning, error] {\n  .notification.state-#{$state} {\n    &.high-contrast {\n      color: commons.v(--text-inverse);\n      background: commons.v(--background-inverse);\n      border-width: 0 0 0 3px;\n      border-left-color: commons.v(--support-#{$state}-inverse);\n\n      .close-button {\n        .icon {\n          color: commons.v(--text-inverse);\n        }\n      }\n\n      .state-icon {\n        color: commons.v(--support-#{$state}-inverse);\n      }\n    }\n\n    &:not(.high-contrast) {\n      color: commons.v(--color-neutral-100);\n      background: commons.v(--color-#{$state}-10);\n      border-color: commons.v(--support-#{$state});\n      border-width: 1px 1px 1px 3px;\n\n      .close-button {\n        .icon {\n          --icon-color: commons.v(--color-neutral-100);\n        }\n      }\n\n      .state-icon {\n        color: commons.v(--support-#{$state});\n      }\n    }\n  }\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  State,\n} from '@stencil/core';\n\nimport { isDarkMode, observeThemeChange } from '../../utils';\n\n/**\n * 智能通知系统组件 (zane-notification)\n *\n * @component zane-notification\n * @shadow true\n *\n * @description\n * 提供多场景智能通知解决方案，支持四态反馈、操作交互和主题适配。\n * 核心功能包括：\n * - 状态图标自动匹配\n * - 暗黑模式/高对比度自适应\n * - 内联/块级布局切换\n * - 可定制的操作按钮\n * - 可控的关闭行为\n * - 无障碍访问支持\n *\n * @example\n * <!-- 基础警告通知 -->\n * <zane-notification state=\"warning\" dismissible>\n *   <span slot=\"title\">存储空间不足</span>\n *   <span slot=\"subtitle\">剩余 5% 磁盘空间，建议清理缓存</span>\n * </zane-notification>\n *\n * <!-- 带操作的成功通知 -->\n * <zane-notification state=\"success\" action=\"查看详情\" high-contrast>\n *   <span slot=\"title\">支付成功</span>\n *   <span slot=\"subtitle\">订单号：20250719-2156</span>\n * </zane-notification>\n */\n@Component({\n  shadow: true,\n  styleUrl: 'notification.scss',\n  tag: 'zane-notification',\n})\nexport class Notification implements ComponentInterface {\n\n  /**\n   * 操作按钮文本\n   * @prop {string} [action] - 显示在通知右侧的操作按钮文字\n   * @example\n   * <zane-notification action=\"撤销操作\">...</zane-notification>\n   */\n  @Prop() action: string;\n\n  /**\n   * 可关闭特性\n   * @prop {boolean} [dismissible=false] - 是否显示关闭按钮\n   * @example\n   * <zane-notification dismissible>...</zane-notification>\n   */\n  @Prop() dismissible: boolean = false;\n\n  /**\n   * 组件宿主元素引用\n   * @prop {HTMLElement} elm - 自动注入的组件根DOM元素\n   * @private\n   */\n  @Element() elm!: HTMLElement;\n\n  /**\n   * 隐藏状态\n   * @state {boolean} hidden - 控制通知可见性的内部状态\n   * @default false\n   * @private\n   */\n  @State() hidden: boolean = false;\n\n  /**\n   * 高对比度模式\n   * @prop {boolean} [highContrast=false] - 启用高对比度视觉方案\n   * - 设计规范：符合WCAG 2.1 AA标准\n   * - 亮色模式：深色文字+加粗边框\n   * - 暗色模式：反转配色方案\n   * @example\n   * <zane-notification high-contrast>...</zane-notification>\n   */\n  @Prop() highContrast: boolean = false;\n\n  /**\n   * 内联布局模式\n   * @prop {boolean} [inline=false] - 切换为行内样式布局\n   * - 特征：\n   *   - 移除背景色和边框\n   *   - 状态图标与文本对齐\n   *   - 操作按钮变为幽灵样式\n   * - 适用场景：表单内联校验提示\n   * @example\n   * <p>请输入验证码 <zane-notification inline state=\"error\">验证码失效</zane-notification></p>\n   */\n  @Prop({ reflect: true }) inline: boolean = false;\n\n  /**\n   * 暗黑模式状态\n   * @state {boolean} isDarkMode - 自动检测的系统主题状态\n   * @default 当前系统主题模式\n   * @private\n   */\n  @State() isDarkMode: boolean = isDarkMode();\n\n  /**\n   * 托管关闭模式\n   * @prop {boolean} [managed=false] - 关闭行为是否由外部控制\n   * - 当设为true时：\n   *   - 点击关闭按钮不会隐藏组件\n   *   - 必须监听 zane-notification--dismiss 事件手动处理\n   * - 适用场景：通知队列管理/动画关闭\n   * @example\n   * <zane-notification managed dismissible>...</zane-notification>\n   *\n   * <script>\n   *   notification.addEventListener('zane-notification--dismiss',  () => {\n   *     // 执行动画后移除DOM\n   *   })\n   * </script>\n   */\n  @Prop() managed: boolean = false;\n\n  /**\n   * 通知状态类型\n   * @prop {'error'|'info'|'success'|'warning'} [state='info'] - 定义通知的语义化状态\n   *\n   * @option error - 错误状态（红色系）\n   * - 图标：❌ 错误图标\n   * - 场景：系统故障/操作失败\n   * - 样式特征：\n   *   - 背景色：#fee2e2 (浅红)\n   *   - 边框色：#dc2626 (暗红)\n   *\n   * @option info - 信息状态（蓝色系）\n   * - 图标：ℹ️ 信息图标\n   * - 场景：系统通知/进程提示\n   * - 样式特征：\n   *   - 背景色：#dbeafe (浅蓝)\n   *   - 边框色：#2563eb (深蓝)\n   *\n   * @option success - 成功状态（绿色系）\n   * - 图标：✅ 对勾图标\n   * - 场景：操作成功/流程完成\n   * - 样式特征：\n   *   - 背景色：#dcfce7 (浅绿)\n   *   - 边框色：#16a34a (深绿)\n   *\n   * @option warning - 警告状态（橙色系）\n   * - 图标：⚠️ 感叹号图标\n   * - 场景：风险提示/操作确认\n   * - 样式特征：\n   *   - 背景色：#ffedd5 (浅橙)\n   *   - 边框色：#ea580c (深橙)\n   */\n  @Prop({ reflect: true }) state: 'error' | 'info' | 'success' | 'warning' =\n    'info';\n\n  /**\n   * 操作按钮点击事件\n   * @event zane-notification--action-click\n   * @type {EventEmitter<void>}\n   * @example\n   * document.querySelector('zane-notification').addEventListener(\n   *   'zane-notification--action-click',\n   *   () => { console.log('Action  clicked') }\n   * )\n   */\n  @Event({ eventName: 'zane-notification--action-click' })\n  zaneActionClick: EventEmitter;\n\n  /**\n   * 通知关闭事件\n   * @event zane-notification--dismiss\n   * @type {EventEmitter<MouseEvent>}\n   * @property {MouseEvent} detail - 原始点击事件对象\n   * @example\n   * notificationEl.addEventListener('zane-notification--dismiss',  (evt) => {\n   *   console.log(' 关闭事件', evt.detail)\n   * })\n   */\n  @Event({ eventName: 'zane-notification--dismiss' }) zaneDismiss: EventEmitter;\n\n  /**\n   * 组件生命周期：将要加载\n   * @private\n   */\n  componentWillLoad() {\n    observeThemeChange(() => {\n      this.isDarkMode = isDarkMode();\n    });\n  }\n\n  render() {\n    return (\n      <Host hidden={this.hidden}>\n        <div\n          class={{\n            [`state-${this.state}`]: true,\n            'high-contrast': this.highContrast,\n            inline: this.inline,\n            notification: true,\n          }}\n          role=\"alert\"\n        >\n          <div class=\"state-icon\">{this.renderStateIcon()}</div>\n          <div class=\"content\">\n            <div class=\"content-text\">\n              <div class=\"title\">\n                <slot name=\"title\" />\n                <slot />\n              </div>\n              <div class=\"subtitle\">\n                <slot name=\"subtitle\" />\n              </div>\n            </div>\n            {this.#renderActions()}\n          </div>\n\n          {this.#renderCloseButtons()}\n        </div>\n      </Host>\n    );\n  }\n\n  /**\n   * 状态图标渲染器\n   * @private\n   * @returns {JSX.Element|null} 对应状态的图标组件\n   *\n   * @iconMapping\n   * | 状态    | 图标名称           | 尺寸     |\n   * |---------|-------------------|----------|\n   * | error   | error--filled     | 1.25rem  |\n   * | info    | information--filled| 1.25rem  |\n   * | success | checkmark--filled | 1.25rem  |\n   * | warning | warning--filled   | 1.25rem  |\n   */\n  renderStateIcon() {\n    switch (this.state) {\n      case 'error': {\n        return (\n          <zane-icon class=\"inherit\" name=\"error--filled\" size={'1.25rem'} />\n        );\n      }\n      case 'info': {\n        return (\n          <zane-icon\n            class=\"inherit\"\n            name=\"information--filled\"\n            size={'1.25rem'}\n          />\n        );\n      }\n      case 'success': {\n        return (\n          <zane-icon\n            class=\"inherit\"\n            name=\"checkmark--filled\"\n            size={'1.25rem'}\n          />\n        );\n      }\n      case 'warning': {\n        return (\n          <zane-icon class=\"inherit\" name=\"warning--filled\" size={'1.25rem'} />\n        );\n      }\n      // No default\n    }\n  }\n\n  /**\n   * 操作按钮渲染器\n   * @private\n   * @returns {JSX.Element|null} 操作按钮区域\n   *\n   * @buttonStyleLogic\n   * 1. 高对比度模式 + 暗黑模式 → 白色按钮\n   * 2. 高对比度模式 + 亮色模式 → 主色按钮\n   * 3. 内联模式 → 幽灵按钮样式 (variant=\"ghost.simple\")\n   * 4. 常规模式 → 线框按钮样式 (variant=\"outline.simple\")\n   */\n  #renderActions() {\n    if (this.action) {\n      return (\n        <div class=\"actions\">\n          <zane-button\n            class=\"action\"\n            color={!this.highContrast || this.isDarkMode ? 'primary' : 'white'}\n            onZane-button--click={() => {\n              this.zaneActionClick.emit();\n            }}\n            size=\"sm\"\n            variant={this.inline ? 'ghost.simple' : 'outline.simple'}\n          >\n            {this.action}\n          </zane-button>\n        </div>\n      );\n    }\n  }\n\n  /**\n   * 关闭按钮渲染器\n   * @private\n   * @returns {JSX.Element|null} 关闭按钮区域\n   *\n   * @accessibility\n   * - 按钮设置 aria-label=\"Close alert\"\n   * - 阻止事件冒泡防止误触发父元素事件\n   * - 托管模式下不自动隐藏组件\n   */\n  #renderCloseButtons() {\n    if (this.dismissible) {\n      return (\n        <div class=\"close-button-container\">\n          <zane-button\n            aria-label=\"Close alert\"\n            class=\"close-button\"\n            color=\"black\"\n            onZane-button--click={(evt) => {\n              evt.preventDefault();\n              evt.stopPropagation();\n              if (!this.managed) {\n                this.hidden = true;\n              }\n              this.zaneDismiss.emit(evt);\n            }}\n            variant=\"ghost.simple\"\n          >\n            <zane-icon class=\"icon\" name=\"close\" size=\"1.25rem\" />\n          </zane-button>\n        </div>\n      );\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA,MAAM,eAAe,GAAG,qhQAAqhQ;;;;;;;;;;MCgDhiQ,YAAY,GAAA,MAAA;AALzB,IAAA,WAAA,CAAA,OAAA,EAAA;;;;;AAeE;;;;;AAKG;AACK,QAAA,IAAW,CAAA,WAAA,GAAY,KAAK;AASpC;;;;;AAKG;AACM,QAAA,IAAM,CAAA,MAAA,GAAY,KAAK;AAEhC;;;;;;;;AAQG;AACK,QAAA,IAAY,CAAA,YAAA,GAAY,KAAK;AAErC;;;;;;;;;;AAUG;AACsB,QAAA,IAAM,CAAA,MAAA,GAAY,KAAK;AAEhD;;;;;AAKG;AACM,QAAA,IAAU,CAAA,UAAA,GAAY,UAAU,EAAE;AAE3C;;;;;;;;;;;;;;;AAeG;AACK,QAAA,IAAO,CAAA,OAAA,GAAY,KAAK;AAEhC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BG;AACsB,QAAA,IAAK,CAAA,KAAA,GAC5B,MAAM;AAqLT;AA1JC;;;AAGG;IACH,iBAAiB,GAAA;QACf,kBAAkB,CAAC,MAAK;AACtB,YAAA,IAAI,CAAC,UAAU,GAAG,UAAU,EAAE;AAChC,SAAC,CAAC;;IAGJ,MAAM,GAAA;QACJ,QACE,EAAC,IAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAA,EACvB,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACE,KAAK,EAAE;AACL,gBAAA,CAAC,SAAS,IAAI,CAAC,KAAK,CAAE,CAAA,GAAG,IAAI;gBAC7B,eAAe,EAAE,IAAI,CAAC,YAAY;gBAClC,MAAM,EAAE,IAAI,CAAC,MAAM;AACnB,gBAAA,YAAY,EAAE,IAAI;AACnB,aAAA,EACD,IAAI,EAAC,OAAO,EAAA,EAEZ,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,YAAY,EAAA,EAAE,IAAI,CAAC,eAAe,EAAE,CAAO,EACtD,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,SAAS,EAAA,EAClB,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,cAAc,EAAA,EACvB,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,OAAO,EAAA,EAChB,CAAM,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,IAAI,EAAC,OAAO,EAAG,CAAA,EACrB,CAAA,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,CAAQ,CACJ,EACN,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,UAAU,EAAA,EACnB,CAAA,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAM,IAAI,EAAC,UAAU,EAAA,CAAG,CACpB,CACF,EACL,sBAAA,CAAA,IAAI,EAAA,uBAAA,EAAA,GAAA,EAAA,2BAAA,CAAe,CAAnB,IAAA,CAAA,IAAI,CAAiB,CAClB,EAEL,sBAAA,CAAA,IAAI,iEAAoB,CAAxB,IAAA,CAAA,IAAI,CAAsB,CACvB,CACD;;AAIX;;;;;;;;;;;;AAYG;IACH,eAAe,GAAA;AACb,QAAA,QAAQ,IAAI,CAAC,KAAK;YAChB,KAAK,OAAO,EAAE;gBACZ,QACE,CAAA,CAAA,WAAA,EAAA,EAAW,KAAK,EAAC,SAAS,EAAC,IAAI,EAAC,eAAe,EAAC,IAAI,EAAE,SAAS,EAAA,CAAI;;YAGvE,KAAK,MAAM,EAAE;gBACX,QACE,CAAA,CAAA,WAAA,EAAA,EACE,KAAK,EAAC,SAAS,EACf,IAAI,EAAC,qBAAqB,EAC1B,IAAI,EAAE,SAAS,EAAA,CACf;;YAGN,KAAK,SAAS,EAAE;gBACd,QACE,CAAA,CAAA,WAAA,EAAA,EACE,KAAK,EAAC,SAAS,EACf,IAAI,EAAC,mBAAmB,EACxB,IAAI,EAAE,SAAS,EAAA,CACf;;YAGN,KAAK,SAAS,EAAE;gBACd,QACE,CAAA,CAAA,WAAA,EAAA,EAAW,KAAK,EAAC,SAAS,EAAC,IAAI,EAAC,iBAAiB,EAAC,IAAI,EAAE,SAAS,EAAA,CAAI;;;;;;;;AAmB3E,IAAA,IAAI,IAAI,CAAC,MAAM,EAAE;AACf,QAAA,QACE,CAAA,CAAA,KAAA,EAAA,EAAK,KAAK,EAAC,SAAS,EAAA,EAClB,CACE,CAAA,aAAA,EAAA,EAAA,KAAK,EAAC,QAAQ,EACd,KAAK,EAAE,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,UAAU,GAAG,SAAS,GAAG,OAAO,EAC5C,sBAAA,EAAA,MAAK;AACzB,gBAAA,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE;aAC5B,EACD,IAAI,EAAC,IAAI,EACT,OAAO,EAAE,IAAI,CAAC,MAAM,GAAG,cAAc,GAAG,gBAAgB,EAAA,EAEvD,IAAI,CAAC,MAAM,CACA,CACV;;AAGZ,CAAC,EAAA,gCAAA,GAAA,SAAA,gCAAA,GAAA;AAaC,IAAA,IAAI,IAAI,CAAC,WAAW,EAAE;AACpB,QAAA,QACE,CAAA,CAAA,KAAA,EAAA,EAAK,KAAK,EAAC,wBAAwB,EAAA,EACjC,CAAA,CAAA,aAAA,EAAA,EAAA,YAAA,EACa,aAAa,EACxB,KAAK,EAAC,cAAc,EACpB,KAAK,EAAC,OAAO,EAAA,sBAAA,EACS,CAAC,GAAG,KAAI;gBAC5B,GAAG,CAAC,cAAc,EAAE;gBACpB,GAAG,CAAC,eAAe,EAAE;AACrB,gBAAA,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACjB,oBAAA,IAAI,CAAC,MAAM,GAAG,IAAI;;AAEpB,gBAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC;aAC3B,EACD,OAAO,EAAC,cAAc,EAAA,EAEtB,CAAA,CAAA,WAAA,EAAA,EAAW,KAAK,EAAC,MAAM,EAAC,IAAI,EAAC,OAAO,EAAC,IAAI,EAAC,SAAS,EAAA,CAAG,CAC1C,CACV;;AAGZ,CAAC;;;;;"}