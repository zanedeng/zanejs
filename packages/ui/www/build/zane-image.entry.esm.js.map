{"version":3,"file":"zane-image.entry.esm.js","sources":["src/components/image/image.scss?tag=zane-image&encapsulation=shadow","src/components/image/image.tsx"],"sourcesContent":["@use '../../global/styles/commons';\n\n:host {\n  display: contents;\n}\n\nimg {\n  max-width: 100%;\n  max-height: 100%;\n}\n","import { Component, h, Host, Prop, State } from '@stencil/core';\n\nimport { isDarkMode, observeThemeChange } from '../../utils';\n\n/**\n * 自适应主题图片组件（zane-image）\n * 该组件能够根据当前系统的明暗主题自动切换显示的图片资源。\n * 当检测到处于暗色模式时，优先使用 darkSrc 指定的暗色主题图片；\n * 否则使用 src 指定的默认图片。\n * 组件内部通过监听主题变化事件实现实时切换，无需手动刷新。\n *\n * @example\n * <!-- 基础用法 -->\n * <zane-image\n *   src=\"assets/logo-light.svg\"\n *   dark-src=\"assets/logo-dark.svg\"\n *   image-title=\"公司 Logo\">\n * </zane-image>\n */\n@Component({\n  shadow: true,\n  styleUrl: 'image.scss',\n  tag: 'zane-image',\n})\nexport class Image {\n  /**\n   * 暗色主题下的图片地址。\n   * 当系统处于暗色模式且该值存在时，将优先渲染此图片。\n   *\n   * @example\n   * dark-src=\"assets/banner-dark.png\"\n   */\n  @Prop({ reflect: true }) darkSrc: string;\n\n  /**\n   * 图片的替代文本（alt 属性）。\n   * 用于无障碍访问及图片加载失败时的占位说明。\n   *\n   * @example\n   * image-title=\"用户头像\"\n   */\n  @Prop() imageTitle: string;\n\n  /**\n   * 当前系统是否处于暗色模式的状态标识。\n   * 初始值由 isDarkMode() 工具函数给出，\n   * 后续通过 observeThemeChange 回调实时更新。\n   */\n  @State() isDarkMode: boolean = isDarkMode();\n\n  @Prop({ reflect: true }) src: string;\n\n  /**\n   * 生命周期：组件即将加载时触发。\n   * 注册主题变化监听器，当系统明暗模式切换时，\n   * 自动更新 isDarkMode 状态，从而触发重新渲染。\n   */\n  componentWillLoad() {\n    observeThemeChange(() => {\n      this.isDarkMode = isDarkMode();\n    });\n  }\n\n  /**\n   * Stencil render()。\n   *\n   * - 如果当前为暗色模式且 darkSrc 存在，则渲染 darkSrc；\n   * - 否则渲染 src。\n   *\n   * Host 元素包裹 <img>，确保 Shadow DOM 样式隔离。\n   */\n  render() {\n    return this.isDarkMode && this.darkSrc ? (\n      <Host>\n        <img alt={this.imageTitle} src={this.darkSrc} />\n      </Host>\n    ) : (\n      <Host>\n        <img alt={this.imageTitle} src={this.src} />\n      </Host>\n    );\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA,MAAM,QAAQ,GAAG,8xFAA8xF;;MCwBlyF,KAAK,GAAA,MAAA;AALlB,IAAA,WAAA,CAAA,OAAA,EAAA;;AAwBE;;;;AAIG;AACM,QAAA,IAAU,CAAA,UAAA,GAAY,UAAU,EAAE;AAkC5C;AA9BC;;;;AAIG;IACH,iBAAiB,GAAA;QACf,kBAAkB,CAAC,MAAK;AACtB,YAAA,IAAI,CAAC,UAAU,GAAG,UAAU,EAAE;AAChC,SAAC,CAAC;;AAGJ;;;;;;;AAOG;IACH,MAAM,GAAA;AACJ,QAAA,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,IACpC,CAAA,CAAC,IAAI,EAAA,IAAA,EACH,CAAA,CAAA,KAAA,EAAA,EAAK,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,EAAE,IAAI,CAAC,OAAO,EAAA,CAAI,CAC3C,KAEP,EAAC,IAAI,EAAA,IAAA,EACH,CAAA,CAAA,KAAA,EAAA,EAAK,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAI,CAAA,CACvC,CACR;;;;;;;"}