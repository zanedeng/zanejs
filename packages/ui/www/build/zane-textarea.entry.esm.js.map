{"version":3,"file":"zane-textarea.entry.esm.js","sources":["src/components/textarea/textarea.scss?tag=zane-textarea&encapsulation=shadow","src/components/textarea/textarea.tsx"],"sourcesContent":["@use '../../global/styles/common-input';\n\n:host {\n  --zane-textarea-height: 2.5rem;\n}\n\n.textarea {\n  position: relative;\n  align-items: flex-start;\n  height: 100%;\n\n  .input-native {\n    height: 100%;\n    min-height: var(--zane-textarea-height);\n    padding: v(--spacing-05);\n    resize: vertical;\n  }\n}\n\n.actions-container {\n  position: absolute;\n  top: 0.5rem;\n  right: 1rem;\n\n  zane-button {\n    --zane-button-height: 2rem;\n  }\n}\n\n:host([size='md']) .input-container {\n  height: 100%;\n  min-height: var(--zane-textarea-height);\n}\n","import type { InputComponentInterface } from '../../interfaces';\n\nimport {\n  Component,\n  ComponentInterface,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\n\nimport { debounceEvent, getComponentIndex } from '../../utils';\n\n/**\n * @name Textarea\n * @description Enables native inputs to be used within a Form field.\n * @category Form Inputs\n * @tags input, form\n * @example <zane-textarea placeholder=\"Enter some description over here\"></zane-textarea>\n */\n@Component({\n  shadow: true,\n  styleUrl: './textarea.scss',\n  tag: 'zane-textarea',\n})\nexport class Textarea implements ComponentInterface, InputComponentInterface {\n  /**\n   * If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.\n   */\n  @Prop() clearable = false;\n\n  @Prop({ mutable: true, reflect: true }) configAria: any = {};\n\n  /**\n   * Set the amount of time, in milliseconds, to wait to trigger the `zane:change` event after each keystroke.\n   */\n  @Prop() debounce = 300;\n\n  /**\n   * If true, the user cannot interact with the button. Defaults to `false`.\n   */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  @Element() elm!: HTMLElement;\n\n  @State() endSlotHasContent = false;\n\n  gid: string = getComponentIndex();\n\n  @State() hasFocus = false;\n\n  @Prop() helperText: string;\n\n  @Prop({ reflect: true }) inline: boolean = false;\n\n  @Prop() invalid: boolean = false;\n\n  @Prop() invalidText: string;\n\n  @Prop() label: string;\n\n  /**\n   * The input field name.\n   */\n  @Prop() name: string = `zane-input-${this.gid}`;\n\n  /**\n   * The input field placeholder.\n   */\n  @Prop() placeholder: string;\n\n  /**\n   * If true, the user read the value cannot modify it. Defaults to `false`.\n   */\n  @Prop({ reflect: true }) readonly: boolean = false;\n\n  /**\n   * If true, required icon is show. Defaults to `false`.\n   */\n  @Prop() required: boolean = false;\n\n  /**\n   * The input field size.\n   * Possible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.\n   */\n  @Prop({ reflect: true }) size: 'lg' | 'md' | 'sm' = 'md';\n\n  @Prop() skeleton: boolean = false;\n\n  /**\n   * The input state.\n   * Possible values are: `\"success\"`, `\"error\"`, `\"warning\"`, 'default'. Defaults to `\"default\"`.\n   */\n  @Prop({ reflect: true }) state: 'default' | 'error' | 'success' | 'warning' =\n    'default';\n\n  /**\n   * The input field value.\n   */\n  @Prop({ mutable: true }) value: string;\n\n  @Prop() warn: boolean = false;\n\n  @Prop() warnText: string;\n\n  /**\n   * Emitted when the action button is clicked.\n   */\n  @Event({ eventName: 'zane-textarea--action-click' })\n  zaneActionClick: EventEmitter;\n\n  /**\n   * Emitted when the input loses focus.\n   */\n  @Event({ eventName: 'zane-textarea--blur' }) zaneBlur: EventEmitter;\n\n  /**\n   * Emitted when the value has changed..\n   */\n  @Event({ eventName: 'zane-textarea--change' }) zaneChange: EventEmitter;\n\n  /**\n   * Emitted when the input has focus.\n   */\n  @Event({ eventName: 'zane-textarea--focus' }) zaneFocus: EventEmitter;\n\n  /**\n   * Emitted when a keyboard input occurred.\n   */\n  @Event({ eventName: 'zane-textarea--input' }) zaneInput: EventEmitter;\n\n  private nativeElement?: HTMLTextAreaElement;\n\n  private tabindex?: number | string;\n  componentWillLoad() {\n    // If the ion-input has a tabindex attribute we get the value\n    // and pass it down to the native input, then remove it from the\n    // ion-input to avoid causing tabbing twice on the same element\n    if (this.elm.hasAttribute('tabindex')) {\n      const tabindex = this.elm.getAttribute('tabindex');\n      this.tabindex = tabindex === null ? undefined : tabindex;\n      this.elm.removeAttribute('tabindex');\n    }\n    this.elm.getAttributeNames().forEach((name: string) => {\n      if (name.includes('aria-')) {\n        this.configAria[name] = this.elm.getAttribute(name);\n        this.elm.removeAttribute(name);\n      }\n    });\n    this.endSlotHasContent = !!this.elm.querySelector('[slot=\"end\"]');\n  }\n  connectedCallback() {\n    this.debounceChanged();\n  }\n  @Method()\n  async getComponentId() {\n    return this.gid;\n  }\n  getLabel() {\n    return this.skeleton ? (\n      <div class=\"label skeleton\" />\n    ) : (\n      <label class=\"label\">\n        {this.required && <span class=\"required\">*</span>}\n        {this.label}\n      </label>\n    );\n  }\n\n  render() {\n    return (\n      <Host\n        has-focus={this.hasFocus}\n        has-value={this.hasValue()}\n        invalid={this.invalid}\n        warn={this.warn}\n      >\n        <div class={{ 'form-control': true, inline: this.inline }}>\n          {this.label && this.getLabel()}\n          <div class=\"field\">\n            {this.skeleton ? (\n              <div class=\"input-container-skeleton\" />\n            ) : (\n              this.renderInput()\n            )}\n          </div>\n          {this.renderHelper()}\n        </div>\n      </Host>\n    );\n  }\n\n  renderHelper() {\n    if (this.invalid)\n      return <div class=\"helper invalid\">{this.invalidText}</div>;\n    else if (this.warn) return <div class=\"helper warn\">{this.warnText}</div>;\n    else if (this.helperText || this.helperText === '')\n      return <div class=\"helper text\">{this.helperText}</div>;\n  }\n\n  renderInput() {\n    return (\n      <div\n        class={{\n          disabled: this.disabled,\n          'end-slot-has-content': this.endSlotHasContent,\n          'has-focus': this.hasFocus,\n          'input-container': true,\n          readonly: this.readonly,\n          textarea: true,\n        }}\n      >\n        <textarea\n          class=\"input input-native\"\n          disabled={this.disabled}\n          name={this.name}\n          onBlur={this.blurHandler}\n          onFocus={this.focusHandler}\n          onInput={this.inputHandler}\n          onKeyDown={this.keyDownHandler}\n          placeholder={this.placeholder}\n          readonly={this.readonly}\n          ref={(input) => (this.nativeElement = input)}\n          required={this.required}\n          rows={4}\n          tabindex={this.tabindex}\n          value={this.value}\n          {...this.configAria}\n        />\n\n        <div class={'actions-container'}>\n          {this.clearable && this.hasValue() && (\n            <zane-button\n              class=\"clear clear-action\"\n              color={'secondary'}\n              icon=\"close\"\n              onClick={this.clearInput}\n              size={this.size}\n              variant=\"ghost\"\n            />\n          )}\n        </div>\n\n        <div class=\"slot-container end\">\n          <slot name=\"end\" />\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Sets blur on the native `textarea` in `zane-textarea`. Use this method instead of the global\n   * `textarea.blur()`.\n   */\n  @Method()\n  async setBlur() {\n    if (this.nativeElement) {\n      this.nativeElement.blur();\n      this.hasFocus = false;\n    }\n  }\n\n  /**\n   * Sets focus on the native `textarea` in `zane-textarea`. Use this method instead of the global\n   * `textarea.focus()`.\n   */\n  @Method()\n  async setFocus() {\n    if (this.nativeElement) {\n      this.nativeElement.focus();\n      this.hasFocus = true;\n    }\n  }\n\n  @Watch('debounce')\n  protected debounceChanged() {\n    this.zaneChange = debounceEvent(this.zaneChange, this.debounce);\n  }\n\n  private blurHandler = (ev: FocusEvent) => {\n    this.hasFocus = false;\n    this.zaneBlur.emit(ev);\n  };\n\n  private clearInput = (evt: Event) => {\n    this.nativeElement.value = '';\n    this.inputHandler(evt);\n  };\n\n  private focusHandler = (ev: FocusEvent) => {\n    this.hasFocus = true;\n    this.zaneFocus.emit(ev);\n  };\n\n  private getValue(): string {\n    return (this.value || '').toString();\n  }\n\n  private hasValue(): boolean {\n    return this.getValue().length > 0;\n  }\n\n  private inputHandler = (ev: Event) => {\n    const input = ev.target as HTMLInputElement | null;\n    if (input) {\n      this.value = input.value || '';\n    }\n    this.zaneInput.emit(ev as KeyboardEvent);\n    this.zaneChange.emit(ev as KeyboardEvent);\n  };\n\n  private keyDownHandler = (ev: KeyboardEvent) => {\n    if (ev.key === 'Escape' && this.clearable) {\n      this.clearInput(ev);\n    }\n  };\n}\n"],"names":[],"mappings":"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"}