{"version":3,"names":["textCss","Text","constructor","hostRef","this","color","configAria","expressive","inline","type","componentWillLoad","elm","getAttributeNames","forEach","name","includes","getAttribute","removeAttribute","render","h","Host","key","class","__classPrivateFieldGet","_Text_instances","_Text_getHeadingSize","call","text","renderText","renderHeading","headingLevel","Heading","Object","assign","renderSimpleText","headingSize"],"sources":["src/components/text/text.scss?tag=zane-text&encapsulation=shadow","src/components/text/text.tsx"],"sourcesContent":["@use \"../../global/styles/commons\";\n\n:host {\n  display: block;\n  margin-bottom: commons.v(--spacing-03);\n}\n\n.native-element {\n  margin: 0;\n}\n\n:host([inline]), :host([type=code]) {\n  display: inline-block;\n  margin-bottom: 0;\n\n  .text {\n    display: inline-block;\n  }\n}\n\n:host([type=code]) {\n  background: commons.v(--border-subtle);\n  padding-inline: .25rem;\n  border-radius: commons.v(--border-radius);\n}\n\n\n\n\n/* *\n * heading styles\n */\n\n:host([type=\"heading\"]) {\n  margin-bottom: commons.v(--spacing-05);\n\n  .text {\n    @for $i from 1 through 7 {\n      &.heading-size-#{$i} {\n        .native-element {\n          @include commons.font-style(heading-0#{$i}, text);\n        }\n      }\n    }\n  }\n}\n\n\n/* *\n * fluid-heading styles\n */\n\n:host([type=\"fluid-heading\"]) {\n  margin-bottom: commons.v(--spacing-05);\n}\n\n@include commons.for-phone-only {\n  :host([type=\"fluid-heading\"]) .text {\n    @for $i from 3 through 6 {\n      &.heading-size-#{$i} {\n        .native-element {\n          @include commons.font-style(fluid-heading-0#{$i}-sm, text);\n        }\n      }\n    }\n  }\n}\n\n@include commons.for-tablet-portrait-up {\n  :host([type=\"fluid-heading\"]) .text {\n    @for $i from 3 through 6 {\n      &.heading-size-#{$i} {\n        .native-element {\n          @include commons.font-style(fluid-heading-0#{$i}-md, text);\n        }\n      }\n    }\n  }\n}\n\n@include commons.for-tablet-landscape-up {\n  :host([type=\"fluid-heading\"]) .text {\n    @for $i from 3 through 6 {\n      &.heading-size-#{$i} {\n        .native-element {\n          @include commons.font-style(fluid-heading-0#{$i}-lg, text);\n        }\n      }\n    }\n  }\n}\n\n@include commons.for-desktop-up {\n  :host([type=\"fluid-heading\"]) .text {\n    @for $i from 3 through 6 {\n      &.heading-size-#{$i} {\n        .native-element {\n          @include commons.font-style(fluid-heading-0#{$i}-xl, text);\n        }\n      }\n    }\n  }\n}\n\n@include commons.for-big-desktop-up {\n  :host([type=\"fluid-heading\"]) .text {\n    @for $i from 3 through 6 {\n      &.heading-size-#{$i} {\n        .native-element {\n          @include commons.font-style(fluid-heading-0#{$i}-max, text);\n        }\n      }\n    }\n  }\n}\n\n\n/* *\n * Other styles\n */\n\n$types: \"body\", \"body-compact\", \"code\", \"helper\", \"legal\", \"label\";\n\n@each $type in $types {\n  :host([type=\"#{$type}\"]) {\n    .native-element {\n      @include commons.font-style(#{$type}-01, text);\n    }\n\n    .expressive .native-element {\n      @include commons.font-style(#{$type}-02, text);\n    }\n  }\n}\n\n:host([type='code']) .native-element {\n  word-break: break-word;\n}\n\n\n:host {\n  color: var(--text-color, var(--text-primary));\n\n  &:host([color=\"secondary\"]) {\n    color: var(--text-secondary);\n  }\n\n  &:host([color=\"tertiary\"]), &:host([color=\"helper\"]) {\n    color: var(--text-helper);\n  }\n\n  &:host([color=\"error\"]) {\n    color: var(--text-error);\n  }\n\n  &:host([color=\"inverse\"]) {\n    color: var(--text-inverse);\n  }\n}\n\n\n:host(.inherit) {\n  color: inherit;\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  h,\n  Host,\n  Prop,\n} from '@stencil/core';\n\n/**\n * @name Text\n * @description Typography are used for rendering headlines, paragraphs and captions.\n * @category General\n * @example <zane-text type=\"heading\" level=\"1\">Heading</zane-typography>\n */\n@Component({\n  shadow: true,\n  styleUrl: 'text.scss',\n  tag: 'zane-text',\n})\nexport class Text implements ComponentInterface {\n  @Prop({ reflect: true }) color:\n    | 'error'\n    | 'helper'\n    | 'inverse'\n    | 'on-color'\n    | 'primary'\n    | 'secondary'\n    | 'tertiary' = 'primary';\n\n  @Prop({ mutable: true, reflect: true }) configAria: any = {};\n\n  @Element() elm!: HTMLElement;\n\n  @Prop({ reflect: true }) expressive: boolean = false;\n\n  @Prop({ reflect: true }) headingLevel: 1 | 2 | 3 | 4 | 5 | 6;\n\n  @Prop({ reflect: true }) headingSize: 1 | 2 | 3 | 4 | 5 | 6 | 7;\n\n  @Prop({ reflect: true }) inline: boolean = false;\n\n  @Prop({ reflect: true }) type:\n    | 'body'\n    | 'body-compact'\n    | 'code'\n    | 'fluid-heading'\n    | 'heading'\n    | 'heading-compact'\n    | 'helper-text'\n    | 'label'\n    | 'legal' = 'body';\n\n  componentWillLoad() {\n    // If the zane-text has a tabindex attribute we get the value\n    // and pass it down to the native input, then remove it from the\n    // zane-text to avoid causing tabbing twice on the same element\n    this.elm.getAttributeNames().forEach((name: string) => {\n      if (name.includes('aria-')) {\n        this.configAria[name] = this.elm.getAttribute(name);\n        this.elm.removeAttribute(name);\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Host>\n        <div\n          class={{\n            [`heading-size-${this.#getHeadingSize()}`]: true,\n            expressive: this.expressive,\n            inline: this.inline,\n            text: true,\n          }}\n        >\n          {this.renderText()}\n        </div>\n      </Host>\n    );\n  }\n\n  renderHeading() {\n    let headingLevel = this.headingLevel;\n    if (!headingLevel) {\n      switch (this.#getHeadingSize()) {\n        case 2: {\n          headingLevel = 5;\n          break;\n        }\n        case 3: {\n          headingLevel = 4;\n          break;\n        }\n        case 4: {\n          headingLevel = 3;\n          break;\n        }\n        case 5: {\n          headingLevel = 2;\n          break;\n        }\n        case 6:\n        case 7: {\n          headingLevel = 1;\n          break;\n        }\n        default: {\n          headingLevel = 6;\n        }\n      }\n    }\n\n    const Heading = `h${headingLevel}`;\n    return (\n      <Heading class=\"native-element\" {...this.configAria}>\n        <slot />\n      </Heading>\n    );\n  }\n\n  renderSimpleText() {\n    return this.inline ? (\n      <span class=\"native-element\" {...this.configAria}>\n        <slot />\n      </span>\n    ) : (\n      <p class=\"native-element\" {...this.configAria}>\n        <slot />\n      </p>\n    );\n  }\n\n  renderText() {\n    return this.type === 'heading'\n      ? this.renderHeading()\n      : this.renderSimpleText();\n  }\n\n  #getHeadingSize() {\n    let headingSize = this.headingSize;\n    if (!headingSize) {\n      headingSize = this.type === 'fluid-heading' ? 6 : 7;\n    }\n    return headingSize;\n  }\n}\n"],"mappings":"yDAAA,MAAMA,EAAU,uzlB,2WCoBHC,EAAI,MALjB,WAAAC,CAAAC,G,sBAM2BC,KAAKC,MAOb,UAEuBD,KAAUE,WAAQ,GAIjCF,KAAUG,WAAY,MAMtBH,KAAMI,OAAY,MAElBJ,KAAIK,KASf,MA+Ff,CA7FC,iBAAAC,GAIEN,KAAKO,IAAIC,oBAAoBC,SAASC,IACpC,GAAIA,EAAKC,SAAS,SAAU,CAC1BX,KAAKE,WAAWQ,GAAQV,KAAKO,IAAIK,aAAaF,GAC9CV,KAAKO,IAAIM,gBAAgBH,E,KAK/B,MAAAI,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAA,OAAAE,IAAA,2CACEC,MAAO,CACL,CAAC,gBAAgBC,EAAAnB,KAAoBoB,EAAA,IAAAC,GAAAC,KAApBtB,SAA2B,KAC5CG,WAAYH,KAAKG,WACjBC,OAAQJ,KAAKI,OACbmB,KAAM,OAGPvB,KAAKwB,c,CAMd,aAAAC,GACE,IAAIC,EAAe1B,KAAK0B,aACxB,IAAKA,EAAc,CACjB,OAAQP,EAAAnB,KAAIoB,EAAA,IAAAC,GAAgBC,KAApBtB,OACN,KAAK,EAAG,CACN0B,EAAe,EACf,K,CAEF,KAAK,EAAG,CACNA,EAAe,EACf,K,CAEF,KAAK,EAAG,CACNA,EAAe,EACf,K,CAEF,KAAK,EAAG,CACNA,EAAe,EACf,K,CAEF,KAAK,EACL,KAAK,EAAG,CACNA,EAAe,EACf,K,CAEF,QAAS,CACPA,EAAe,C,GAKrB,MAAMC,EAAU,IAAID,IACpB,OACEX,EAACY,EAAQC,OAAAC,OAAA,CAAAX,MAAM,kBAAqBlB,KAAKE,YACvCa,EAAQ,a,CAKd,gBAAAe,GACE,OAAO9B,KAAKI,OACVW,EAAM,OAAAa,OAAAC,OAAA,CAAAX,MAAM,kBAAqBlB,KAAKE,YACpCa,EAAA,cAGFA,EAAG,IAAAa,OAAAC,OAAA,CAAAX,MAAM,kBAAqBlB,KAAKE,YACjCa,EAAQ,a,CAKd,UAAAS,GACE,OAAOxB,KAAKK,OAAS,UACjBL,KAAKyB,gBACLzB,KAAK8B,kB,yDAIT,IAAIC,EAAc/B,KAAK+B,YACvB,IAAKA,EAAa,CAChBA,EAAc/B,KAAKK,OAAS,gBAAkB,EAAI,C,CAEpD,OAAO0B,CACT,E","ignoreList":[]}