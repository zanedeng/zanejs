{"version":3,"file":"zane-dropdown-menu.entry.esm.js","sources":["src/components/dropdown/dropdown-menu/dropdown-menu.scss?tag=zane-dropdown-menu&encapsulation=shadow","src/components/dropdown/dropdown-menu/dropdown-menu.tsx"],"sourcesContent":["@use '../../../global/styles/commons';\n\n:host {\n  --popover-content-shadow: none;\n\n  /**\n  * @prop --zane-dropdown-menu-max-height: Maximum height of the menu\n */\n  --zane-dropdown-menu-max-height: 100%;\n\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: v(--z-index-popover);\n  display: inline-block;\n  min-width: 10rem;\n  line-height: 0;\n  pointer-events: none;\n  transform: scale(0);\n  transition: transform 0.1s ease-out 0s;\n}\n\n:host-context(zane-dropdown[open]) {\n  pointer-events: auto;\n  transform: scale(1);\n}\n\n.dropdown-content {\n  --zane-menu-max-height: var(--zane-dropdown-menu-max-height);\n  --zane-menu-shadow: none;\n\n  position: relative;\n  width: 100%;\n  filter: var(--popover-content-shadow, none);\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  h,\n  Host,\n  Method,\n} from '@stencil/core';\n\nimport { getComponentIndex } from '../../../utils';\n\n/**\n * 下拉菜单内容组件（需与zane-dropdown配合使用）\n * @Component 装饰器定义组件元数据\n * @shadow 启用Shadow DOM封装\n * @styleUrl 组件样式表路径\n * @tag 组件自定义标签名称\n */\n@Component({\n  shadow: true,\n  styleUrl: 'dropdown-menu.scss',\n  tag: 'zane-dropdown-menu',\n})\nexport class DropdownMenu implements ComponentInterface {\n  /**\n   * 组件唯一ID\n   * 通过工具函数生成\n   */\n  gid: string = getComponentIndex();\n\n  /**\n   * 宿主元素引用\n   * @Element 装饰器获取宿主元素\n   */\n  @Element() host!: HTMLElement;\n\n  /**\n   * 内部菜单组件引用\n   * 用于操作底层zane-menu组件\n   */\n  menuRef: HTMLZaneMenuElement;\n\n  /**\n   * 渲染组件\n   * @returns 组件虚拟DOM\n   */\n  render() {\n    return (\n      <Host>\n        <zane-menu class=\"dropdown-content\" ref={(elm) => (this.menuRef = elm)}>\n          <slot />\n        </zane-menu>\n      </Host>\n    );\n  }\n\n  /**\n   * 设置焦点的公共方法\n   * 将焦点设置到菜单组件\n   * @Method 装饰器定义公共方法\n   */\n  @Method()\n  async setFocus() {\n    await this.menuRef.setFocus();\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA,MAAM,eAAe,GAAG,iuGAAiuG;;MCuB5uG,YAAY,GAAA,MAAA;AALzB,IAAA,WAAA,CAAA,OAAA,EAAA;;AAME;;;AAGG;AACH,QAAA,IAAG,CAAA,GAAA,GAAW,iBAAiB,EAAE;AAqClC;AAvBC;;;AAGG;IACH,MAAM,GAAA;QACJ,QACE,EAAC,IAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,EACH,CAAA,CAAA,WAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAW,KAAK,EAAC,kBAAkB,EAAC,GAAG,EAAE,CAAC,GAAG,MAAM,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,EAAA,EACpE,CAAQ,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,CAAA,CACE,CACP;;AAIX;;;;AAIG;AAEH,IAAA,MAAM,QAAQ,GAAA;AACZ,QAAA,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;;;;;;;;"}