{"version":3,"file":"zane-menu.zane-menu-item.zane-tag.entry.esm.js","sources":["src/components/menu/menu/menu.scss?tag=zane-menu&encapsulation=shadow","src/components/menu/menu/menu.tsx","src/components/menu/menu-item/menu-item.scss?tag=zane-menu-item&encapsulation=shadow","src/components/menu/menu-item/menu-item.tsx","src/enums/ElementSize.ts","src/components/tag/tag.scss?tag=zane-tag&encapsulation=shadow","src/components/tag/tag.tsx"],"sourcesContent":["@use '../../../global/styles/commons';\n\n:host {\n  /**\n    * @prop --zane-menu-background: Background color of the menu\n   */\n  --zane-menu-background: var(--layer);\n\n  /**\n    * @prop --zane-menu-max-height: Maximum height of the menu\n   */\n  --zane-menu-max-height: 100%;\n\n  /**\n    * @prop --zane-menu-shadow: Shadow of the menu\n   */\n  --zane-menu-shadow: 0 2px 6px 0 rgb(0 0 0 / 20%);\n\n  display: inline-block;\n  min-width: 10rem;\n}\n\n.menu {\n  box-sizing: border-box;\n  max-height: var(--zane-menu-max-height);\n  padding-block: commons.v(--spacing-02);\n  overflow-x: auto;\n  background: var(--zane-menu-background);\n  border: 1px solid #{commons.v(--border-subtle)};\n  box-shadow: var(--zane-menu-shadow);\n}\n\n:host(.no-border) .menu {\n  border: none;\n  box-shadow: none;\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  h,\n  Listen,\n  Method,\n  Prop,\n} from '@stencil/core';\n\n/**\n * @name Menu\n * @description Menus display a list of choices on temporary surfaces.\n * @category Navigation\n * @subcategory Menu\n * @img /assets/img/menu.webp\n * @imgDark /assets/img/menu-dark.webp\n */\n@Component({\n  shadow: true,\n  styleUrl: 'menu.scss',\n  tag: 'zane-menu',\n})\nexport class Menu implements ComponentInterface {\n  @Prop({ mutable: true }) empty: boolean = false;\n\n  @Prop({ mutable: true }) emptyStateDescription: string =\n    'There are no items to display';\n\n  @Prop({ mutable: true }) emptyStateHeadline: string = 'No items';\n\n  @Element() host!: HTMLElement;\n\n  @Prop({ reflect: true }) layer?: '01' | '02' | 'background';\n\n  @Prop() showLoader: boolean = false;\n\n  /**\n   * The menu item size.\n   * Possible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.\n   */\n  @Prop({ reflect: true }) size: 'lg' | 'md' | 'sm' = 'md';\n\n  @Prop({ mutable: true }) value?: number | string;\n\n  focusNextItem(currentItem: HTMLElement) {\n    let nextItem: any = currentItem.nextElementSibling;\n    do {\n      if (\n        nextItem &&\n        nextItem.tagName === 'ZANE-MENU-ITEM' &&\n        !nextItem.disabled\n      ) {\n        nextItem.setFocus();\n        return;\n      }\n      nextItem = nextItem ? nextItem.nextElementSibling : this.getFirstItem();\n    } while (nextItem !== currentItem);\n  }\n\n  getFirstItem() {\n    let firstItem: any = this.host.querySelector('zane-menu-item');\n    if (\n      !firstItem &&\n      this.host.childNodes.length > 0 &&\n      this.host.childNodes[0].nodeName === 'SLOT'\n    ) {\n      const assignedElements = (\n        this.host.childNodes[0] as HTMLSlotElement\n      ).assignedElements();\n      for (const assignedElement of assignedElements) {\n        const item = assignedElement as HTMLElement;\n        if (item.tagName === 'ZANE-MENU-ITEM') {\n          firstItem = item;\n          break;\n        }\n      }\n\n      if (!firstItem) {\n        throw new Error('zane-menu: No menu items found');\n      }\n    }\n    return firstItem;\n  }\n\n  getLastItem() {\n    let lastItem: any = this.host.querySelector('zane-menu-item:last-child');\n    if (\n      !lastItem &&\n      this.host.childNodes.length > 0 &&\n      this.host.childNodes[0].nodeName === 'SLOT'\n    ) {\n      const assignedElements = (\n        this.host.childNodes[0] as HTMLSlotElement\n      ).assignedElements();\n      for (let i = assignedElements.length - 1; i >= 0; i--) {\n        const item = assignedElements[i] as HTMLElement;\n        if (item.tagName === 'ZANE-MENU-ITEM') {\n          lastItem = item;\n          break;\n        }\n      }\n\n      if (!lastItem) {\n        throw new Error('zane-menu: No menu items found');\n      }\n    }\n    return lastItem;\n  }\n\n  @Listen('keydown', { target: 'window' })\n  handleKeyDown(evt: KeyboardEvent) {\n    const path = evt.composedPath();\n    let menuItem = null;\n    for (const elm of path) {\n      if ((elm as any).tagName === 'ZANE-MENU-ITEM') {\n        menuItem = elm;\n      }\n      if (elm !== this.host) continue;\n      if (evt.key === 'ArrowDown') {\n        evt.preventDefault();\n        this.focusNextItem(menuItem);\n      } else if (evt.key === 'ArrowUp') {\n        evt.preventDefault();\n        this.focusPreviousItem(menuItem);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"menu\">\n        <div class=\"slot-container\">\n          <slot />\n        </div>\n\n        {this.renderEmptyState()}\n      </div>\n    );\n  }\n\n  /**\n   * Sets focus on first menu item. Use this method instead of the global\n   * `element.focus()`.\n   */\n  @Method()\n  async setFocus() {\n    const firstMenuItem = this.getFirstItem();\n    firstMenuItem?.setFocus();\n  }\n\n  private focusPreviousItem(currentItem: HTMLElement) {\n    let previousItem: any = currentItem.previousElementSibling;\n    do {\n      if (\n        previousItem &&\n        previousItem.tagName === 'ZANE-MENU-ITEM' &&\n        !previousItem.disabled\n      ) {\n        previousItem.setFocus();\n        return;\n      }\n      previousItem = previousItem\n        ? previousItem.previousElementSibling\n        : this.getLastItem();\n    } while (previousItem !== currentItem);\n  }\n\n  private renderEmptyState() {\n    if (this.empty)\n      return (\n        <zane-empty-state\n          class=\"empty-menu\"\n          description={this.emptyStateDescription}\n          headline={this.emptyStateHeadline}\n        />\n      );\n  }\n}\n","@use '../../../global/styles/commons';\n\n:host {\n  display: block;\n}\n\n$border-width: 2px;\n\n.menu-item {\n  box-sizing: border-box;\n  display: flex;\n  gap: commons.v(--spacing-02);\n  align-items: center;\n  min-height: 2.5rem;\n  padding-inline: calc(#{commons.v(--spacing-05)} - #{$border-width});\n  color: commons.v(--text-secondary);\n  text-decoration: none;\n  cursor: pointer;\n  border: $border-width solid transparent;\n\n  @include commons.font-style(body-compact-01);\n\n  .item-section {\n    display: flex;\n    align-items: center;\n\n    &.start {\n      width: 1.5rem;\n    }\n  }\n\n  .slot-main {\n    display: block;\n    flex: 1;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  .slot-end {\n    color: commons.v(--text-helper);\n  }\n}\n\n:host-context([size='sm']) {\n  .menu-item {\n    min-height: 2rem;\n  }\n}\n\n:host-context([size='md']) {\n  .menu-item {\n    min-height: 2.5rem;\n  }\n}\n\n:host-context([size='lg']) {\n  .menu-item {\n    min-height: 3rem;\n  }\n}\n\n.menu-item {\n  &:hover {\n    color: commons.v(--text-primary);\n    background: commons.v(--layer-hover);\n\n    .slot-end {\n      color: commons.v(--icon-01);\n    }\n  }\n\n  &.active {\n    background: var(--selected-ui);\n  }\n}\n\n@each $color in [primary, secondary, success, info, warning, error, white,\n  black]\n{\n  .menu-item#{'.color-' + $color} {\n    &:hover,\n    &.has-focus:not(.active) {\n      color: white;\n      background: commons.v(--color-#{$color});\n\n      .slot-end {\n        color: white;\n      }\n    }\n  }\n}\n\n.menu-item.color-danger {\n  &:hover,\n  &.has-focus:not(.active) {\n    color: white;\n    background: commons.v(--color-error);\n\n    .slot-end {\n      color: white;\n    }\n  }\n}\n\n.menu-item.has-focus:not(.active) {\n  outline: none;\n  border-color: commons.v(--color-primary);\n}\n\n.menu-item.disabled {\n  color: commons.v(--text-disabled) !important;\n  cursor: not-allowed;\n  background-color: commons.v(--disabled-01) !important;\n\n  &:hover,\n  &.has-focus:not(.active) {\n    color: commons.v(--text-disabled) !important;\n    background-color: commons.v(--disabled-01) !important;\n  }\n\n  &.active,\n  &.selected {\n    color: commons.v(--text-disabled) !important;\n    background-color: var(--disabled-01) !important;\n  }\n}\n\n.menu-item:not(.end-slot-has-content) {\n  .slot-end {\n    display: none;\n  }\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n} from '@stencil/core';\n\nimport { getComponentIndex } from '../../../utils';\n\n/**\n * @name Menu Item\n * @description Menu items display a list of choices on temporary surfaces.\n * @category Navigation\n * @subcategory Menu\n * @childComponent true\n */\n@Component({\n  shadow: true,\n  styleUrl: 'menu-item.scss',\n  tag: 'zane-menu-item',\n})\nexport class MenuItem {\n  @Prop() color:\n    | 'black'\n    | 'danger'\n    | 'default'\n    | 'primary'\n    | 'secondary'\n    | 'success'\n    | 'warning'\n    | 'white' = 'default';\n\n  /**\n   * If true, the user cannot interact with the button. Defaults to `false`.\n   */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  @Element() elm!: HTMLElement;\n\n  @State() endSlotHasContent = false;\n\n  gid: string = getComponentIndex();\n\n  @State() hasFocus = false;\n\n  /**\n   * Hyperlink to navigate to on click.\n   */\n  @Prop({ reflect: true }) href: string;\n\n  @State() isActive = false;\n\n  @Prop({ reflect: true }) layer?: '01' | '02' | 'background';\n\n  @Prop({ reflect: true }) selectable: boolean = false;\n\n  /**\n   * Menu item selection state.\n   */\n  @Prop({ reflect: true }) selected: boolean = false;\n\n  @State() startSlotHasContent = false;\n  /**\n   * Sets or retrieves the window or frame at which to target content.\n   */\n  @Prop() target: string = '_self';\n  /**\n   * The menu item value.\n   */\n  @Prop({ mutable: true }) value?: null | number | string;\n  /**\n   * Emitted when the menu item is clicked.\n   */\n  @Event({ eventName: 'zane-menu-item--click' })\n  zaneMenuItemClick: EventEmitter;\n\n  private nativeElement?: HTMLElement;\n  private tabindex?: number | string = 1;\n\n  async componentWillLoad() {\n    // If the ion-input has a tabindex attribute we get the value\n    // and pass it down to the native input, then remove it from the\n    // zane-input to avoid causing tabbing twice on the same element\n    if (this.elm.hasAttribute('tabindex')) {\n      const tabindex = this.elm.getAttribute('tabindex');\n      this.tabindex = tabindex === null ? undefined : tabindex;\n      this.elm.removeAttribute('tabindex');\n    }\n    this.endSlotHasContent = !!this.elm.querySelector('[slot=\"end\"]');\n  }\n\n  getNativeElementTagName() {\n    return this.href ? 'a' : 'div';\n  }\n\n  render = () => {\n    const NativeElementTag = this.getNativeElementTagName();\n\n    return (\n      <Host active={this.isActive} has-focus={this.hasFocus}>\n        <NativeElementTag\n          aria-disabled={this.disabled}\n          class={{\n            [`color-${this.color}`]: true,\n            active: this.isActive,\n            disabled: this.disabled,\n            'end-slot-has-content': this.endSlotHasContent,\n            'has-focus': this.hasFocus,\n            'menu-item': true,\n            selected: this.selected,\n          }}\n          href={this.href}\n          onBlur={this.blurHandler}\n          onClick={this.clickHandler}\n          onFocus={this.focusHandler}\n          onKeyDown={this.keyDownHandler}\n          onMouseDown={this.mouseDownHandler}\n          ref={(el) => (this.nativeElement = el as HTMLElement)}\n          tabindex={this.tabindex}\n          target={this.target}\n        >\n          {this.selectable && (\n            <div class=\"item-section start\">\n              {this.selected && (\n                <zane-icon class=\"checkmark\" name=\"checkmark\" />\n              )}\n            </div>\n          )}\n\n          <div class=\"item-section slot-main\">\n            <slot />\n          </div>\n\n          <div class=\"item-section slot-end\">\n            <slot name=\"end\" />\n          </div>\n        </NativeElementTag>\n      </Host>\n    );\n  };\n\n  /**\n   * Sets blur on the native `input` in `zane-input`. Use this method instead of the global\n   * `input.blur()`.\n   */\n  @Method()\n  async setBlur() {\n    if (this.nativeElement) {\n      this.nativeElement.blur();\n    }\n  }\n\n  /**\n   * Sets focus on the native `input` in `zane-input`. Use this method instead of the global\n   * `input.focus()`.\n   */\n  @Method()\n  async setFocus() {\n    if (this.nativeElement) {\n      this.nativeElement.focus();\n    }\n  }\n\n  @Listen('keyup', { target: 'window' })\n  windowKeyUp(evt) {\n    if (this.isActive && evt.key === ' ') this.isActive = false;\n  }\n\n  @Listen('mouseup', { target: 'window' })\n  windowMouseUp() {\n    if (this.isActive) this.isActive = false;\n  }\n\n  private blurHandler = () => {\n    this.hasFocus = false;\n  };\n\n  private clickHandler = (event) => {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      this.setFocus();\n      this.zaneMenuItemClick.emit({\n        value: this.value || this.elm.innerText,\n      });\n      if (this.href) window.open(this.href, this.target);\n    }\n  };\n\n  private focusHandler = () => {\n    this.hasFocus = true;\n  };\n\n  private keyDownHandler = (evt) => {\n    if (evt.key === ' ' || evt.key === 'Enter') {\n      evt.preventDefault();\n      this.isActive = true;\n      this.clickHandler(evt);\n    }\n  };\n\n  private mouseDownHandler = () => {\n    this.isActive = true;\n  };\n}\n","/**\n * 元素尺寸枚举\n * 定义标准化的组件尺寸等级\n *\n * @remarks\n * 采用类似Bootstrap/Tailwind的尺寸命名约定\n * 适用于按钮、输入框、卡片等组件的尺寸控制\n */\nexport enum ElementSize {\n  /**\n   * 超大尺寸 (xxxl)\n   * @default 'xxxl'\n   */\n  EXTRA_EXTRA_EXTRA_LARGE = 'xxxl',\n\n  /**\n   * 特大尺寸 (xxl)\n   * @default 'xxl'\n   */\n  EXTRA_EXTRA_LARGE = 'xxl',\n\n  /**\n   * 加大尺寸 (xl)\n   * @default 'xl'\n   */\n  EXTRA_LARGE = 'xl',\n\n  /**\n   * 大尺寸 (lg)\n   * @default 'lg'\n   */\n  LARGE = 'lg',\n\n  /**\n   * 中等尺寸 (md)\n   * @default 'md'\n   */\n  MEDIUM = 'md',\n\n  /**\n   * 超小尺寸 (sm)\n   * @default 'sm'\n   */\n  SMALL = 'sm',\n}\n","@use '../../global/styles/commons';\n\n$tag-background-color: var(--tag-background-color, var(--tag-background-gray));\n$tag-color: var(--tag-color, var(--tag-color-gray));\n$tag-hover-color: var(--tag-hover-color, var(--tag-hover-gray));\n\n:host {\n  display: inline-block;\n}\n\n.tag {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  color: $tag-color;\n  background: $tag-background-color;\n\n  @include commons.font-style(label-01);\n\n  .tag-image {\n    width: 1.5rem;\n    height: 1.5rem;\n    background: $tag-hover-color;\n    border-radius: 100%;\n  }\n\n  .tag-content {\n    display: flex;\n    align-items: center;\n    max-width: 100%;\n    padding: 0 0.5rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  &.dismissible .tag-content {\n    padding-inline-end: 0.25rem;\n  }\n\n  &.selected {\n    color: var(--background);\n    background: $tag-hover-color;\n\n    .close-btn-icon {\n      color: var(--background);\n    }\n  }\n}\n\n.close-btn {\n  padding: 0;\n  margin: 0;\n  margin-inline-end: var(--spacing-01);\n  line-height: 0;\n  cursor: pointer;\n  background: transparent;\n  border: none;\n  border-radius: 12px;\n\n  &:hover {\n    background: $tag-hover-color;\n\n    .close-btn-icon {\n      color: var(--background);\n    }\n  }\n}\n\n/**\n * Sizes\n */\n.tag.size-md {\n  height: 1.5rem;\n  border-radius: 12px;\n}\n\n.tag.size-sm {\n  height: 1.125rem;\n  border-radius: 9px;\n}\n\n@each $color in [ 'gray', 'blue', 'green', 'red', 'yellow', 'primary',\n  'success', 'info', 'warning', 'error']\n{\n  .tag#{'.color-' + $color} {\n    --tag-background-color: var(--tag-background-#{$color});\n    --tag-color: var(--tag-color-#{$color});\n    --tag-hover-color: var(--tag-hover-#{$color});\n  }\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n} from '@stencil/core';\n\nimport { ElementSize } from '../../enums';\n\n/**\n * @name Tag\n * @description Use tags to label, categorize, or organize items using keywords that describe them.\n * @category Data Display\n * @tag controls\n * @example <zane-tag class=\"color-red\">Important</zane-tag>\n */\n@Component({\n  shadow: true,\n  styleUrl: 'tag.scss',\n  tag: 'zane-tag',\n})\nexport class Tag implements ComponentInterface {\n  /**\n   * Tag color.\n   * Possible values are: 'gray', 'blue', 'green', 'red', 'yellow', 'primary', 'success', 'info', 'warning', 'error'.\n   */\n  @Prop({ reflect: true }) color:\n    | 'blue'\n    | 'error'\n    | 'gray'\n    | 'green'\n    | 'info'\n    | 'primary'\n    | 'red'\n    | 'success'\n    | 'warning'\n    | 'yellow' = 'gray';\n\n  /**\n   * If true, the tag will have a close icon.\n   */\n  @Prop() dismissible: boolean = false;\n\n  @Element() elm!: HTMLElement;\n\n  /**\n   * Image source.\n   */\n  @Prop() imageSrc?: string;\n\n  /**\n   * If true, the tag will be selected.\n   */\n  @Prop({ reflect: true }) selected: boolean = false;\n\n  /**\n   * Text size.\n   */\n  @Prop({ reflect: true }) size: 'md' | 'sm' = 'md';\n\n  /**\n   * Tag value.\n   */\n  @Prop({ reflect: true }) value: string = '';\n\n  /**\n   * Emitted when the tag is clicked.\n   */\n  @Event({ eventName: 'zane-tag--click' }) zaneClick: EventEmitter;\n\n  /**\n   * Emitted when the close icon is clicked.\n   */\n  @Event({ eventName: 'zane-tag--dismiss' }) zaneTagDismissClick: EventEmitter;\n\n  render() {\n    return (\n      <Host>\n        <div\n          class={{\n            [`color-${this.color}`]: true,\n            [`size-${this.size}`]: true,\n            dismissible: this.dismissible,\n            selected: this.selected,\n            tag: true,\n          }}\n        >\n          {this.renderImage()}\n          <div class=\"tag-content\">\n            <slot />\n          </div>\n          {this.renderCloseButton()}\n        </div>\n      </Host>\n    );\n  }\n\n  renderCloseButton() {\n    if (this.dismissible)\n      return (\n        <button class=\"close-btn\" onClick={() => this.dismissClickHandler()}>\n          <zane-icon\n            class=\"close-btn-icon inherit\"\n            name=\"close\"\n            size={this.getIconSize()}\n          ></zane-icon>\n        </button>\n      );\n  }\n\n  renderImage() {\n    if (this.imageSrc)\n      return <img alt=\"Tag image\" class=\"tag-image\" src={this.imageSrc} />;\n  }\n\n  private dismissClickHandler = () => {\n    this.zaneTagDismissClick.emit({\n      value: this.value || this.elm.textContent,\n    });\n  };\n\n  private getIconSize() {\n    switch (this.size) {\n      case ElementSize.MEDIUM: {\n        return '1.25rem';\n      }\n      case ElementSize.SMALL: {\n        return '1rem';\n      }\n      default: {\n        return '1rem';\n      }\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA,MAAM,OAAO,GAAG,iqGAAiqG;;MCuBpqG,IAAI,GAAA,MAAA;AALjB,IAAA,WAAA,CAAA,OAAA,EAAA;;AAM2B,QAAA,IAAK,CAAA,KAAA,GAAY,KAAK;AAEtB,QAAA,IAAqB,CAAA,qBAAA,GAC5C,+BAA+B;AAER,QAAA,IAAkB,CAAA,kBAAA,GAAW,UAAU;AAMxD,QAAA,IAAU,CAAA,UAAA,GAAY,KAAK;AAEnC;;;AAGG;AACsB,QAAA,IAAI,CAAA,IAAA,GAAuB,IAAI;AAyIzD;AArIC,IAAA,aAAa,CAAC,WAAwB,EAAA;AACpC,QAAA,IAAI,QAAQ,GAAQ,WAAW,CAAC,kBAAkB;AAClD,QAAA,GAAG;AACD,YAAA,IACE,QAAQ;gBACR,QAAQ,CAAC,OAAO,KAAK,gBAAgB;AACrC,gBAAA,CAAC,QAAQ,CAAC,QAAQ,EAClB;gBACA,QAAQ,CAAC,QAAQ,EAAE;gBACnB;;AAEF,YAAA,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,kBAAkB,GAAG,IAAI,CAAC,YAAY,EAAE;AACzE,SAAC,QAAQ,QAAQ,KAAK,WAAW;;IAGnC,YAAY,GAAA;QACV,IAAI,SAAS,GAAQ,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC;AAC9D,QAAA,IACE,CAAC,SAAS;AACV,YAAA,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC;AAC/B,YAAA,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,MAAM,EAC3C;AACA,YAAA,MAAM,gBAAgB,GACpB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CACvB,CAAC,gBAAgB,EAAE;AACpB,YAAA,KAAK,MAAM,eAAe,IAAI,gBAAgB,EAAE;gBAC9C,MAAM,IAAI,GAAG,eAA8B;AAC3C,gBAAA,IAAI,IAAI,CAAC,OAAO,KAAK,gBAAgB,EAAE;oBACrC,SAAS,GAAG,IAAI;oBAChB;;;YAIJ,IAAI,CAAC,SAAS,EAAE;AACd,gBAAA,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC;;;AAGrD,QAAA,OAAO,SAAS;;IAGlB,WAAW,GAAA;QACT,IAAI,QAAQ,GAAQ,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,2BAA2B,CAAC;AACxE,QAAA,IACE,CAAC,QAAQ;AACT,YAAA,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC;AAC/B,YAAA,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,MAAM,EAC3C;AACA,YAAA,MAAM,gBAAgB,GACpB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CACvB,CAAC,gBAAgB,EAAE;AACpB,YAAA,KAAK,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AACrD,gBAAA,MAAM,IAAI,GAAG,gBAAgB,CAAC,CAAC,CAAgB;AAC/C,gBAAA,IAAI,IAAI,CAAC,OAAO,KAAK,gBAAgB,EAAE;oBACrC,QAAQ,GAAG,IAAI;oBACf;;;YAIJ,IAAI,CAAC,QAAQ,EAAE;AACb,gBAAA,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC;;;AAGrD,QAAA,OAAO,QAAQ;;AAIjB,IAAA,aAAa,CAAC,GAAkB,EAAA;AAC9B,QAAA,MAAM,IAAI,GAAG,GAAG,CAAC,YAAY,EAAE;QAC/B,IAAI,QAAQ,GAAG,IAAI;AACnB,QAAA,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;AACtB,YAAA,IAAK,GAAW,CAAC,OAAO,KAAK,gBAAgB,EAAE;gBAC7C,QAAQ,GAAG,GAAG;;AAEhB,YAAA,IAAI,GAAG,KAAK,IAAI,CAAC,IAAI;gBAAE;AACvB,YAAA,IAAI,GAAG,CAAC,GAAG,KAAK,WAAW,EAAE;gBAC3B,GAAG,CAAC,cAAc,EAAE;AACpB,gBAAA,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;;AACvB,iBAAA,IAAI,GAAG,CAAC,GAAG,KAAK,SAAS,EAAE;gBAChC,GAAG,CAAC,cAAc,EAAE;AACpB,gBAAA,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;;;;IAKtC,MAAM,GAAA;QACJ,QACE,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAK,KAAK,EAAC,MAAM,EAAA,EACf,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,gBAAgB,EAAA,EACzB,CAAA,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,CAAQ,CACJ,EAEL,IAAI,CAAC,gBAAgB,EAAE,CACpB;;AAIV;;;AAGG;AAEH,IAAA,MAAM,QAAQ,GAAA;AACZ,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,EAAE;AACzC,QAAA,aAAa,aAAb,aAAa,KAAA,MAAA,GAAA,MAAA,GAAb,aAAa,CAAE,QAAQ,EAAE;;AAGnB,IAAA,iBAAiB,CAAC,WAAwB,EAAA;AAChD,QAAA,IAAI,YAAY,GAAQ,WAAW,CAAC,sBAAsB;AAC1D,QAAA,GAAG;AACD,YAAA,IACE,YAAY;gBACZ,YAAY,CAAC,OAAO,KAAK,gBAAgB;AACzC,gBAAA,CAAC,YAAY,CAAC,QAAQ,EACtB;gBACA,YAAY,CAAC,QAAQ,EAAE;gBACvB;;AAEF,YAAA,YAAY,GAAG;kBACX,YAAY,CAAC;AACf,kBAAE,IAAI,CAAC,WAAW,EAAE;AACxB,SAAC,QAAQ,YAAY,KAAK,WAAW;;IAG/B,gBAAgB,GAAA;QACtB,IAAI,IAAI,CAAC,KAAK;YACZ,QACE,CACE,CAAA,kBAAA,EAAA,EAAA,KAAK,EAAC,YAAY,EAClB,WAAW,EAAE,IAAI,CAAC,qBAAqB,EACvC,QAAQ,EAAE,IAAI,CAAC,kBAAkB,EAAA,CACjC;;;;;;AC/KV,MAAM,WAAW,GAAG,2vNAA2vN;;MC2BlwN,QAAQ,GAAA,MAAA;AALrB,IAAA,WAAA,CAAA,OAAA,EAAA;;;AAMU,QAAA,IAAK,CAAA,KAAA,GAQC,SAAS;AAEvB;;AAEG;AACsB,QAAA,IAAQ,CAAA,QAAA,GAAY,KAAK;AAIzC,QAAA,IAAiB,CAAA,iBAAA,GAAG,KAAK;AAElC,QAAA,IAAG,CAAA,GAAA,GAAW,iBAAiB,EAAE;AAExB,QAAA,IAAQ,CAAA,QAAA,GAAG,KAAK;AAOhB,QAAA,IAAQ,CAAA,QAAA,GAAG,KAAK;AAIA,QAAA,IAAU,CAAA,UAAA,GAAY,KAAK;AAEpD;;AAEG;AACsB,QAAA,IAAQ,CAAA,QAAA,GAAY,KAAK;AAEzC,QAAA,IAAmB,CAAA,mBAAA,GAAG,KAAK;AACpC;;AAEG;AACK,QAAA,IAAM,CAAA,MAAA,GAAW,OAAO;AAYxB,QAAA,IAAQ,CAAA,QAAA,GAAqB,CAAC;AAkBtC,QAAA,IAAM,CAAA,MAAA,GAAG,MAAK;AACZ,YAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,uBAAuB,EAAE;AAEvD,YAAA,QACE,CAAA,CAAC,IAAI,EAAA,EAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAA,WAAA,EAAa,IAAI,CAAC,QAAQ,EAAA,EACnD,CAAA,CAAC,gBAAgB,EACA,EAAA,eAAA,EAAA,IAAI,CAAC,QAAQ,EAC5B,KAAK,EAAE;AACL,oBAAA,CAAC,SAAS,IAAI,CAAC,KAAK,CAAE,CAAA,GAAG,IAAI;oBAC7B,MAAM,EAAE,IAAI,CAAC,QAAQ;oBACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,sBAAsB,EAAE,IAAI,CAAC,iBAAiB;oBAC9C,WAAW,EAAE,IAAI,CAAC,QAAQ;AAC1B,oBAAA,WAAW,EAAE,IAAI;oBACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;AACxB,iBAAA,EACD,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,MAAM,EAAE,IAAI,CAAC,WAAW,EACxB,OAAO,EAAE,IAAI,CAAC,YAAY,EAC1B,OAAO,EAAE,IAAI,CAAC,YAAY,EAC1B,SAAS,EAAE,IAAI,CAAC,cAAc,EAC9B,WAAW,EAAE,IAAI,CAAC,gBAAgB,EAClC,GAAG,EAAE,CAAC,EAAE,MAAM,IAAI,CAAC,aAAa,GAAG,EAAiB,CAAC,EACrD,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,MAAM,EAAE,IAAI,CAAC,MAAM,EAAA,EAElB,IAAI,CAAC,UAAU,KACd,CAAA,CAAA,KAAA,EAAA,EAAK,KAAK,EAAC,oBAAoB,EAC5B,EAAA,IAAI,CAAC,QAAQ,KACZ,CAAA,CAAA,WAAA,EAAA,EAAW,KAAK,EAAC,WAAW,EAAC,IAAI,EAAC,WAAW,EAAA,CAAG,CACjD,CACG,CACP,EAED,CAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,wBAAwB,EAAA,EACjC,CAAA,CAAA,MAAA,EAAA,IAAA,CAAQ,CACJ,EAEN,CAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,uBAAuB,EAAA,EAChC,CAAM,CAAA,MAAA,EAAA,EAAA,IAAI,EAAC,KAAK,EAAA,CAAG,CACf,CACW,CACd;AAEX,SAAC;AAkCO,QAAA,IAAW,CAAA,WAAA,GAAG,MAAK;AACzB,YAAA,IAAI,CAAC,QAAQ,GAAG,KAAK;AACvB,SAAC;AAEO,QAAA,IAAA,CAAA,YAAY,GAAG,CAAC,KAAK,KAAI;AAC/B,YAAA,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,KAAK,CAAC,cAAc,EAAE;gBACtB,KAAK,CAAC,eAAe,EAAE;;iBAClB;gBACL,IAAI,CAAC,QAAQ,EAAE;AACf,gBAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;oBAC1B,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS;AACxC,iBAAA,CAAC;gBACF,IAAI,IAAI,CAAC,IAAI;oBAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC;;AAEtD,SAAC;AAEO,QAAA,IAAY,CAAA,YAAA,GAAG,MAAK;AAC1B,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI;AACtB,SAAC;AAEO,QAAA,IAAA,CAAA,cAAc,GAAG,CAAC,GAAG,KAAI;AAC/B,YAAA,IAAI,GAAG,CAAC,GAAG,KAAK,GAAG,IAAI,GAAG,CAAC,GAAG,KAAK,OAAO,EAAE;gBAC1C,GAAG,CAAC,cAAc,EAAE;AACpB,gBAAA,IAAI,CAAC,QAAQ,GAAG,IAAI;AACpB,gBAAA,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC;;AAE1B,SAAC;AAEO,QAAA,IAAgB,CAAA,gBAAA,GAAG,MAAK;AAC9B,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI;AACtB,SAAC;AACF;AA9HC,IAAA,MAAM,iBAAiB,GAAA;;;;QAIrB,IAAI,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE;YACrC,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC;AAClD,YAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,KAAK,IAAI,GAAG,SAAS,GAAG,QAAQ;AACxD,YAAA,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC;;AAEtC,QAAA,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,cAAc,CAAC;;IAGnE,uBAAuB,GAAA;QACrB,OAAO,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,KAAK;;AAiDhC;;;AAGG;AAEH,IAAA,MAAM,OAAO,GAAA;AACX,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE;AACtB,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;;;AAI7B;;;AAGG;AAEH,IAAA,MAAM,QAAQ,GAAA;AACZ,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE;AACtB,YAAA,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;;;AAK9B,IAAA,WAAW,CAAC,GAAG,EAAA;QACb,IAAI,IAAI,CAAC,QAAQ,IAAI,GAAG,CAAC,GAAG,KAAK,GAAG;AAAE,YAAA,IAAI,CAAC,QAAQ,GAAG,KAAK;;IAI7D,aAAa,GAAA;QACX,IAAI,IAAI,CAAC,QAAQ;AAAE,YAAA,IAAI,CAAC,QAAQ,GAAG,KAAK;;;;;;AChL5C;;;;;;;AAOG;AACH,IAAY,WAoCX;AApCD,CAAA,UAAY,WAAW,EAAA;AACrB;;;AAGG;AACH,IAAA,WAAA,CAAA,yBAAA,CAAA,GAAA,MAAgC;AAEhC;;;AAGG;AACH,IAAA,WAAA,CAAA,mBAAA,CAAA,GAAA,KAAyB;AAEzB;;;AAGG;AACH,IAAA,WAAA,CAAA,aAAA,CAAA,GAAA,IAAkB;AAElB;;;AAGG;AACH,IAAA,WAAA,CAAA,OAAA,CAAA,GAAA,IAAY;AAEZ;;;AAGG;AACH,IAAA,WAAA,CAAA,QAAA,CAAA,GAAA,IAAa;AAEb;;;AAGG;AACH,IAAA,WAAA,CAAA,OAAA,CAAA,GAAA,IAAY;AACd,CAAC,EApCW,WAAW,KAAX,WAAW,GAoCtB,EAAA,CAAA,CAAA;;AC5CD,MAAM,MAAM,GAAG,4iLAA4iL;;MCyB9iL,GAAG,GAAA,MAAA;AALhB,IAAA,WAAA,CAAA,OAAA,EAAA;;;;AAME;;;AAGG;AACsB,QAAA,IAAK,CAAA,KAAA,GAUf,MAAM;AAErB;;AAEG;AACK,QAAA,IAAW,CAAA,WAAA,GAAY,KAAK;AASpC;;AAEG;AACsB,QAAA,IAAQ,CAAA,QAAA,GAAY,KAAK;AAElD;;AAEG;AACsB,QAAA,IAAI,CAAA,IAAA,GAAgB,IAAI;AAEjD;;AAEG;AACsB,QAAA,IAAK,CAAA,KAAA,GAAW,EAAE;AAoDnC,QAAA,IAAmB,CAAA,mBAAA,GAAG,MAAK;AACjC,YAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC;gBAC5B,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW;AAC1C,aAAA,CAAC;AACJ,SAAC;AAeF;IA3DC,MAAM,GAAA;QACJ,QACE,EAAC,IAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,EACH,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACE,KAAK,EAAE;AACL,gBAAA,CAAC,SAAS,IAAI,CAAC,KAAK,CAAE,CAAA,GAAG,IAAI;AAC7B,gBAAA,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAE,CAAA,GAAG,IAAI;gBAC3B,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ;AACvB,gBAAA,GAAG,EAAE,IAAI;AACV,aAAA,EAAA,EAEA,IAAI,CAAC,WAAW,EAAE,EACnB,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,aAAa,EAAA,EACtB,CAAA,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,CAAQ,CACJ,EACL,IAAI,CAAC,iBAAiB,EAAE,CACrB,CACD;;IAIX,iBAAiB,GAAA;QACf,IAAI,IAAI,CAAC,WAAW;YAClB,QACE,CAAA,CAAA,QAAA,EAAA,EAAQ,KAAK,EAAC,WAAW,EAAC,OAAO,EAAE,MAAM,IAAI,CAAC,mBAAmB,EAAE,EAAA,EACjE,CAAA,CAAA,WAAA,EAAA,EACE,KAAK,EAAC,wBAAwB,EAC9B,IAAI,EAAC,OAAO,EACZ,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,EACb,CAAA,CACN;;IAIf,WAAW,GAAA;QACT,IAAI,IAAI,CAAC,QAAQ;YACf,OAAO,CAAK,CAAA,KAAA,EAAA,EAAA,GAAG,EAAC,WAAW,EAAC,KAAK,EAAC,WAAW,EAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,GAAI;;IAShE,WAAW,GAAA;AACjB,QAAA,QAAQ,IAAI,CAAC,IAAI;AACf,YAAA,KAAK,WAAW,CAAC,MAAM,EAAE;AACvB,gBAAA,OAAO,SAAS;;AAElB,YAAA,KAAK,WAAW,CAAC,KAAK,EAAE;AACtB,gBAAA,OAAO,MAAM;;YAEf,SAAS;AACP,gBAAA,OAAO,MAAM;;;;;;;;;;"}