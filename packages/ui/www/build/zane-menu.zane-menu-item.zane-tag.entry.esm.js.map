{"version":3,"file":"zane-menu.zane-menu-item.zane-tag.entry.esm.js","sources":["src/components/menu/menu/menu.scss?tag=zane-menu&encapsulation=shadow","src/components/menu/menu/menu.tsx","src/components/menu/menu-item/menu-item.scss?tag=zane-menu-item&encapsulation=shadow","src/components/menu/menu-item/menu-item.tsx","src/enums/ElementSize.ts","src/components/tag/tag.scss?tag=zane-tag&encapsulation=shadow","src/components/tag/tag.tsx"],"sourcesContent":["@use '../../../global/styles/commons';\n\n:host {\n  /**\n    * @prop --zane-menu-background: Background color of the menu\n   */\n  --zane-menu-background: var(--layer);\n\n  /**\n    * @prop --zane-menu-max-height: Maximum height of the menu\n   */\n  --zane-menu-max-height: 100%;\n\n  /**\n    * @prop --zane-menu-shadow: Shadow of the menu\n   */\n  --zane-menu-shadow: 0 2px 6px 0 rgb(0 0 0 / 20%);\n\n  display: inline-block;\n  min-width: 10rem;\n}\n\n.menu {\n  box-sizing: border-box;\n  max-height: var(--zane-menu-max-height);\n  padding-block: commons.v(--spacing-02);\n  overflow-x: auto;\n  background: var(--zane-menu-background);\n  border: 1px solid #{commons.v(--border-subtle)};\n  box-shadow: var(--zane-menu-shadow);\n}\n\n:host(.no-border) .menu {\n  border: none;\n  box-shadow: none;\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  h,\n  Listen,\n  Method,\n  Prop,\n} from '@stencil/core';\n\n/**\n * 多功能菜单容器组件\n * @component zane-menu\n * @tags navigation, menu, container\n * @shadow true\n *\n * @description\n * 提供标准化的菜单容器实现，支持：\n * - 多种视觉尺寸层级\n * - 键盘导航支持\n * - 空状态展示\n * - 动态焦点管理\n *\n * @example\n * <!-- 基础菜单 -->\n * <zane-menu>\n *   <zane-menu-item>选项一</zane-menu-item>\n *   <zane-menu-item>选项二</zane-menu-item>\n * </zane-menu>\n *\n * <!-- 空状态菜单 -->\n * <zane-menu empty empty-state-headline=\"无数据\" empty-state-description=\"请添加菜单项\">\n * </zane-menu>\n */\n@Component({\n  shadow: true,\n  styleUrl: 'menu.scss',\n  tag: 'zane-menu',\n})\nexport class Menu implements ComponentInterface {\n  /**\n   * 空状态标识\n   * @type {boolean}\n   * @mutable\n   * @default false\n   *\n   * @description\n   * 控制是否显示空状态界面：\n   * - `true`: 显示空状态组件\n   * - `false`: 渲染常规菜单项\n   * 当设置为true时，将忽略slot内容\n   */\n  @Prop({ mutable: true }) empty: boolean = false;\n\n  /**\n   * 空状态描述文本\n   * @type {string}\n   * @mutable\n   * @default 'There are no items to display'\n   *\n   * @description\n   * 空状态界面中的辅助说明文字\n   * 支持HTML转义字符和多语言配置\n   */\n  @Prop({ mutable: true }) emptyStateDescription: string =\n    'There are no items to display';\n\n  /**\n   * 空状态标题文本\n   * @type {string}\n   * @mutable\n   * @default 'No items'\n   *\n   * @description\n   * 空状态界面中的主标题文字\n   * 通常使用简短有力的提示语\n   */\n  @Prop({ mutable: true }) emptyStateHeadline: string = 'No items';\n\n  /**\n   * 宿主元素引用\n   * @type {HTMLElement}\n   *\n   * @description\n   * 自动注入的宿主DOM元素引用\n   * 用于：\n   * - 查询子菜单项\n   * - 事件监听\n   * - 无障碍属性继承\n   */\n  @Element() host!: HTMLElement;\n\n  /**\n   * UI层级样式\n   * @type {'01' | '02' | 'background'}\n   * @reflect\n   *\n   * @description\n   * 控制菜单的视觉层级深度：\n   * - `01`: 表层菜单 (默认层级，高度为1dp)\n   * - `02`: 中层菜单 (高度为2dp，更明显的阴影)\n   * - `background`: 背景层菜单 (无阴影，用于嵌套场景)\n   * 对应不同的box-shadow和z-index值\n   */\n  @Prop({ reflect: true }) layer?: '01' | '02' | 'background';\n\n  /**\n   * 加载状态标识\n   * @type {boolean}\n   * @default false\n   *\n   * @description\n   * 控制是否显示加载指示器：\n   * - `true`: 显示加载动画\n   * - `false`: 正常显示内容\n   * 实际实现需在模板中添加加载器组件\n   */\n  @Prop() showLoader: boolean = false;\n\n  /**\n   * 菜单尺寸\n   * @type {'lg' | 'md' | 'sm'}\n   * @reflect\n   * @default 'md'\n   *\n   * @description\n   * 控制菜单项尺寸和间距：\n   * - `sm`: 紧凑模式 (高度32px，字号12px)\n   * - `md`: 标准模式 (高度40px，字号14px)\n   * - `lg`: 大尺寸模式 (高度48px，字号16px)\n   * 影响内边距和行高\n   */\n  @Prop({ reflect: true }) size: 'lg' | 'md' | 'sm' = 'md';\n\n  /**\n   * 当前选中值\n   * @type {number | string}\n   *\n   * @description\n   * 记录当前选中的菜单项值\n   * 应与子组件 zane-menu-item 的 value 属性联动\n   * 用于实现受控菜单组件\n   */\n  @Prop({ mutable: true }) value?: number | string;\n\n  /**\n   * 聚焦下一个菜单项\n   * @param {HTMLElement} currentItem - 当前聚焦的菜单项元素\n   *\n   * @description\n   * 焦点管理核心逻辑：\n   * 1. 从当前项开始向后查找\n   * 2. 跳过禁用项和非菜单项\n   * 3. 到达末尾时循环到第一项\n   * 4. 调用目标项的 setFocus() 方法\n   */\n  focusNextItem(currentItem: HTMLElement) {\n    let nextItem: any = currentItem.nextElementSibling;\n    do {\n      if (\n        nextItem &&\n        nextItem.tagName === 'ZANE-MENU-ITEM' &&\n        !nextItem.disabled\n      ) {\n        nextItem.setFocus();\n        return;\n      }\n      nextItem = nextItem ? nextItem.nextElementSibling : this.getFirstItem();\n    } while (nextItem !== currentItem);\n  }\n\n  /**\n   * 获取首个菜单项\n   * @returns {HTMLElement} 第一个有效的菜单项\n   * @throws 当不存在有效菜单项时抛出错误\n   *\n   * @description\n   * 多层查询逻辑：\n   * 1. 直接查询 zane-menu-item 元素\n   * 2. 检测slot内容分配\n   * 3. 遍历分配元素查找有效项\n   */\n  getFirstItem() {\n    let firstItem: any = this.host.querySelector('zane-menu-item');\n    if (\n      !firstItem &&\n      this.host.childNodes.length > 0 &&\n      this.host.childNodes[0].nodeName === 'SLOT'\n    ) {\n      const assignedElements = (\n        this.host.childNodes[0] as HTMLSlotElement\n      ).assignedElements();\n      for (const assignedElement of assignedElements) {\n        const item = assignedElement as HTMLElement;\n        if (item.tagName === 'ZANE-MENU-ITEM') {\n          firstItem = item;\n          break;\n        }\n      }\n\n      if (!firstItem) {\n        throw new Error('zane-menu: No menu items found');\n      }\n    }\n    return firstItem;\n  }\n\n  /**\n   * 获取末个菜单项\n   * @returns {HTMLElement} 最后一个有效的菜单项\n   * @throws 当不存在有效菜单项时抛出错误\n   *\n   * @description\n   * 优化查询逻辑：\n   * 1. 反向遍历提高查找效率\n   * 2. 优先检测slot分配元素\n   */\n  getLastItem() {\n    let lastItem: any = this.host.querySelector('zane-menu-item:last-child');\n    if (\n      !lastItem &&\n      this.host.childNodes.length > 0 &&\n      this.host.childNodes[0].nodeName === 'SLOT'\n    ) {\n      const assignedElements = (\n        this.host.childNodes[0] as HTMLSlotElement\n      ).assignedElements();\n      for (let i = assignedElements.length - 1; i >= 0; i--) {\n        const item = assignedElements[i] as HTMLElement;\n        if (item.tagName === 'ZANE-MENU-ITEM') {\n          lastItem = item;\n          break;\n        }\n      }\n\n      if (!lastItem) {\n        throw new Error('zane-menu: No menu items found');\n      }\n    }\n    return lastItem;\n  }\n\n  /**\n   * 全局键盘事件监听\n   * @listens window:keydown\n   * @param {KeyboardEvent} evt - 键盘事件对象\n   *\n   * @description\n   * 实现键盘导航：\n   * - ↓ 键: 聚焦下一项（触发 focusNextItem）\n   * - ↑ 键: 聚焦上一项（触发 focusPreviousItem）\n   * 事件限制在菜单容器内触发\n   */\n  @Listen('keydown', { target: 'window' })\n  handleKeyDown(evt: KeyboardEvent) {\n    const path = evt.composedPath();\n    let menuItem = null;\n    for (const elm of path) {\n      if ((elm as any).tagName === 'ZANE-MENU-ITEM') {\n        menuItem = elm;\n      }\n      if (elm !== this.host) continue;\n      if (evt.key === 'ArrowDown') {\n        evt.preventDefault();\n        this.focusNextItem(menuItem);\n      } else if (evt.key === 'ArrowUp') {\n        evt.preventDefault();\n        this.focusPreviousItem(menuItem);\n      }\n    }\n  }\n\n  /**\n   * 主渲染方法\n   * @returns {JSX.Element} 组件虚拟DOM结构\n   *\n   * @description\n   * 动态渲染逻辑：\n   * 1. 常规状态：渲染slot容器\n   * 2. 空状态：显示空状态组件\n   */\n  render() {\n    return (\n      <div class=\"menu\">\n        <div class=\"slot-container\">\n          <slot />\n        </div>\n\n        {this.renderEmptyState()}\n      </div>\n    );\n  }\n\n  /**\n   * 设置初始焦点\n   * @method\n   * @async\n   *\n   * @description\n   * 公共API方法：\n   * - 自动聚焦首个菜单项\n   * - 用于页面加载后的自动聚焦\n   * - 配合屏幕阅读器实现无障碍访问\n   */\n  @Method()\n  async setFocus() {\n    const firstMenuItem = this.getFirstItem();\n    firstMenuItem?.setFocus();\n  }\n\n  /**\n   * 聚焦上一个菜单项\n   * @private\n   * @param {HTMLElement} currentItem - 当前聚焦的菜单项元素\n   *\n   * @description\n   * 逆向焦点管理：\n   * 1. 从当前项开始向前查找\n   * 2. 到达开头时循环到最后项\n   * 3. 循环安全机制（while条件）\n   */\n  private focusPreviousItem(currentItem: HTMLElement) {\n    let previousItem: any = currentItem.previousElementSibling;\n    do {\n      if (\n        previousItem &&\n        previousItem.tagName === 'ZANE-MENU-ITEM' &&\n        !previousItem.disabled\n      ) {\n        previousItem.setFocus();\n        return;\n      }\n      previousItem = previousItem\n        ? previousItem.previousElementSibling\n        : this.getLastItem();\n    } while (previousItem !== currentItem);\n  }\n\n  /**\n   * 渲染空状态组件\n   * @private\n   * @returns {JSX.Element|null} 空状态组件或null\n   *\n   * @description\n   * 条件渲染逻辑：\n   * 当empty=true时渲染zane-empty-state组件\n   * 传递headline和description属性\n   */\n  private renderEmptyState() {\n    if (this.empty)\n      return (\n        <zane-empty-state\n          class=\"empty-menu\"\n          description={this.emptyStateDescription}\n          headline={this.emptyStateHeadline}\n        />\n      );\n  }\n}\n","@use '../../../global/styles/commons';\n\n:host {\n  display: block;\n}\n\n$border-width: 2px;\n\n.menu-item {\n  box-sizing: border-box;\n  display: flex;\n  gap: commons.v(--spacing-02);\n  align-items: center;\n  min-height: 2.5rem;\n  padding-inline: calc(#{commons.v(--spacing-05)} - #{$border-width});\n  color: commons.v(--text-secondary);\n  text-decoration: none;\n  cursor: pointer;\n  border: $border-width solid transparent;\n\n  @include commons.font-style(body-compact-01);\n\n  .item-section {\n    display: flex;\n    align-items: center;\n\n    &.start {\n      width: 1.5rem;\n    }\n  }\n\n  .slot-main {\n    display: block;\n    flex: 1;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  .slot-end {\n    color: commons.v(--text-helper);\n  }\n}\n\n:host-context([size='sm']) {\n  .menu-item {\n    min-height: 2rem;\n  }\n}\n\n:host-context([size='md']) {\n  .menu-item {\n    min-height: 2.5rem;\n  }\n}\n\n:host-context([size='lg']) {\n  .menu-item {\n    min-height: 3rem;\n  }\n}\n\n.menu-item {\n  &:hover {\n    color: commons.v(--text-primary);\n    background: commons.v(--layer-hover);\n\n    .slot-end {\n      color: commons.v(--icon-01);\n    }\n  }\n\n  &.active {\n    background: var(--selected-ui);\n  }\n}\n\n@each $color in [primary, secondary, success, info, warning, error, white,\n  black]\n{\n  .menu-item#{'.color-' + $color} {\n    &:hover,\n    &.has-focus:not(.active) {\n      color: white;\n      background: commons.v(--color-#{$color});\n\n      .slot-end {\n        color: white;\n      }\n    }\n  }\n}\n\n.menu-item.color-danger {\n  &:hover,\n  &.has-focus:not(.active) {\n    color: white;\n    background: commons.v(--color-error);\n\n    .slot-end {\n      color: white;\n    }\n  }\n}\n\n.menu-item.has-focus:not(.active) {\n  outline: none;\n  border-color: commons.v(--color-primary);\n}\n\n.menu-item.disabled {\n  color: commons.v(--text-disabled) !important;\n  cursor: not-allowed;\n  background-color: commons.v(--disabled-01) !important;\n\n  &:hover,\n  &.has-focus:not(.active) {\n    color: commons.v(--text-disabled) !important;\n    background-color: commons.v(--disabled-01) !important;\n  }\n\n  &.active,\n  &.selected {\n    color: commons.v(--text-disabled) !important;\n    background-color: var(--disabled-01) !important;\n  }\n}\n\n.menu-item:not(.end-slot-has-content) {\n  .slot-end {\n    display: none;\n  }\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n} from '@stencil/core';\n\nimport { getComponentIndex } from '../../../utils';\n\n/**\n * 菜单项组件 (zane-menu-item)\n *\n * @component zane-menu-item\n * @slot - 主内容区域（必填）\n * @slot end - 右侧附加内容区域（如图标/徽章）\n * @shadow true\n *\n * @description\n * 实现标准导航菜单项的核心组件，提供：\n * - 多状态交互（正常/选中/禁用/聚焦）\n * - 8种语义化色彩主题\n * - 可选中标记功能（带对勾图标）\n * - 原生链接支持（href/target）\n * - 键盘导航支持（空格/回车触发）\n * - 无障碍ARIA兼容设计\n *\n * @example\n * <!-- 基础文本菜单项 -->\n * <zane-menu-item>个人中心</zane-menu-item>\n *\n * <!-- 带图标和选中状态的菜单项 -->\n * <zane-menu-item selected selectable>\n *   收件箱\n *   <zane-badge slot=\"end\">12</zane-badge>\n * </zane-menu-item>\n *\n * <!-- 作为链接的菜单项 -->\n * <zane-menu-item\n *   href=\"/settings\"\n *   color=\"primary\"\n *   target=\"_blank\">\n *   系统设置\n * </zane-menu-item>\n *\n * @designSystem\n * | 状态         | 视觉特征                     |\n * |--------------|----------------------------|\n * | 正常         | 浅灰背景，深灰文字          |\n * | 悬停         | 浅蓝色背景（#f0f7ff）       |\n * | 聚焦         | 2px蓝色边框（#1a73e8）      |\n * | 选中         | 左侧蓝色条+对勾图标         |\n * | 禁用         | 50%透明度，阻止交互事件     |\n */\n@Component({\n  shadow: true,\n  styleUrl: 'menu-item.scss',\n  tag: 'zane-menu-item',\n})\nexport class MenuItem {\n  /**\n   * 菜单项色彩主题\n   * @prop {string} color - 预定义色彩方案，默认'default'\n   * @options\n   * - 'black'：深黑商务风\n   * - 'danger'：错误操作（红）\n   * - 'default'：中性灰（默认）\n   * - 'primary'：品牌主色（蓝）\n   * - 'secondary'：辅助色（紫）\n   * - 'success'：成功状态（绿）\n   * - 'warning'：警示操作（黄）\n   * - 'white'：浅色模式专用\n   */\n  @Prop() color:\n    | 'black'\n    | 'danger'\n    | 'default'\n    | 'primary'\n    | 'secondary'\n    | 'success'\n    | 'warning'\n    | 'white' = 'default';\n\n  /**\n   * 禁用状态开关\n   * @prop {boolean} disabled - 禁用交互并降低透明度（默认false）\n   * @designNote 禁用时阻止所有点击/键盘事件传递\n   */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  @Element() elm!: HTMLElement;\n\n  @State() endSlotHasContent = false;\n\n  gid: string = getComponentIndex();\n\n  @State() hasFocus = false;\n\n  /**\n   * 链接目标地址\n   * @prop {string} href - 设置后组件渲染为<a>元素（默认undefined）\n   * @behavior 点击时自动执行 window.open(href,  target)\n   */\n  @Prop({ reflect: true }) href: string;\n\n  @State() isActive = false;\n\n  /**\n   * 视觉层级\n   * @prop {string} layer - 背景透明度层级（默认继承父菜单）\n   * @options '01'|'02'|'background'\n   */\n  @Prop({ reflect: true }) layer?: '01' | '02' | 'background';\n\n  /**\n   * 可选状态开关\n   * @prop {boolean} selectable - 启用选中标记功能（默认false）\n   * @visualEffect 激活时显示左侧选中条和对勾图标\n   */\n  @Prop({ reflect: true }) selectable: boolean = false;\n\n  /**\n   * 选中状态\n   * @prop {boolean} selected - 标记为选中项（需selectable=true）\n   * @renderCondition 当selectable=true时显示选中状态视觉\n   */\n  @Prop({ reflect: true }) selected: boolean = false;\n\n  @State() startSlotHasContent = false;\n\n  /**\n   * 链接打开方式\n   * @prop {string} target - 同<a>标签target属性（默认'_self'）\n   */\n  @Prop() target: string = '_self';\n\n  /**\n   * 菜单项值\n   * @prop {string|number} value - 事件传递的标识值（默认innerText）\n   * @emitChange 点击事件中作为payload.value 传递\n   */\n  @Prop({ mutable: true }) value?: null | number | string;\n\n  /**\n   * 菜单项点击事件\n   * @event zane-menu-item--click\n   * @payload { value: string|number }\n   * @description 点击时触发（禁用状态不触发）\n   */\n  @Event({ eventName: 'zane-menu-item--click' })\n  zaneMenuItemClick: EventEmitter;\n\n  private nativeElement?: HTMLElement;\n  private tabindex?: number | string = 1;\n\n  async componentWillLoad() {\n    if (this.elm.hasAttribute('tabindex')) {\n      const tabindex = this.elm.getAttribute('tabindex');\n      this.tabindex = tabindex === null ? undefined : tabindex;\n      this.elm.removeAttribute('tabindex');\n    }\n    this.endSlotHasContent = !!this.elm.querySelector('[slot=\"end\"]');\n  }\n\n  /**\n   * 动态确定根元素类型\n   * @private\n   * @returns {'a'|'div'} href存在时为<a>，否则为<div>\n   */\n  getNativeElementTagName() {\n    return this.href ? 'a' : 'div';\n  }\n\n  /**\n   * 核心渲染逻辑\n   * @returns {JSX.Element} 组件虚拟DOM树\n   *\n   * @renderProcess\n   * 1. Host容器：承载状态属性（active/focus）\n   * 2. 动态根元素：根据href决定使用<a>或<div>\n   * 3. 三栏式布局：\n   *    - Start区：选中状态图标（条件渲染）\n   *    - Main区：默认插槽（主内容）\n   *    - End区：end插槽（附加内容）\n   *\n   * @a11y 实现：\n   * - aria-disabled：屏幕阅读器禁用状态声明\n   * - 键盘空格/回车：触发点击事件\n   * - 焦点可视化：has-focus状态样式\n   */\n  render = () => {\n    const NativeElementTag = this.getNativeElementTagName();\n\n    return (\n      <Host active={this.isActive} has-focus={this.hasFocus}>\n        <NativeElementTag\n          aria-disabled={this.disabled}\n          class={{\n            [`color-${this.color}`]: true,\n            active: this.isActive,\n            disabled: this.disabled,\n            'end-slot-has-content': this.endSlotHasContent,\n            'has-focus': this.hasFocus,\n            'menu-item': true,\n            selected: this.selected,\n          }}\n          href={this.href}\n          onBlur={this.blurHandler}\n          onClick={this.clickHandler}\n          onFocus={this.focusHandler}\n          onKeyDown={this.keyDownHandler}\n          onMouseDown={this.mouseDownHandler}\n          ref={(el) => (this.nativeElement = el as HTMLElement)}\n          tabindex={this.tabindex}\n          target={this.target}\n        >\n          {this.selectable && (\n            <div class=\"item-section start\">\n              {this.selected && (\n                <zane-icon class=\"checkmark\" name=\"checkmark\" />\n              )}\n            </div>\n          )}\n\n          <div class=\"item-section slot-main\">\n            <slot />\n          </div>\n\n          <div class=\"item-section slot-end\">\n            <slot name=\"end\" />\n          </div>\n        </NativeElementTag>\n      </Host>\n    );\n  };\n\n  /**\n   * 移除焦点方法\n   * @method setBlur\n   * @public\n   * @description 通过编程方式使菜单项失去焦点\n   * @usage 常用于菜单关闭时清除焦点状态\n   */\n  @Method()\n  async setBlur() {\n    if (this.nativeElement) {\n      this.nativeElement.blur();\n    }\n  }\n\n  /**\n   * 获取焦点方法\n   * @method setFocus\n   * @public\n   * @description 通过编程方式聚焦菜单项\n   * @usage 常用于键盘导航时移动焦点\n   */\n  @Method()\n  async setFocus() {\n    if (this.nativeElement) {\n      this.nativeElement.focus();\n    }\n  }\n\n  /**\n   * 全局键盘释放监听\n   * @listens window:keyup\n   * @private\n   * @param {KeyboardEvent} evt - 键盘事件对象\n   */\n  @Listen('keyup', { target: 'window' })\n  windowKeyUp(evt) {\n    if (this.isActive && evt.key === ' ') this.isActive = false;\n  }\n\n  /**\n   * 全局鼠标释放监听\n   * @listens window:mouseup\n   * @private\n   */\n  @Listen('mouseup', { target: 'window' })\n  windowMouseUp() {\n    if (this.isActive) this.isActive = false;\n  }\n\n  private blurHandler = () => {\n    this.hasFocus = false;\n  };\n\n  /**\n   * 点击事件处理器\n   * @private\n   * @param {MouseEvent} event - 原始点击事件\n   */\n  private clickHandler = (event) => {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      this.setFocus();\n      this.zaneMenuItemClick.emit({\n        value: this.value || this.elm.innerText,\n      });\n      if (this.href) window.open(this.href, this.target);\n    }\n  };\n\n  private focusHandler = () => {\n    this.hasFocus = true;\n  };\n\n  /**\n   * 键盘事件处理器\n   * @private\n   * @param {KeyboardEvent} evt - 键盘事件对象\n   */\n  private keyDownHandler = (evt) => {\n    if (evt.key === ' ' || evt.key === 'Enter') {\n      evt.preventDefault();\n      this.isActive = true;\n      this.clickHandler(evt);\n    }\n  };\n\n  private mouseDownHandler = () => {\n    this.isActive = true;\n  };\n}\n","/**\n * 元素尺寸枚举\n * 定义标准化的组件尺寸等级\n *\n * @remarks\n * 采用类似Bootstrap/Tailwind的尺寸命名约定\n * 适用于按钮、输入框、卡片等组件的尺寸控制\n */\nexport enum ElementSize {\n  /**\n   * 超大尺寸 (xxxl)\n   * @default 'xxxl'\n   */\n  EXTRA_EXTRA_EXTRA_LARGE = 'xxxl',\n\n  /**\n   * 特大尺寸 (xxl)\n   * @default 'xxl'\n   */\n  EXTRA_EXTRA_LARGE = 'xxl',\n\n  /**\n   * 加大尺寸 (xl)\n   * @default 'xl'\n   */\n  EXTRA_LARGE = 'xl',\n\n  /**\n   * 大尺寸 (lg)\n   * @default 'lg'\n   */\n  LARGE = 'lg',\n\n  /**\n   * 中等尺寸 (md)\n   * @default 'md'\n   */\n  MEDIUM = 'md',\n\n  /**\n   * 超小尺寸 (sm)\n   * @default 'sm'\n   */\n  SMALL = 'sm',\n}\n","@use '../../global/styles/commons';\n\n$tag-background-color: var(--tag-background-color, var(--tag-background-gray));\n$tag-color: var(--tag-color, var(--tag-color-gray));\n$tag-hover-color: var(--tag-hover-color, var(--tag-hover-gray));\n\n:host {\n  display: inline-block;\n}\n\n.tag {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  color: $tag-color;\n  background: $tag-background-color;\n\n  @include commons.font-style(label-01);\n\n  .tag-image {\n    width: 1.5rem;\n    height: 1.5rem;\n    background: $tag-hover-color;\n    border-radius: 100%;\n  }\n\n  .tag-content {\n    display: flex;\n    align-items: center;\n    max-width: 100%;\n    padding: 0 0.5rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  &.dismissible .tag-content {\n    padding-inline-end: 0.25rem;\n  }\n\n  &.selected {\n    color: var(--background);\n    background: $tag-hover-color;\n\n    .close-btn-icon {\n      color: var(--background);\n    }\n  }\n}\n\n.close-btn {\n  padding: 0;\n  margin: 0;\n  margin-inline-end: var(--spacing-01);\n  line-height: 0;\n  cursor: pointer;\n  background: transparent;\n  border: none;\n  border-radius: 12px;\n\n  &:hover {\n    background: $tag-hover-color;\n\n    .close-btn-icon {\n      color: var(--background);\n    }\n  }\n}\n\n/**\n * Sizes\n */\n.tag.size-md {\n  height: 1.5rem;\n  border-radius: 12px;\n}\n\n.tag.size-sm {\n  height: 1.125rem;\n  border-radius: 9px;\n}\n\n@each $color in [ 'gray', 'blue', 'green', 'red', 'yellow', 'primary',\n  'success', 'info', 'warning', 'error']\n{\n  .tag#{'.color-' + $color} {\n    --tag-background-color: var(--tag-background-#{$color});\n    --tag-color: var(--tag-color-#{$color});\n    --tag-hover-color: var(--tag-hover-#{$color});\n  }\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n} from '@stencil/core';\n\nimport { ElementSize } from '../../enums';\n\n/**\n * 多功能标签/徽章组件\n *\n * 提供灵活的内容展示能力，支持多种颜色主题、尺寸规格、可关闭操作和选中状态。\n * 适用于分类标记、状态指示、可选项选择等场景，可与表单组件或列表组件配合使用。\n *\n * @example\n * <!-- 基础用法 -->\n * <zane-tag>默认标签</zane-tag>\n *\n * <!-- 带关闭按钮 -->\n * <zane-tag dismissible>可关闭标签</zane-tag>\n *\n * <!-- 带图片 -->\n * <zane-tag image-src=\"/path/to/avatar.jpg\"> 用户标签</zane-tag>\n */\n@Component({\n  shadow: true,\n  styleUrl: 'tag.scss',\n  tag: 'zane-tag',\n})\nexport class Tag implements ComponentInterface {\n\n  /**\n   * 标签颜色主题\n   *\n   * 提供10种预设颜色方案，满足不同场景的视觉需求：\n   * - `blue`: 蓝色主题（中性信息）\n   * - `error`: 错误红色（操作失败/危险状态）\n   * - `gray`: 灰色主题（默认中性色）\n   * - `green`: 绿色主题（成功/完成状态）\n   * - `info`: 信息蓝（通知/提示信息）\n   * - `primary`: 品牌主色（重要内容）\n   * - `red`: 警示红色（紧急通知）\n   * - `success`: 成功绿色（操作成功）\n   * - `warning`: 警告黄色（注意/提醒）\n   * - `yellow`: 强调黄色（高亮显示）\n   *\n   * @type {'blue' | 'error' | 'gray' | 'green' | 'info' | 'primary' | 'red' | 'success' | 'warning' | 'yellow'}\n   * @prop color\n   * @default 'gray'\n   * @reflect\n   */\n  @Prop({ reflect: true }) color:\n    | 'blue'\n    | 'error'\n    | 'gray'\n    | 'green'\n    | 'info'\n    | 'primary'\n    | 'red'\n    | 'success'\n    | 'warning'\n    | 'yellow' = 'gray';\n\n  /**\n   * 是否显示关闭按钮\n   *\n   * 设置为 true 时，标签右侧显示关闭图标，点击触发 `zane-tag--dismiss` 事件\n   *\n   * @type {boolean}\n   * @prop dismissible\n   * @default false\n   */\n  @Prop() dismissible: boolean = false;\n\n  /**\n   * 宿主元素引用\n   *\n   * 用于访问组件对应的 DOM 元素\n   *\n   * @type {HTMLElement}\n   * @prop elm\n   */\n  @Element() elm!: HTMLElement;\n\n  /**\n   * 标签图片地址\n   *\n   * 设置后，在标签左侧显示指定图片（如用户头像）\n   *\n   * @type {string}\n   * @prop imageSrc\n   */\n  @Prop() imageSrc?: string;\n\n  /**\n   * 选中状态\n   *\n   * 表示标签是否被选中，常用于多选场景\n   *\n   * @type {boolean}\n   * @prop selected\n   * @default false\n   * @reflect\n   */\n  @Prop({ reflect: true }) selected: boolean = false;\n\n  /**\n   * 标签尺寸\n   *\n   * 控制标签的整体尺寸规格：\n   * - `md`: 中等尺寸（默认）\n   * - `sm`: 小型尺寸（紧凑布局）\n   *\n   * @type {'md' | 'sm'}\n   * @prop size\n   * @default 'md'\n   * @reflect\n   */\n  @Prop({ reflect: true }) size: 'md' | 'sm' = 'md';\n\n  /**\n   * 标签值\n   *\n   * 标签关联的业务数据值，在事件触发时作为参数传递\n   *\n   * @type {string}\n   * @prop value\n   * @default ''\n   * @reflect\n   */\n  @Prop({ reflect: true }) value: string = '';\n\n  /**\n   * 标签点击事件\n   *\n   * 当标签被点击时触发（不包括关闭按钮区域）\n   *\n   * @event zane-tag--click\n   * @type {EventEmitter}\n   */\n  @Event({ eventName: 'zane-tag--click' }) zaneClick: EventEmitter;\n\n  /**\n   * 标签关闭事件\n   *\n   * 当关闭按钮被点击时触发，传递标签的 value 或文本内容\n   *\n   * @event zane-tag--dismiss\n   * @type {EventEmitter<{ value: string }>}\n   */\n  @Event({ eventName: 'zane-tag--dismiss' }) zaneTagDismissClick: EventEmitter;\n\n  render() {\n    return (\n      <Host>\n        <div\n          class={{\n            [`color-${this.color}`]: true,\n            [`size-${this.size}`]: true,\n            dismissible: this.dismissible,\n            selected: this.selected,\n            tag: true,\n          }}\n        >\n          {this.renderImage()}\n          <div class=\"tag-content\">\n            <slot />\n          </div>\n          {this.renderCloseButton()}\n        </div>\n      </Host>\n    );\n  }\n\n  /**\n   * 渲染关闭按钮\n   *\n   * 当 dismissible 为 true 时渲染关闭按钮，点击触发关闭事件\n   *\n   * @returns {JSX.Element | null} 关闭按钮元素或 null\n   */\n  renderCloseButton() {\n    if (this.dismissible)\n      return (\n        <button class=\"close-btn\" onClick={() => this.dismissClickHandler()}>\n          <zane-icon\n            class=\"close-btn-icon inherit\"\n            name=\"close\"\n            size={this.getIconSize()}\n          ></zane-icon>\n        </button>\n      );\n  }\n\n  /**\n   * 渲染标签图片\n   *\n   * 当 imageSrc 存在时渲染图片元素\n   *\n   * @returns {JSX.Element | null} 图片元素或 null\n   */\n  renderImage() {\n    if (this.imageSrc)\n      return <img alt=\"Tag image\" class=\"tag-image\" src={this.imageSrc} />;\n  }\n\n  /**\n   * 关闭按钮点击处理器\n   *\n   * 触发 zane-tag--dismiss 事件，传递标签值或文本内容\n   *\n   * @private\n   */\n  private dismissClickHandler = () => {\n    this.zaneTagDismissClick.emit({\n      value: this.value || this.elm.textContent,\n    });\n  };\n\n  /**\n   * 获取关闭图标尺寸\n   *\n   * 根据标签尺寸返回对应的图标尺寸值\n   *\n   * @private\n   * @returns {string} 图标尺寸值\n   */\n  private getIconSize() {\n    switch (this.size) {\n      case ElementSize.MEDIUM: {\n        return '1.25rem';\n      }\n      case ElementSize.SMALL: {\n        return '1rem';\n      }\n      default: {\n        return '1rem';\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"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"}