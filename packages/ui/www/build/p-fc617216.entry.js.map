{"version":3,"names":["formControlCss","FormControl","constructor","hostRef","this","inline","invalid","required","skeleton","warn","componentDidLoad","elm","setAttribute","controlElm","getInputElement","passRequiredToField","passLabelToField","label","componentShouldUpdate","newVal","_oldVal","propName","compName","querySelector","getLabel","h","class","el","oldProps","configAria","Object","assign","render","Host","key","renderHelper","invalidText","warnText","helperText"],"sources":["src/components/form-control/form-control.scss?tag=zane-form-control&encapsulation=shadow","src/components/form-control/form-control.tsx"],"sourcesContent":["@use '../../global/styles/common-input';\n\n:host(.form-field) {\n  margin-bottom: common-input.v(--spacing-07);\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  h,\n  Host,\n  Prop,\n} from '@stencil/core';\n\n/**\n * 表单控件容器组件\n * @Component 装饰器定义组件元数据\n * @shadow 启用Shadow DOM封装\n * @styleUrl 组件样式表路径\n * @tag 组件自定义标签名称\n */\n@Component({\n  shadow: true,\n  styleUrl: 'form-control.scss',\n  tag: 'zane-form-control',\n})\nexport class FormControl implements ComponentInterface {\n  /**\n   * 宿主元素引用\n   * @Element 装饰器获取宿主元素\n   */\n  @Element() elm!: HTMLElement;\n\n  /**\n   * 辅助文本\n   * 显示在表单控件下方的帮助信息\n   * @Prop\n   */\n  @Prop() helperText: string;\n\n  /**\n   * 是否为内联布局\n   * @Prop 装饰器，reflect表示会反映到DOM属性上\n   * 默认值为false\n   */\n  @Prop({ reflect: true }) inline: boolean = false;\n\n  /**\n   * 是否为无效状态\n   * @Prop\n   */\n  @Prop() invalid: boolean = false;\n\n  /**\n   * 无效状态提示文本\n   * @Prop\n   */\n  @Prop() invalidText: string;\n\n  /**\n   * 标签文本\n   * @Prop\n   */\n  @Prop() label: string;\n\n  /**\n   * 是否为必填项\n   * @Prop\n   */\n  @Prop() required: boolean = false;\n\n  /**\n   * 是否显示骨架屏\n   * 用于加载状态\n   * @Prop\n   */\n  @Prop() skeleton: boolean = false;\n\n  /**\n   * 是否为警告状态\n   * @Prop\n   */\n  @Prop() warn: boolean = false;\n\n  /**\n   * 警告状态提示文本\n   * @Prop\n   */\n  @Prop() warnText: string;\n\n  /**\n   * 组件加载完成生命周期钩子\n   * 设置ARIA角色并传递属性到内部表单控件\n   */\n  componentDidLoad() {\n    this.elm.setAttribute('role', 'group');\n    const controlElm = this.getInputElement();\n    this.passRequiredToField(controlElm, this.required);\n    this.passLabelToField(controlElm, this.label);\n  }\n\n  /**\n   * 组件是否应该更新的生命周期钩子\n   * 用于在特定属性变化时更新内部表单控件\n   */\n  componentShouldUpdate(newVal: any, _oldVal, propName: string) {\n    if (propName === 'required') {\n      this.passRequiredToField(this.getInputElement(), newVal);\n    } else if (propName === 'label') {\n      this.passLabelToField(this.getInputElement(), newVal);\n    }\n  }\n\n  /**\n   * 获取内部表单控件元素\n   * 支持多种表单控件类型\n   * @returns 找到的表单控件元素或undefined\n   */\n  getInputElement() {\n    for (const compName of [\n      'zane-input',\n      'zane-textarea',\n      'zane-select',\n      'zane-checkbox',\n      'zane-radio',\n      'zane-code-editor',\n    ]) {\n      const controlElm = this.elm.querySelector(`${compName}`);\n      if (controlElm) return controlElm;\n    }\n  }\n\n  /**\n   * 渲染标签\n   * 根据skeleton状态决定渲染真实标签还是骨架屏\n   * @returns 标签的虚拟DOM\n   */\n  getLabel() {\n    return this.skeleton ? (\n      <div class=\"label skeleton\" />\n    ) : (\n      <label class=\"label\">\n        {this.required && <span class=\"required\">*</span>}\n        {this.label}\n      </label>\n    );\n  }\n\n  /**\n   * 传递label属性到内部表单控件\n   * @param controlElm 表单控件元素\n   * @param label 标签文本\n   */\n  passLabelToField(controlElm: Element, label: string) {\n    if (controlElm) {\n      const el = controlElm as any;\n      const oldProps = el.configAria;\n      el.configAria = {\n        'aria-label': label,\n        ...oldProps,\n      };\n    }\n  }\n\n  /**\n   * 传递required属性到内部表单控件\n   * @param controlElm 表单控件元素\n   * @param required 是否必填\n   */\n  passRequiredToField(controlElm: Element, required: boolean) {\n    if (controlElm) {\n      const el = controlElm as any;\n      el.required = required;\n    }\n  }\n\n  /**\n   * 渲染组件\n   * @returns 组件虚拟DOM\n   */\n  render() {\n    return (\n      <Host invalid={this.invalid} warn={this.warn}>\n        <div class={{ 'form-control': true, inline: this.inline }}>\n          {this.label && this.getLabel()}\n          <div class=\"field\">\n            <slot />\n          </div>\n          {this.renderHelper()}\n        </div>\n      </Host>\n    );\n  }\n\n  /**\n   * 渲染辅助信息\n   * 根据状态显示不同的辅助文本\n   * @returns 辅助信息的虚拟DOM\n   */\n  renderHelper() {\n    if (this.invalid)\n      return <div class=\"helper invalid\">{this.invalidText}</div>;\n    else if (this.warn) return <div class=\"helper warn\">{this.warnText}</div>;\n    else if (this.helperText || this.helperText === '')\n      return <div class=\"helper text\">{this.helperText}</div>;\n  }\n}\n"],"mappings":"yDAAA,MAAMA,EAAiB,k2Q,MCqBVC,EAAW,MALxB,WAAAC,CAAAC,G,UAwB2BC,KAAMC,OAAY,MAMnCD,KAAOE,QAAY,MAkBnBF,KAAQG,SAAY,MAOpBH,KAAQI,SAAY,MAMpBJ,KAAIK,KAAY,KA4HzB,CAhHC,gBAAAC,GACEN,KAAKO,IAAIC,aAAa,OAAQ,SAC9B,MAAMC,EAAaT,KAAKU,kBACxBV,KAAKW,oBAAoBF,EAAYT,KAAKG,UAC1CH,KAAKY,iBAAiBH,EAAYT,KAAKa,M,CAOzC,qBAAAC,CAAsBC,EAAaC,EAASC,GAC1C,GAAIA,IAAa,WAAY,CAC3BjB,KAAKW,oBAAoBX,KAAKU,kBAAmBK,E,MAC5C,GAAIE,IAAa,QAAS,CAC/BjB,KAAKY,iBAAiBZ,KAAKU,kBAAmBK,E,EASlD,eAAAL,GACE,IAAK,MAAMQ,IAAY,CACrB,aACA,gBACA,cACA,gBACA,aACA,oBACC,CACD,MAAMT,EAAaT,KAAKO,IAAIY,cAAc,GAAGD,KAC7C,GAAIT,EAAY,OAAOA,C,EAS3B,QAAAW,GACE,OAAOpB,KAAKI,SACViB,EAAA,OAAKC,MAAM,mBAEXD,EAAO,SAAAC,MAAM,SACVtB,KAAKG,UAAYkB,EAAA,QAAMC,MAAM,YAAmB,KAChDtB,KAAKa,M,CAUZ,gBAAAD,CAAiBH,EAAqBI,GACpC,GAAIJ,EAAY,CACd,MAAMc,EAAKd,EACX,MAAMe,EAAWD,EAAGE,WACpBF,EAAGE,WACDC,OAAAC,OAAA,cAAcd,GACXW,E,EAUT,mBAAAb,CAAoBF,EAAqBN,GACvC,GAAIM,EAAY,CACd,MAAMc,EAAKd,EACXc,EAAGpB,SAAWA,C,EAQlB,MAAAyB,GACE,OACEP,EAACQ,EAAI,CAAAC,IAAA,2CAAC5B,QAASF,KAAKE,QAASG,KAAML,KAAKK,MACtCgB,EAAA,OAAAS,IAAA,2CAAKR,MAAO,CAAE,eAAgB,KAAMrB,OAAQD,KAAKC,SAC9CD,KAAKa,OAASb,KAAKoB,WACpBC,EAAK,OAAAS,IAAA,2CAAAR,MAAM,SACTD,EAAA,QAAAS,IAAA,8CAED9B,KAAK+B,gB,CAWd,YAAAA,GACE,GAAI/B,KAAKE,QACP,OAAOmB,EAAA,OAAKC,MAAM,kBAAkBtB,KAAKgC,kBACtC,GAAIhC,KAAKK,KAAM,OAAOgB,EAAA,OAAKC,MAAM,eAAetB,KAAKiC,eACrD,GAAIjC,KAAKkC,YAAclC,KAAKkC,aAAe,GAC9C,OAAOb,EAAA,OAAKC,MAAM,eAAetB,KAAKkC,W","ignoreList":[]}