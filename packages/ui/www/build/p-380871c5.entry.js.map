{"version":3,"names":["avatarCss","Avatar","constructor","hostRef","this","name","size","src","render","cssCls","push","h","Host","key","title","class","join","style","fontSize","getFontSize","height","width","alt","getInitials","match","replace","split","firstName","charAt","toUpperCase","lastName"],"sources":["src/components/avatar/avatar.scss?tag=zane-avatar&encapsulation=shadow","src/components/avatar/avatar.tsx"],"sourcesContent":["@use \"../../global/styles/commons\";\n\n:host {\n  display: inline-block;\n  pointer-events: none;\n}\n\n.avatar-container {\n  display: flex;\n  align-items: center;\n  gap: commons.v(--spacing-02);\n  line-height: 0;\n}\n\n.avatar {\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n  color: v(--field-01);\n\n  .image {\n    width: 100%;\n    height: 100%;\n  }\n\n  @include commons.font-style(text-md);\n}\n\n:host(.square) {\n  .avatar {\n    border-radius: 10px;\n  }\n}\n\n.avatar.avatar-initials {\n  background: var(--avatar-bg-color, commons.v(--color-brand-primary));\n}\n\n.avatar.avatar-image {\n  background: commons.v(--color-brand-primary-30);\n}\n\n:host(.inverted) {\n  .avatar {\n    color: commons.v(--color-brand-primary);\n  }\n\n  .avatar.avatar-initials {\n    background: var(--avatar-bg-color, commons.v(--color-white));\n  }\n\n}\n","import { Component, Element, h, Host, Prop } from '@stencil/core';\n\n/**\n * @name Avatar\n * @description The Avatar component is used to represent user, and displays the profile picture, initials or fallback icon.\n * @category Data Display\n * @tags display\n * @example <zane-avatar size=\"5rem\" name=\"Shivaji Varma\" src=\"/assets/img/avatar.webp\"></zane-avatar>\n */\n@Component({\n  shadow: true,\n  styleUrl: 'avatar.scss',\n  tag: 'zane-avatar',\n})\nexport class Avatar {\n  @Element() elm!: HTMLElement;\n\n  @Prop() name: string = '';\n\n  /**\n   * Avatar size.\n   */\n  @Prop() size: string = '2rem';\n\n  @Prop() src: string = '';\n\n  render() {\n    const cssCls = ['avatar'];\n    if (this.src) {\n      cssCls.push('avatar-image');\n    } else {\n      cssCls.push('avatar-initials');\n    }\n    return (\n      <Host title={this.name}>\n        <div class=\"avatar-container\">\n          <div\n            class={cssCls.join(' ')}\n            style={{\n              fontSize: this.getFontSize(),\n              height: this.size,\n              width: this.size,\n            }}\n          >\n            {(() => {\n              return this.src ? (\n                <img alt={this.name} class=\"image\" src={this.src} />\n              ) : (\n                <div class=\"initials\">{this.getInitials()}</div>\n              );\n            })()}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  private getFontSize() {\n    const size = this.size;\n    const fontSize = this.size.match(/^\\d+(\\.\\d{1,2})?/)[0];\n    return (+fontSize * 4) / 10 + size.replace(/^\\d+(\\.\\d{1,2})?/, '');\n  }\n\n  private getInitials() {\n    const name = this.name.split(' ');\n    const firstName = name[0] ? name[0].charAt(0).toUpperCase() : '';\n    const lastName = name[1] ? name[1].charAt(0).toUpperCase() : '';\n    return `${firstName}${lastName}`;\n  }\n}\n"],"mappings":"yDAAA,MAAMA,EAAY,irG,MCcLC,EAAM,MALnB,WAAAC,CAAAC,G,UAQUC,KAAIC,KAAW,GAKfD,KAAIE,KAAW,OAEfF,KAAGG,IAAW,EA6CvB,CA3CC,MAAAC,GACE,MAAMC,EAAS,CAAC,UAChB,GAAIL,KAAKG,IAAK,CACZE,EAAOC,KAAK,e,KACP,CACLD,EAAOC,KAAK,kB,CAEd,OACEC,EAACC,EAAI,CAAAC,IAAA,2CAACC,MAAOV,KAAKC,MAChBM,EAAK,OAAAE,IAAA,2CAAAE,MAAM,oBACTJ,EACE,OAAAE,IAAA,2CAAAE,MAAON,EAAOO,KAAK,KACnBC,MAAO,CACLC,SAAUd,KAAKe,cACfC,OAAQhB,KAAKE,KACbe,MAAOjB,KAAKE,OAGb,KACQF,KAAKG,IACVI,EAAK,OAAAW,IAAKlB,KAAKC,KAAMU,MAAM,QAAQR,IAAKH,KAAKG,MAE7CI,EAAK,OAAAI,MAAM,YAAYX,KAAKmB,eAJ/B,K,CAaH,WAAAJ,GACN,MAAMb,EAAOF,KAAKE,KAClB,MAAMY,EAAWd,KAAKE,KAAKkB,MAAM,oBAAoB,GACrD,OAASN,EAAW,EAAK,GAAKZ,EAAKmB,QAAQ,mBAAoB,G,CAGzD,WAAAF,GACN,MAAMlB,EAAOD,KAAKC,KAAKqB,MAAM,KAC7B,MAAMC,EAAYtB,EAAK,GAAKA,EAAK,GAAGuB,OAAO,GAAGC,cAAgB,GAC9D,MAAMC,EAAWzB,EAAK,GAAKA,EAAK,GAAGuB,OAAO,GAAGC,cAAgB,GAC7D,MAAO,GAAGF,IAAYG,G","ignoreList":[]}