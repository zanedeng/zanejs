{"version":3,"file":"p-WqrX42U5.js","sources":["src/utils/isInViewport.ts"],"sourcesContent":["/**\n * 检测元素是否在视口(viewport)内可见\n * @param element - 要检测的DOM元素\n * @returns 返回元素是否至少部分可见于视口\n *\n * @remarks\n * 此函数检查元素是否与视口有交集，包括部分可见的情况\n * 完全不可见的元素包括：\n * 1. 位置固定但位于视口外的元素\n * 2. display: none 的元素\n * 3. 祖先元素有 display: none\n * 4. 透明度为0的元素\n *\n * @example\n * const element = document.getElementById('my-element');\n * if (isInViewport(element)) {\n *   // 执行元素进入视口的逻辑\n * }\n */\nexport function isInViewport(element: HTMLElement): boolean {\n  if (!element || !element.getBoundingClientRect) {\n    return false;\n  }\n\n  const rect = element.getBoundingClientRect();\n  const windowHeight =\n    window.innerHeight || document.documentElement.clientHeight;\n  const windowWidth = window.innerWidth || document.documentElement.clientWidth;\n\n  // 检测元素是否与视口有交集\n  return (\n    rect.top < windowHeight &&\n    rect.bottom > 0 &&\n    rect.left < windowWidth &&\n    rect.right > 0\n  );\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAkBG;AACG,SAAU,YAAY,CAAC,OAAoB,EAAA;IAC/C,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;AAC9C,QAAA,OAAO,KAAK;;AAGd,IAAA,MAAM,IAAI,GAAG,OAAO,CAAC,qBAAqB,EAAE;IAC5C,MAAM,YAAY,GAChB,MAAM,CAAC,WAAW,IAAI,QAAQ,CAAC,eAAe,CAAC,YAAY;IAC7D,MAAM,WAAW,GAAG,MAAM,CAAC,UAAU,IAAI,QAAQ,CAAC,eAAe,CAAC,WAAW;;AAG7E,IAAA,QACE,IAAI,CAAC,GAAG,GAAG,YAAY;QACvB,IAAI,CAAC,MAAM,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,WAAW;AACvB,QAAA,IAAI,CAAC,KAAK,GAAG,CAAC;AAElB;;;;"}