{"version":3,"file":"p-B2qBt7S7.js","sources":["src/utils/loadScript.ts","src/utils/waitUntil.ts"],"sourcesContent":["/**\n * 动态加载脚本\n * @param src - 脚本URL\n * @param options - 加载选项\n * @param options.async - 控制脚本是否异步加载。设置为 true 时，脚本会异步加载（不阻塞HTML解析）\n * @param options.attrs - 设置自定义HTML属性\n * @param options.crossOrigin - 控制跨域请求的CORS设置。`anonymous`：跨域请求不发送凭据（默认），'use-credentials'：跨域请求发送凭据（如cookies）\n * @param options.defer - 延迟脚本执行。 设置为 true 时，脚本会在HTML解析完成后、DOMContentLoaded事件前按顺序执行\n * @param options.integrity - 子资源完整性校验（SRI）。\n * @returns Promise在脚本加载完成后解析\n * @throws 当脚本加载失败时抛出错误\n *\n * @example\n * // 基本使用\n * await loadScript('https://example.com/script.js');\n *\n * @example\n * // 带选项使用\n * await loadScript('lib.js', {\n *   async: true,\n *   integrity: 'sha256-abc123'\n * });\n */\nexport function loadScript(\n  src: string,\n  options: {\n    async?: boolean;\n    attrs?: Record<string, string>;\n    crossOrigin?: 'anonymous' | 'use-credentials';\n    defer?: boolean;\n    integrity?: string;\n  } = {},\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement('script');\n    script.src = src;\n\n    // 设置标准属性\n    if (options.async) script.async = true;\n    if (options.defer) script.defer = true;\n    if (options.integrity) script.integrity = options.integrity;\n    if (options.crossOrigin) script.crossOrigin = options.crossOrigin;\n\n    // 设置自定义属性\n    if (options.attrs) {\n      for (const [key, value] of Object.entries(options.attrs)) {\n        script.setAttribute(key, value);\n      }\n    }\n\n    // 修正事件监听器类型\n    const onLoad = () => {\n      resolve();\n      cleanup();\n    };\n\n    const onError = () => {\n      reject(new Error(`Failed to load script: ${src}`));\n      cleanup();\n    };\n\n    script.addEventListener('load', onLoad);\n    script.addEventListener('error', onError);\n\n    // 添加到DOM\n    document.head.append(script);\n\n    // 清理函数\n    const cleanup = () => {\n      script.removeEventListener('load', onLoad);\n      script.removeEventListener('error', onError);\n      if (script.parentNode) {\n        script.remove();\n      }\n    };\n  });\n}\n","/**\n * 等待直到条件满足或超时\n * @param condition - 条件函数，返回布尔值表示条件是否满足\n * @param timeout - 检查条件的时间间隔，默认为300毫秒\n * @returns Promise，当条件满足时解析为1\n */\nexport async function waitUntil(\n  condition: () => boolean,\n  timeout: number = 300,\n): Promise<number> {\n  return await new Promise<number>((resolve) => {\n    // 设置定时器，定期检查条件是否满足\n    const interval = setInterval(() => {\n      // 调用条件函数检查是否满足\n      if (condition()) {\n        // 条件满足时，解析Promise并清除定时器\n        resolve(1);\n        clearInterval(interval);\n      }\n    }, timeout);\n  });\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;AAsBG;SACa,UAAU,CACxB,GAAW,EACX,UAMI,EAAE,EAAA;IAEN,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;QACrC,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;AAC/C,QAAA,MAAM,CAAC,GAAG,GAAG,GAAG;;QAGhB,IAAI,OAAO,CAAC,KAAK;AAAE,YAAA,MAAM,CAAC,KAAK,GAAG,IAAI;QACtC,IAAI,OAAO,CAAC,KAAK;AAAE,YAAA,MAAM,CAAC,KAAK,GAAG,IAAI;QACtC,IAAI,OAAO,CAAC,SAAS;AAAE,YAAA,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS;QAC3D,IAAI,OAAO,CAAC,WAAW;AAAE,YAAA,MAAM,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW;;AAGjE,QAAA,IAAI,OAAO,CAAC,KAAK,EAAE;AACjB,YAAA,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACxD,gBAAA,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC;;;;QAKnC,MAAM,MAAM,GAAG,MAAK;AAClB,YAAA,OAAO,EAAE;AACT,YAAA,OAAO,EAAE;AACX,SAAC;QAED,MAAM,OAAO,GAAG,MAAK;YACnB,MAAM,CAAC,IAAI,KAAK,CAAC,0BAA0B,GAAG,CAAA,CAAE,CAAC,CAAC;AAClD,YAAA,OAAO,EAAE;AACX,SAAC;AAED,QAAA,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC;AACvC,QAAA,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,OAAO,CAAC;;AAGzC,QAAA,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;;QAG5B,MAAM,OAAO,GAAG,MAAK;AACnB,YAAA,MAAM,CAAC,mBAAmB,CAAC,MAAM,EAAE,MAAM,CAAC;AAC1C,YAAA,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,OAAO,CAAC;AAC5C,YAAA,IAAI,MAAM,CAAC,UAAU,EAAE;gBACrB,MAAM,CAAC,MAAM,EAAE;;AAEnB,SAAC;AACH,KAAC,CAAC;AACJ;;AC5EA;;;;;AAKG;AACI,eAAe,SAAS,CAC7B,SAAwB,EACxB,UAAkB,GAAG,EAAA;AAErB,IAAA,OAAO,MAAM,IAAI,OAAO,CAAS,CAAC,OAAO,KAAI;;AAE3C,QAAA,MAAM,QAAQ,GAAG,WAAW,CAAC,MAAK;;YAEhC,IAAI,SAAS,EAAE,EAAE;;gBAEf,OAAO,CAAC,CAAC,CAAC;gBACV,aAAa,CAAC,QAAQ,CAAC;;SAE1B,EAAE,OAAO,CAAC;AACb,KAAC,CAAC;AACJ;;;;"}