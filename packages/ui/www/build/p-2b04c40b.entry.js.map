{"version":3,"names":["containerCss","Container","constructor","hostRef","this","size","render","h","Host","key","class"],"sources":["src/components/container/container.scss?tag=zane-container&encapsulation=shadow","src/components/container/container.tsx"],"sourcesContent":["@use \"../../global/styles/commons\";\n\n:host {\n  display: block;\n}\n\n.container-wrapper {\n  container: containerwrapper / inline-size;\n\n  &.size-max .container {\n    max-width: commons.v(--container-max);\n  }\n\n  &.size-xl .container {\n    max-width: commons.v(--container-xl);\n  }\n\n  &.size-sm .container {\n    max-width: commons.v(--container-sm);\n  }\n\n  &.size-md .container {\n    max-width: commons.v(--container-md);\n  }\n\n  &.size-lg .container {\n    max-width: commons.v(--container-lg);\n  }\n}\n\n\n\n.container {\n  margin: auto;\n  width: 100%;\n\n  .content {\n    padding: commons.v(--spacing-05);\n  }\n}\n\n:host(.debug) {\n  border: 1px solid red;\n  border-width: 0 1px;\n  background: var(--color-error-10);\n\n  .container {\n    border: 1px solid blue;\n    border-width: 0 1px;\n    background: var(--color-blue-10);\n\n    .content {\n      border: 1px solid green;\n      border-width: 0 1px;\n      background: var(--color-green-10);\n    }\n  }\n}\n\n@container containerwrapper (max-width: 671px) {\n  .content {\n    margin-inline: 0;\n  }\n}\n\n@container containerwrapper (min-width: 672px) {\n  .content {\n    margin-inline: var(--spacing-05);\n  }\n}\n\n@container containerwrapper (min-width: 1056px) {\n  .content {\n    margin-inline: var(--spacing-05);\n  }\n}\n\n@container containerwrapper (min-width: 1312px) {\n  .content {\n    margin-inline: var(--spacing-05);\n  }\n}\n\n@container containerwrapper (min-width: 1584px) {\n  .content {\n    margin-inline: var(--spacing-06);\n  }\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  h,\n  Host,\n  Prop,\n} from '@stencil/core';\n\n@Component({\n  shadow: true,\n  styleUrl: 'container.scss',\n  tag: 'zane-container',\n})\nexport class Container implements ComponentInterface {\n  @Element() host!: HTMLElement;\n\n  @Prop({ reflect: true })\n  size: 'full' | 'lg' | 'max' | 'md' | 'sm' | 'xl' = 'full';\n\n  render() {\n    return (\n      <Host>\n        <div\n          class={{\n            [`size-${this.size}`]: true,\n            'container-wrapper': true,\n          }}\n        >\n          <div class=\"container\">\n            <div class=\"content\">\n              <slot />\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"yDAAA,MAAMA,EAAe,6vN,MCcRC,EAAS,MALtB,WAAAC,CAAAC,G,UASEC,KAAIC,KAA+C,MAoBpD,CAlBC,MAAAC,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAA,OAAAE,IAAA,2CACEC,MAAO,CACL,CAAC,QAAQN,KAAKC,QAAS,KACvB,oBAAqB,OAGvBE,EAAK,OAAAE,IAAA,2CAAAC,MAAM,aACTH,EAAK,OAAAE,IAAA,2CAAAC,MAAM,WACTH,EAAA,QAAAE,IAAA,gD","ignoreList":[]}