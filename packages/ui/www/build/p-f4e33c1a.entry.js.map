{"version":3,"names":["modalCss","Modal","constructor","hostRef","this","hideClose","managed","open","showLoader","size","closeModal","zaneModalClose","emit","render","h","Host","key","class","role","onClick","event","target","classList","contains","modal","subheading","color","type","heading","darkModeColor","icon","title","variant","name","watchHandler","newValue","document","body","style","overflow"],"sources":["src/components/modal/modal/modal.scss?tag=zane-modal&encapsulation=shadow","src/components/modal/modal/modal.tsx"],"sourcesContent":["@use '../../../global/styles/commons';\n\n:host {\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: var(--z-index-modal);\n  display: none;\n  width: 100vw;\n  height: 100vh;\n}\n\n:host([open]) {\n  display: block;\n}\n\n.modal-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;\n  height: 100vh;\n\n  .modal-overlay {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    content: '';\n    background: var(--overlay);\n  }\n\n  .modal--wrapper {\n    z-index: 1;\n    width: 100vw;\n    height: 100vh;\n    padding: 10% 0 var(--spacing-09) 0;\n    overflow: auto;\n  }\n}\n\n.modal {\n  width: 100%;\n  margin: auto;\n  background: var(--layer-01);\n\n  .modal__content {\n    padding: 0 0 var(--spacing-09);\n  }\n\n  .modal-header {\n    display: flex;\n\n    .modal-heading-section {\n      flex: 1;\n      padding: 1rem 0 0 1rem;\n      margin-bottom: 1rem;\n\n      .modal-heading {\n        margin-bottom: 0;\n      }\n    }\n  }\n\n  .action-container {\n    display: flex;\n    flex-direction: row-reverse;\n\n    .close-icon {\n      --zane-button-height: 3rem;\n      --zane-button-border-radius: 0;\n    }\n  }\n\n  /*\n   * Loader styles\n   */\n  &.show-loader {\n    position: relative;\n  }\n\n  .modal__loading {\n    position: absolute;\n    top: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n\n    .modal__loading-background {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      content: '';\n      background: var(--overlay);\n    }\n  }\n}\n\n/**\n  * SIZES\n  */\n\n:host([size='xs']) {\n  @include commons.for-phone-only {\n    .modal {\n      width: 100%;\n    }\n  }\n\n  @include commons.for-tablet-portrait-up {\n    .modal {\n      width: 48%;\n    }\n  }\n\n  @include commons.for-tablet-landscape-up {\n    .modal {\n      width: 32%;\n    }\n  }\n\n  @include commons.for-desktop-up {\n    .modal {\n      width: 24%;\n    }\n  }\n}\n\n:host([size='sm']) {\n  @include commons.for-phone-only {\n    .modal {\n      width: 100%;\n    }\n  }\n\n  @include commons.for-tablet-portrait-up {\n    .modal {\n      width: 60%;\n    }\n  }\n\n  @include commons.for-tablet-landscape-up {\n    .modal {\n      width: 42%;\n    }\n  }\n\n  @include commons.for-desktop-up {\n    .modal {\n      width: 36%;\n    }\n  }\n}\n\n:host([size='md']) {\n  @include commons.for-phone-only {\n    .modal {\n      width: 100%;\n    }\n  }\n\n  @include commons.for-tablet-portrait-up {\n    .modal {\n      width: 84%;\n    }\n  }\n\n  @include commons.for-tablet-landscape-up {\n    .modal {\n      width: 60%;\n    }\n  }\n\n  @include commons.for-desktop-up {\n    .modal {\n      width: 48%;\n    }\n  }\n}\n\n:host([size='lg']) {\n  @include commons.for-phone-only {\n    .modal {\n      width: 100%;\n    }\n  }\n\n  @include commons.for-tablet-portrait-up {\n    .modal {\n      width: 96%;\n    }\n  }\n\n  @include commons.for-tablet-landscape-up {\n    .modal {\n      width: 84%;\n    }\n  }\n\n  @include commons.for-desktop-up {\n    .modal {\n      width: 72%;\n    }\n  }\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  Watch,\n} from '@stencil/core';\n\n/**\n * @name Modal\n * @description  Modals are used to display content in a layer above the app.\n * @category Informational\n * @subcategory Modal\n * @tags controls\n * @img /assets/img/modal.webp\n * @imgDark /assets/img/modal-dark.webp\n */\n@Component({\n  shadow: true,\n  styleUrl: 'modal.scss',\n  tag: 'zane-modal',\n})\nexport class Modal {\n  @Element() elm!: HTMLElement;\n\n  /*\n   * Specify the content of the modal heading.\n   */\n  @Prop({ reflect: true }) heading: string;\n\n  @Prop({ reflect: true }) hideClose: boolean = false;\n\n  /**\n   * Specify whether the Modal is managed by the parent component\n   */\n  @Prop() managed: boolean = false;\n\n  /**\n   * Specify whether the Modal is currently open\n   */\n  @Prop({ reflect: true }) open: boolean = false;\n\n  @Prop({ reflect: true }) showLoader: boolean = false;\n\n  @Prop({ reflect: true }) size: 'lg' | 'md' | 'sm' = 'md';\n\n  /*\n   * Specify the content of the modal subheading.\n   */\n  @Prop({ reflect: true }) subheading: string;\n\n  /**\n   * On click of button, a CustomEvent 'zane-modal--close' will be triggered.\n   */\n  @Event({ eventName: 'zane-modal--close' }) zaneModalClose: EventEmitter;\n\n  closeModal() {\n    if (!this.managed) {\n      this.open = false;\n    }\n    this.zaneModalClose.emit();\n  }\n\n  render() {\n    if (this.open)\n      return (\n        <Host>\n          <div\n            aria-labelledby=\"modal-heading\"\n            aria-modal=\"true\"\n            class=\"modal-container\"\n            role=\"dialog\"\n          >\n            <div class=\"modal-overlay\" />\n            <div\n              class=\"modal--wrapper\"\n              onClick={(event) => {\n                if (\n                  (event.target as HTMLElement).classList.contains(\n                    'modal--wrapper',\n                  )\n                )\n                  this.closeModal();\n              }}\n            >\n              <div\n                class={{\n                  [`size-${this.size}`]: true,\n                  modal: true,\n                  'show-loader': this.showLoader,\n                }}\n              >\n                <div class=\"modal-body\">\n                  <div class=\"modal-header\">\n                    <div class=\"modal-heading-section\">\n                      {this.subheading && (\n                        <zane-text\n                          class=\"modal-subheading\"\n                          color=\"secondary\"\n                          type=\"label\"\n                        >\n                          {this.subheading}\n                        </zane-text>\n                      )}\n\n                      {this.heading && (\n                        <zane-text\n                          class=\"modal-heading\"\n                          heading-size=\"3\"\n                          type=\"heading\"\n                        >\n                          {this.heading}\n                        </zane-text>\n                      )}\n                    </div>\n                    <div class=\"action-container\">\n                      {!this.hideClose && (\n                        <zane-button\n                          class=\"close-icon cancel-button\"\n                          color=\"black\"\n                          darkModeColor=\"white\"\n                          icon=\"close--large\"\n                          onZane-button--click={() => {\n                            this.closeModal();\n                          }}\n                          title=\"Close\"\n                          variant=\"ghost\"\n                        ></zane-button>\n                      )}\n                    </div>\n                  </div>\n\n                  <div class=\"modal__content\">\n                    <slot />\n                  </div>\n\n                  {this.showLoader && (\n                    <div class=\"modal__loading\">\n                      <div class=\"modal__loading-background\"></div>\n                      <zane-spinner size=\"2rem\"></zane-spinner>\n                    </div>\n                  )}\n                </div>\n\n                <div class=\"modal__footer\">\n                  <slot name=\"footer\"></slot>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Host>\n      );\n  }\n\n  @Watch('open')\n  watchHandler(newValue: boolean) {\n    document.body.style.overflow = newValue ? 'hidden' : 'visible';\n  }\n}\n"],"mappings":"gEAAA,MAAMA,EAAW,m3J,MCyBJC,EAAK,MALlB,WAAAC,CAAAC,G,0DAa2BC,KAASC,UAAY,MAKtCD,KAAOE,QAAY,MAKFF,KAAIG,KAAY,MAEhBH,KAAUI,WAAY,MAEtBJ,KAAIK,KAAuB,IAkHrD,CAtGC,UAAAC,GACE,IAAKN,KAAKE,QAAS,CACjBF,KAAKG,KAAO,K,CAEdH,KAAKO,eAAeC,M,CAGtB,MAAAC,GACE,GAAIT,KAAKG,KACP,OACEO,EAACC,EAAI,CAAAC,IAAA,4CACHF,EACkB,OAAAE,IAAA,6EACL,oBACXC,MAAM,kBACNC,KAAK,UAELJ,EAAK,OAAAE,IAAA,2CAAAC,MAAM,kBACXH,EACE,OAAAE,IAAA,2CAAAC,MAAM,iBACNE,QAAUC,IACR,GACGA,EAAMC,OAAuBC,UAAUC,SACtC,kBAGFnB,KAAKM,YAAY,GAGrBI,EAAA,OAAAE,IAAA,2CACEC,MAAO,CACL,CAAC,QAAQb,KAAKK,QAAS,KACvBe,MAAO,KACP,cAAepB,KAAKI,aAGtBM,EAAK,OAAAE,IAAA,2CAAAC,MAAM,cACTH,EAAK,OAAAE,IAAA,2CAAAC,MAAM,gBACTH,EAAK,OAAAE,IAAA,2CAAAC,MAAM,yBACRb,KAAKqB,YACJX,EAAA,aAAAE,IAAA,2CACEC,MAAM,mBACNS,MAAM,YACNC,KAAK,SAEJvB,KAAKqB,YAITrB,KAAKwB,SACJd,EAAA,aAAAE,IAAA,2CACEC,MAAM,gBACO,mBACbU,KAAK,WAEJvB,KAAKwB,UAIZd,EAAA,OAAAE,IAAA,2CAAKC,MAAM,qBACPb,KAAKC,WACLS,EACE,eAAAE,IAAA,2CAAAC,MAAM,2BACNS,MAAM,QACNG,cAAc,QACdC,KAAK,eACiB,4BACpB1B,KAAKM,YAAY,EAEnBqB,MAAM,QACNC,QAAQ,YAMhBlB,EAAK,OAAAE,IAAA,2CAAAC,MAAM,kBACTH,EAAA,QAAAE,IAAA,8CAGDZ,KAAKI,YACJM,EAAK,OAAAE,IAAA,2CAAAC,MAAM,kBACTH,EAAK,OAAAE,IAAA,2CAAAC,MAAM,8BACXH,EAAA,gBAAAE,IAAA,2CAAcP,KAAK,WAKzBK,EAAK,OAAAE,IAAA,2CAAAC,MAAM,iBACTH,EAAM,QAAAE,IAAA,2CAAAiB,KAAK,e,CAU3B,YAAAC,CAAaC,GACXC,SAASC,KAAKC,MAAMC,SAAWJ,EAAW,SAAW,S","ignoreList":[]}