{"version":3,"file":"zane-breadcrumb.entry.esm.js","sources":["src/components/breadcrumb/breadcrumb/breadcrumb.scss?tag=zane-breadcrumb&encapsulation=shadow","src/components/breadcrumb/breadcrumb/breadcrumb.tsx"],"sourcesContent":["@use '../../../global/styles/commons';\n\n:host {\n  display: block;\n  margin-bottom: commons.v(--spacing-02);\n}\n\n.breadcrumb {\n  display: flex;\n  align-items: center;\n}\n\nslot::slotted(*) {\n  &::before {\n    display: inline-block;\n    padding-right: commons.v(--spacing-03);\n    padding-left: commons.v(--spacing-03);\n    color: commons.v(--border-strong-01);\n    content: '/';\n  }\n}\n\nslot::slotted(*:first-child) {\n  &::before {\n    display: none;\n  }\n}\n","import { Component, ComponentInterface, Element, h, Host } from '@stencil/core';\n\n/**\n * 面包屑导航组件\n *\n * 用于显示当前页面在网站层次结构中的位置，并提供快速导航功能。\n *\n * @example\n * ```html\n * <zane-breadcrumb>\n *   <zane-breadcrumb-item href=\"/home\">首页</zane-breadcrumb-item>\n *   <zane-breadcrumb-item href=\"/products\">产品</zane-breadcrumb-item>\n *   <zane-breadcrumb-item>当前页面</zane-breadcrumb-item>\n * </zane-breadcrumb>\n * ```\n *\n * @Component 装饰器定义了组件的元数据\n * @property {boolean} shadow - 启用 Shadow DOM 封装\n * @property {string} styleUrl - 组件样式文件路径\n * @property {string} tag - 组件的自定义元素标签名\n */\n@Component({\n  shadow: true,\n  styleUrl: 'breadcrumb.scss',\n  tag: 'zane-breadcrumb',\n})\nexport class Breadcrumb implements ComponentInterface {\n  /**\n   * 对宿主元素的引用\n   *\n   * 使用 @Element() 装饰器自动注入宿主 DOM 元素。\n   * 这里声明为 HTMLElement 类型，表示可以访问标准 HTML 元素的所有属性和方法。\n   *\n   * @type {HTMLElement}\n   */\n  @Element() elm!: HTMLElement;\n\n  /**\n   * 组件即将加载生命周期钩子\n   *\n   * 在组件首次连接到 DOM 后、渲染之前调用。\n   * 这里用于初始化面包屑项的位置信息。\n   *\n   * 遍历所有子项(zane-breadcrumb-item)，为每个项设置 position 属性，\n   * 值从1开始递增，表示项在面包屑导航中的顺序位置。\n   *\n   * 这些位置信息可用于样式化或辅助功能。\n   */\n  componentWillLoad() {\n    this.elm.querySelectorAll('zane-breadcrumb-item').forEach((item, i) => {\n      item.position = `${i + 1}`;\n    });\n  }\n\n  /**\n   * 渲染函数\n   *\n   * 定义组件的 DOM 结构。\n   * 使用 Host 组件作为根元素，并添加微数据标记以增强 SEO。\n   *\n   * @returns {JSX.Element} 返回组件的 JSX 表示\n   */\n  render() {\n    return (\n      <Host itemscope itemtype=\"http://schema.org/BreadcrumbList\">\n        <div class=\"breadcrumb\">\n          <slot />\n        </div>\n      </Host>\n    );\n  }\n}\n"],"names":[],"mappings":";;AAAA,MAAM,aAAa,GAAG,ijGAAijG;;MC0B1jG,UAAU,GAAA,MAAA;;;;AAWrB;;;;;;;;;;AAUG;IACH,iBAAiB,GAAA;AACf,QAAA,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,KAAI;YACpE,IAAI,CAAC,QAAQ,GAAG,CAAA,EAAG,CAAC,GAAG,CAAC,EAAE;AAC5B,SAAC,CAAC;;AAGJ;;;;;;;AAOG;IACH,MAAM,GAAA;QACJ,QACE,EAAC,IAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAC,SAAS,EAAC,IAAA,EAAA,QAAQ,EAAC,kCAAkC,EAAA,EACzD,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,YAAY,EAAA,EACrB,CAAQ,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,CAAA,CACJ,CACD;;;;;;;;"}