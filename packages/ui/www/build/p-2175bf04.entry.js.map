{"version":3,"names":["dropdownCss","Dropdown","constructor","hostRef","this","disabled","managed","open","placements","trigger","hidePopover","closeEvent","emit","showPopover","setTimeout","menuRef","setFocus","openEvent","componentDidLoad","contentRef","host","querySelector","Error","popoverController","PopoverController","triggerRef","slotRef","assignedElements","nodeName","length","registerTarget","setTriggerRef","addEventListener","evt","zaneDropdownItemClick","detail","setFocusOnTrigger","key","preventDefault","componentDidUpdate","setOpen","computePositionThrottle","disconnectedCallback","destroy","render","h","Host","class","dropdown","ref","el","resizeHandler","focus","windowClickHandler"],"sources":["src/components/dropdown/dropdown/dropdown.scss?tag=zane-dropdown&encapsulation=shadow","src/components/dropdown/dropdown/dropdown.tsx"],"sourcesContent":["@use '../../../global/styles/commons';\n\n:host {\n  --dropdown-height: inherit;\n\n  display: inline-block;\n  height: var(--dropdown-height);\n}\n\n.dropdown {\n  display: inline-block;\n  height: var(--dropdown-height);\n\n  zane-menu {\n    --zane-menu-shadow: none;\n  }\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n} from '@stencil/core';\n\nimport PopoverController from '../../popover/popover/popover-controller';\n\n/**\n * @name Dropdown\n * @description Enables native inputs to be used within a Form field.\n * @category Navigation\n * @subcategory Dropdown\n * @img /assets/img/dropdown.webp\n * @imgDark /assets/img/dropdown-dark.webp\n */\n@Component({\n  shadow: true,\n  styleUrl: 'dropdown.scss',\n  tag: 'zane-dropdown',\n})\nexport class Dropdown implements ComponentInterface {\n  /**\n   * Emitted when the dropdown is closed.\n   */\n  @Event({ eventName: 'zane-dropdown--close' }) closeEvent: EventEmitter;\n\n  /**\n   * If true, the user cannot interact with the button. Defaults to `false`.\n   */\n  @Prop() disabled: boolean = false;\n  @Element() host!: HTMLElement;\n  @Prop({ reflect: true }) managed: boolean = false;\n  menuRef: HTMLZaneDropdownMenuElement;\n\n  @Prop({ mutable: true, reflect: true }) open: boolean = false;\n\n  /**\n   * Emitted when the dropdown is opened.\n   */\n  @Event({ eventName: 'zane-dropdown--open' }) openEvent: EventEmitter;\n\n  @Prop({ reflect: true }) placements: string =\n    'bottom-start,top-start,bottom-end,top-end';\n\n  popoverController: PopoverController;\n\n  slotRef: HTMLSlotElement;\n\n  @Prop({ reflect: true }) trigger: 'click' | 'hover' | 'manual' = 'click';\n\n  triggerRef: HTMLElement | HTMLZaneButtonElement;\n\n  @Event({ eventName: 'zane-dropdown--item-click' })\n  zaneDropdownItemClick: EventEmitter;\n\n  componentDidLoad() {\n    const contentRef = this.host.querySelector('zane-dropdown-menu');\n\n    if (!contentRef) {\n      throw new Error(\n        'zane-dropdown: The dropdown component must have a zane-dropdown-menu child component',\n      );\n    }\n\n    this.menuRef = contentRef;\n\n    this.popoverController = new PopoverController(\n      this.host,\n      this.trigger,\n      this.open,\n      contentRef,\n      0,\n      0,\n      this.showPopover,\n      this.hidePopover,\n      this.placements,\n    );\n\n    this.triggerRef = this.slotRef.assignedElements()[0] as HTMLElement;\n    if (this.triggerRef.nodeName === 'SLOT') {\n      const assignedElements = (\n        this.triggerRef as HTMLSlotElement\n      ).assignedElements();\n      if (assignedElements.length > 0) {\n        this.triggerRef = assignedElements[0] as HTMLSlotElement;\n      }\n    }\n\n    this.popoverController.registerTarget(this.triggerRef);\n    this.popoverController.setTriggerRef(this.triggerRef);\n\n    this.host.addEventListener('zane-menu-item--click', (evt: CustomEvent) => {\n      this.zaneDropdownItemClick.emit(evt.detail);\n      this.setFocusOnTrigger();\n      this.popoverController.hidePopover();\n    });\n\n    this.host.addEventListener('keydown', (evt) => {\n      if (evt.key === 'Escape') {\n        evt.preventDefault();\n        this.popoverController.hidePopover();\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    this.popoverController.setOpen(this.open);\n    if (this.open) {\n      this.popoverController.computePositionThrottle('onUpdate');\n    }\n  }\n\n  disconnectedCallback() {\n    this.popoverController.destroy();\n  }\n\n  hidePopover = () => {\n    this.open = false;\n    this.closeEvent.emit();\n  };\n\n  render() {\n    return (\n      <Host>\n        <div\n          class={{\n            dropdown: true,\n            open: this.open,\n          }}\n        >\n          <slot ref={(el) => (this.slotRef = el as HTMLSlotElement)} />\n        </div>\n      </Host>\n    );\n  }\n\n  @Listen('resize', { target: 'window' })\n  resizeHandler() {\n    this.popoverController.computePositionThrottle('resize');\n  }\n\n  @Method()\n  async setFocus() {\n    this.setFocusOnTrigger();\n  }\n\n  setFocusOnTrigger() {\n    (this.triggerRef as HTMLZaneButtonElement).setFocus\n      ? (this.triggerRef as HTMLZaneButtonElement).setFocus()\n      : this.triggerRef.focus();\n  }\n\n  showPopover = () => {\n    this.open = true;\n    setTimeout(() => {\n      this.menuRef.setFocus();\n      this.openEvent.emit();\n    });\n  };\n\n  @Listen('click', { target: 'window' })\n  windowClickHandler(evt) {\n    this.popoverController.windowClickHandler(evt);\n  }\n}\n"],"mappings":"oJAAA,MAAMA,EAAc,ghF,MC4BPC,EAAQ,MALrB,WAAAC,CAAAC,G,qKAcUC,KAAQC,SAAY,MAEHD,KAAOE,QAAY,MAGJF,KAAIG,KAAY,MAO/BH,KAAUI,WACjC,4CAMuBJ,KAAOK,QAAiC,QAoEjEL,KAAWM,YAAG,KACZN,KAAKG,KAAO,MACZH,KAAKO,WAAWC,MAAM,EAkCxBR,KAAWS,YAAG,KACZT,KAAKG,KAAO,KACZO,YAAW,KACTV,KAAKW,QAAQC,WACbZ,KAAKa,UAAUL,MAAM,GACrB,CAOL,CA7GC,gBAAAM,GACE,MAAMC,EAAaf,KAAKgB,KAAKC,cAAc,sBAE3C,IAAKF,EAAY,CACf,MAAM,IAAIG,MACR,uF,CAIJlB,KAAKW,QAAUI,EAEff,KAAKmB,kBAAoB,IAAIC,EAC3BpB,KAAKgB,KACLhB,KAAKK,QACLL,KAAKG,KACLY,EACA,EACA,EACAf,KAAKS,YACLT,KAAKM,YACLN,KAAKI,YAGPJ,KAAKqB,WAAarB,KAAKsB,QAAQC,mBAAmB,GAClD,GAAIvB,KAAKqB,WAAWG,WAAa,OAAQ,CACvC,MAAMD,EACJvB,KAAKqB,WACLE,mBACF,GAAIA,EAAiBE,OAAS,EAAG,CAC/BzB,KAAKqB,WAAaE,EAAiB,E,EAIvCvB,KAAKmB,kBAAkBO,eAAe1B,KAAKqB,YAC3CrB,KAAKmB,kBAAkBQ,cAAc3B,KAAKqB,YAE1CrB,KAAKgB,KAAKY,iBAAiB,yBAA0BC,IACnD7B,KAAK8B,sBAAsBtB,KAAKqB,EAAIE,QACpC/B,KAAKgC,oBACLhC,KAAKmB,kBAAkBb,aAAa,IAGtCN,KAAKgB,KAAKY,iBAAiB,WAAYC,IACrC,GAAIA,EAAII,MAAQ,SAAU,CACxBJ,EAAIK,iBACJlC,KAAKmB,kBAAkBb,a,KAK7B,kBAAA6B,GACEnC,KAAKmB,kBAAkBiB,QAAQpC,KAAKG,MACpC,GAAIH,KAAKG,KAAM,CACbH,KAAKmB,kBAAkBkB,wBAAwB,W,EAInD,oBAAAC,GACEtC,KAAKmB,kBAAkBoB,S,CAQzB,MAAAC,GACE,OACEC,EAACC,EAAI,CAAAT,IAAA,4CACHQ,EAAA,OAAAR,IAAA,2CACEU,MAAO,CACLC,SAAU,KACVzC,KAAMH,KAAKG,OAGbsC,EAAA,QAAAR,IAAA,2CAAMY,IAAMC,GAAQ9C,KAAKsB,QAAUwB,K,CAO3C,aAAAC,GACE/C,KAAKmB,kBAAkBkB,wBAAwB,S,CAIjD,cAAMzB,GACJZ,KAAKgC,mB,CAGP,iBAAAA,GACGhC,KAAKqB,WAAqCT,SACtCZ,KAAKqB,WAAqCT,WAC3CZ,KAAKqB,WAAW2B,O,CAYtB,kBAAAC,CAAmBpB,GACjB7B,KAAKmB,kBAAkB8B,mBAAmBpB,E","ignoreList":[]}