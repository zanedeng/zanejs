{"version":3,"file":"zane-text.entry.esm.js","sources":["src/components/text/text.scss?tag=zane-text&encapsulation=shadow","src/components/text/text.tsx"],"sourcesContent":["@use '../../global/styles/commons';\n\n:host {\n  display: block;\n  margin-bottom: commons.v(--spacing-03);\n}\n\n.native-element {\n  margin: 0;\n}\n\n:host([inline]),\n:host([type='code']) {\n  display: inline-block;\n  margin-bottom: 0;\n\n  .text {\n    display: inline-block;\n  }\n}\n\n:host([type='code']) {\n  padding-inline: 0.25rem;\n  background: commons.v(--border-subtle);\n  border-radius: commons.v(--border-radius);\n}\n\n/* *\n * heading styles\n */\n\n:host([type='heading']) {\n  margin-bottom: commons.v(--spacing-05);\n\n  .text {\n    @for $i from 1 through 7 {\n      &.heading-size-#{$i} {\n        .native-element {\n          @include commons.font-style(heading-0#{$i}, text);\n        }\n      }\n    }\n  }\n}\n\n/* *\n * fluid-heading styles\n */\n\n:host([type='fluid-heading']) {\n  margin-bottom: commons.v(--spacing-05);\n}\n\n@include commons.for-phone-only {\n  :host([type='fluid-heading']) .text {\n    @for $i from 3 through 6 {\n      &.heading-size-#{$i} {\n        .native-element {\n          @include commons.font-style(fluid-heading-0#{$i}-sm, text);\n        }\n      }\n    }\n  }\n}\n\n@include commons.for-tablet-portrait-up {\n  :host([type='fluid-heading']) .text {\n    @for $i from 3 through 6 {\n      &.heading-size-#{$i} {\n        .native-element {\n          @include commons.font-style(fluid-heading-0#{$i}-md, text);\n        }\n      }\n    }\n  }\n}\n\n@include commons.for-tablet-landscape-up {\n  :host([type='fluid-heading']) .text {\n    @for $i from 3 through 6 {\n      &.heading-size-#{$i} {\n        .native-element {\n          @include commons.font-style(fluid-heading-0#{$i}-lg, text);\n        }\n      }\n    }\n  }\n}\n\n@include commons.for-desktop-up {\n  :host([type='fluid-heading']) .text {\n    @for $i from 3 through 6 {\n      &.heading-size-#{$i} {\n        .native-element {\n          @include commons.font-style(fluid-heading-0#{$i}-xl, text);\n        }\n      }\n    }\n  }\n}\n\n@include commons.for-big-desktop-up {\n  :host([type='fluid-heading']) .text {\n    @for $i from 3 through 6 {\n      &.heading-size-#{$i} {\n        .native-element {\n          @include commons.font-style(fluid-heading-0#{$i}-max, text);\n        }\n      }\n    }\n  }\n}\n\n/* *\n * Other styles\n */\n\n$types: 'body', 'body-compact', 'code', 'helper', 'legal', 'label';\n\n@each $type in $types {\n  :host([type='#{$type}']) {\n    .native-element {\n      @include commons.font-style(#{$type}-01, text);\n    }\n\n    .expressive .native-element {\n      @include commons.font-style(#{$type}-02, text);\n    }\n  }\n}\n\n:host([type='code']) .native-element {\n  word-break: break-all;\n}\n\n:host {\n  color: var(--text-color, var(--text-primary));\n\n  &:host([color='secondary']) {\n    color: var(--text-secondary);\n  }\n\n  &:host([color='tertiary']),\n  &:host([color='helper']) {\n    color: var(--text-helper);\n  }\n\n  &:host([color='error']) {\n    color: var(--text-error);\n  }\n\n  &:host([color='inverse']) {\n    color: var(--text-inverse);\n  }\n}\n\n:host(.inherit) {\n  color: inherit;\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  h,\n  Host,\n  Prop,\n} from '@stencil/core';\n\n/**\n * 多功能文本展示组件\n *\n * 提供丰富的文本样式和语义化支持，满足不同场景的文本展示需求。支持多种文本类型、\n * 颜色主题、标题级别和响应式文本大小，集成了完善的 ARIA 可访问性支持。\n *\n * @example\n * <!-- 基础文本 -->\n * <zane-text>普通段落文本</zane-text>\n *\n * <!-- 标题文本 -->\n * <zane-text type=\"heading\" heading-level=\"2\">二级标题</zane-text>\n *\n * <!-- 带颜色的辅助文本 -->\n * <zane-text type=\"helper-text\" color=\"helper\">表单提示文本</zane-text>\n */\n\n@Component({\n  shadow: true,\n  styleUrl: 'text.scss',\n  tag: 'zane-text',\n})\nexport class Text implements ComponentInterface {\n  /**\n   * 文本颜色主题\n   *\n   * 提供7种预设颜色方案，满足不同场景的视觉需求：\n   * - `primary`: 主要文本颜色（默认）\n   * - `secondary`: 次要文本颜色（较浅）\n   * - `tertiary`: 三级文本颜色（最浅）\n   * - `error`: 错误状态文本（红色系）\n   * - `helper`: 辅助说明文本（灰色系）\n   * - `inverse`: 反色文本（深色背景使用）\n   * - `on-color`: 彩色背景上的文本\n   *\n   * @prop color\n   * @type {'primary' | 'secondary' | 'tertiary' | 'error' | 'helper' | 'inverse' | 'on-color'}\n   * @default 'primary'\n   * @reflect\n   */\n  @Prop({ reflect: true }) color:\n    | 'error'\n    | 'helper'\n    | 'inverse'\n    | 'on-color'\n    | 'primary'\n    | 'secondary'\n    | 'tertiary' = 'primary';\n\n  /**\n   * ARIA 属性配置\n   *\n   * 用于存储动态收集的 ARIA 属性，提高组件的可访问性。\n   * 组件会自动收集元素上的所有 aria-* 属性并转移到内部元素。\n   *\n   * @prop configAria\n   * @type {any}\n   * @mutable\n   * @reflect\n   */\n  @Prop({ mutable: true, reflect: true }) configAria: any = {};\n\n  /**\n   * 宿主元素引用\n   *\n   * 用于访问组件对应的 DOM 元素\n   *\n   * @prop elm\n   * @type {HTMLElement}\n   */\n  @Element() elm!: HTMLElement;\n\n  /**\n   * 情感化文本模式\n   *\n   * 启用特殊的情感化排版样式，通常用于突出重要内容：\n   * - 更大的字号间距\n   * - 更丰富的字体变化\n   * - 增强的视觉层次\n   *\n   * @prop expressive\n   * @type {boolean}\n   * @default false\n   * @reflect\n   */\n  @Prop({ reflect: true }) expressive: boolean = false;\n\n  /**\n   * 标题语义级别\n   *\n   * 定义标题的 HTML 语义级别（h1-h6），影响：\n   * 1. 文档大纲结构\n   * 2. 屏幕阅读器识别\n   * 3. SEO 权重\n   *\n   * 当未指定时，组件会根据标题尺寸自动推导\n   *\n   * @prop headingLevel\n   * @type {1 | 2 | 3 | 4 | 5 | 6}\n   * @reflect\n   */\n  @Prop({ reflect: true }) headingLevel: 1 | 2 | 3 | 4 | 5 | 6;\n\n  /**\n   * 标题视觉尺寸\n   *\n   * 控制标题的视觉大小（1-7级），与实际语义级别分离：\n   * - 1: 最大标题尺寸\n   * - 7: 最小标题尺寸\n   *\n   * 当未指定时，默认值为：\n   * - 普通标题: 7\n   * - 流式标题: 6\n   *\n   * @prop headingSize\n   * @type {1 | 2 | 3 | 4 | 5 | 6 | 7}\n   * @reflect\n   */\n  @Prop({ reflect: true }) headingSize: 1 | 2 | 3 | 4 | 5 | 6 | 7;\n\n  /**\n   * 行内模式\n   *\n   * 设置为 true 时，文本将以行内元素（span）渲染，\n   * 否则以块级元素（p）渲染\n   *\n   * @prop inline\n   * @type {boolean}\n   * @default false\n   * @reflect\n   */\n  @Prop({ reflect: true }) inline: boolean = false;\n\n  /**\n   * 文本类型\n   *\n   * 定义文本的语义类型和基本样式：\n   * - `body`: 标准正文文本（默认）\n   * - `body-compact`: 紧凑正文（较小行高）\n   * - `code`: 代码样式（等宽字体）\n   * - `fluid-heading`: 流式响应式标题\n   * - `heading`: 标准标题\n   * - `heading-compact`: 紧凑标题\n   * - `helper-text`: 辅助说明文本\n   * - `label`: 表单标签文本\n   * - `legal`: 法律条款小字\n   *\n   * @prop type\n   * @type {'body' | 'body-compact' | 'code' | 'fluid-heading' | 'heading' | 'heading-compact' | 'helper-text' | 'label' | 'legal'}\n   * @default 'body'\n   * @reflect\n   */\n  @Prop({ reflect: true }) type:\n    | 'body'\n    | 'body-compact'\n    | 'code'\n    | 'fluid-heading'\n    | 'heading'\n    | 'heading-compact'\n    | 'helper-text'\n    | 'label'\n    | 'legal' = 'body';\n\n  /**\n   * 组件加载前生命周期\n   *\n   * 收集所有 ARIA 属性并转移到 configAria 对象，\n   * 然后从宿主元素移除这些属性避免重复\n   */\n  componentWillLoad() {\n    // If the zane-text has a tabindex attribute we get the value\n    // and pass it down to the native input, then remove it from the\n    // zane-text to avoid causing tabbing twice on the same element\n    this.elm.getAttributeNames().forEach((name: string) => {\n      if (name.includes('aria-')) {\n        this.configAria[name] = this.elm.getAttribute(name);\n        this.elm.removeAttribute(name);\n      }\n    });\n  }\n\n  /**\n   * 渲染组件主体\n   *\n   * 创建文本容器，根据类型渲染不同文本元素\n   */\n  render() {\n    return (\n      <Host>\n        <div\n          class={{\n            [`heading-size-${this.#getHeadingSize()}`]: true,\n            expressive: this.expressive,\n            inline: this.inline,\n            text: true,\n          }}\n        >\n          {this.renderText()}\n        </div>\n      </Host>\n    );\n  }\n\n  /**\n   * 渲染标题元素\n   *\n   * 根据 headingLevel 或推导出的语义级别渲染 h1-h6 元素\n   *\n   * @returns {JSX.Element} 标题元素\n   */\n  renderHeading() {\n    let headingLevel = this.headingLevel;\n    if (!headingLevel) {\n      switch (this.#getHeadingSize()) {\n        case 2: {\n          headingLevel = 5;\n          break;\n        }\n        case 3: {\n          headingLevel = 4;\n          break;\n        }\n        case 4: {\n          headingLevel = 3;\n          break;\n        }\n        case 5: {\n          headingLevel = 2;\n          break;\n        }\n        case 6:\n        case 7: {\n          headingLevel = 1;\n          break;\n        }\n        default: {\n          headingLevel = 6;\n        }\n      }\n    }\n\n    const Heading = `h${headingLevel}`;\n    return (\n      <Heading class=\"native-element\" {...this.configAria}>\n        <slot />\n      </Heading>\n    );\n  }\n\n  /**\n   * 渲染简单文本元素\n   *\n   * 根据行内模式渲染 span 或 p 元素\n   *\n   * @returns {JSX.Element} 文本元素\n   */\n  renderSimpleText() {\n    return this.inline ? (\n      <span class=\"native-element\" {...this.configAria}>\n        <slot />\n      </span>\n    ) : (\n      <p class=\"native-element\" {...this.configAria}>\n        <slot />\n      </p>\n    );\n  }\n\n  /**\n   * 主渲染方法\n   *\n   * 根据文本类型选择渲染标题或普通文本\n   *\n   * @returns {JSX.Element} 渲染结果\n   */\n  renderText() {\n    return this.type === 'heading'\n      ? this.renderHeading()\n      : this.renderSimpleText();\n  }\n\n  /**\n   * 获取标题尺寸\n   *\n   * 私有方法，确定标题的视觉尺寸级别\n   *\n   * @private\n   * @returns {number} 标题尺寸级别 (1-7)\n   */\n  #getHeadingSize() {\n    let headingSize = this.headingSize;\n    if (!headingSize) {\n      headingSize = this.type === 'fluid-heading' ? 6 : 7;\n    }\n    return headingSize;\n  }\n}\n"],"names":[],"mappings":"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"}