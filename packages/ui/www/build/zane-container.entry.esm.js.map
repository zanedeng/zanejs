{"version":3,"file":"zane-container.entry.esm.js","sources":["src/components/container/container.scss?tag=zane-container&encapsulation=shadow","src/components/container/container.tsx"],"sourcesContent":["@use '../../global/styles/commons';\n\n:host {\n  display: block;\n}\n\n.container-wrapper {\n  container: containerwrapper / inline-size;\n\n  &.size-max .container {\n    max-width: commons.v(--container-max);\n  }\n\n  &.size-xl .container {\n    max-width: commons.v(--container-xl);\n  }\n\n  &.size-sm .container {\n    max-width: commons.v(--container-sm);\n  }\n\n  &.size-md .container {\n    max-width: commons.v(--container-md);\n  }\n\n  &.size-lg .container {\n    max-width: commons.v(--container-lg);\n  }\n}\n\n.container {\n  width: 100%;\n  margin: auto;\n\n  .content {\n    padding: commons.v(--spacing-05);\n  }\n}\n\n:host(.debug) {\n  background: var(--color-error-10);\n  border: 1px solid red;\n  border-width: 0 1px;\n\n  .container {\n    background: var(--color-blue-10);\n    border: 1px solid blue;\n    border-width: 0 1px;\n\n    .content {\n      background: var(--color-green-10);\n      border: 1px solid green;\n      border-width: 0 1px;\n    }\n  }\n}\n\n@container containerwrapper (max-width: 671px) {\n  .content {\n    margin-inline: 0;\n  }\n}\n\n@container containerwrapper (min-width: 672px) {\n  .content {\n    margin-inline: var(--spacing-05);\n  }\n}\n\n@container containerwrapper (min-width: 1056px) {\n  .content {\n    margin-inline: var(--spacing-05);\n  }\n}\n\n@container containerwrapper (min-width: 1312px) {\n  .content {\n    margin-inline: var(--spacing-05);\n  }\n}\n\n@container containerwrapper (min-width: 1584px) {\n  .content {\n    margin-inline: var(--spacing-06);\n  }\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  h,\n  Host,\n  Prop,\n} from '@stencil/core';\n\n@Component({\n  shadow: true,\n  styleUrl: 'container.scss',\n  tag: 'zane-container',\n})\nexport class Container implements ComponentInterface {\n  @Element() host!: HTMLElement;\n\n  @Prop({ reflect: true })\n  size: 'full' | 'lg' | 'max' | 'md' | 'sm' | 'xl' = 'full';\n\n  render() {\n    return (\n      <Host>\n        <div\n          class={{\n            [`size-${this.size}`]: true,\n            'container-wrapper': true,\n          }}\n        >\n          <div class=\"container\">\n            <div class=\"content\">\n              <slot />\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"names":[],"mappings":";;AAAA,MAAM,YAAY,GAAG,8oOAA8oO;;MCctpO,SAAS,GAAA,MAAA;AALtB,IAAA,WAAA,CAAA,OAAA,EAAA;;AASE,QAAA,IAAI,CAAA,IAAA,GAA+C,MAAM;AAoB1D;IAlBC,MAAM,GAAA;QACJ,QACE,EAAC,IAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,EACH,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACE,KAAK,EAAE;AACL,gBAAA,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAE,CAAA,GAAG,IAAI;AAC3B,gBAAA,mBAAmB,EAAE,IAAI;aAC1B,EAAA,EAED,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,WAAW,EAAA,EACpB,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,SAAS,EAAA,EAClB,CAAA,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,CAAQ,CACJ,CACF,CACF,CACD;;;;;;;;"}