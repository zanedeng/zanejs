{"version":3,"names":["treeNodeCss","TreeNode","constructor","hostRef","this","disabled","expanded","gid","getComponentIndex","hasChildNodes","hasFocus","isActive","label","level","target","tabindex","handleClick","zaneTreeNodeClick","emit","expand","id","value","render","NativeElementTag","__classPrivateFieldGet","_TreeNode_instances","_TreeNode_getNativeElementTagName","call","styles","paddingInlineStart","h","Host","active","class","selected","isSelected","href","onBlur","blurHandler","onClick","clickHandler","onFocus","focusHandler","onKeyDown","keyDownHandler","onMouseDown","mouseDownHandler","ref","el","nativeElement","style","name","size","icon","event","preventDefault","stopPropagation","evt","key","window","open","childNodes","elm","querySelectorAll","length","firstChild","setFocus","componentWillLoad","hasAttribute","getAttribute","undefined","removeAttribute","treeView","closest","getSelectedNode","then","selectedNode","subscribeToSelect","forEach","node","setBlur","blur","focus","windowKeyUp","windowMouseUp"],"sources":["src/components/tree/tree-node/tree-node.scss?tag=zane-tree-node&encapsulation=shadow","src/components/tree/tree-node/tree-node.tsx"],"sourcesContent":["@use '../../../global/styles/commons';\n\n:host {\n  display: block;\n}\n\n.tree-node-content {\n  position: relative;\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  height: 2rem;\n  padding-inline-end: calc(commons.v(--spacing-05) - 0.125rem);\n  cursor: pointer;\n  outline: none;\n  border: 0.125rem solid transparent;\n\n  .tree-node-label {\n    flex: 1;\n    padding-left: 0.5rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    color: commons.v(--text-secondary);\n    white-space: nowrap;\n\n    @include commons.font-style(body-compact-01);\n  }\n\n  .expand-icon {\n    transform: rotate(0deg);\n    transition: all 0.11s cubic-bezier(0.2, 0, 0.38, 0.9);\n  }\n\n  .expand-icon.expanded {\n    transform: rotate(+90deg);\n  }\n\n  .icon-space {\n    width: commons.v(--spacing-05);\n  }\n\n  .icon {\n    padding-inline-start: 0.5rem;\n  }\n}\n\n.node-slot {\n  display: none;\n}\n\n.node-slot.expanded {\n  display: block;\n}\n\n.tree-node-content {\n  text-decoration: none !important;\n\n  &:hover {\n    background: commons.v(--layer-hover);\n\n    &.selected {\n      background: var(--layer-selected-hover);\n    }\n  }\n\n  &.has-focus:not(.selected) {\n    color: var(--text-primary);\n    border-color: commons.v(--color-primary);\n\n    .slot-end {\n      color: var(--icon-01);\n    }\n  }\n\n  &.selected {\n    font-weight: var(--font-weight-semi-bold);\n    background: var(--layer-selected);\n    border-left: 0.125rem solid transparent;\n  }\n\n  &.selected::before {\n    position: absolute;\n    top: -0.125rem;\n    left: -0.125rem;\n    display: block;\n    height: calc(100% + 0.25rem);\n    content: ' ';\n    border-left: 0.25rem solid var(--color-primary, commons.v(--color-blue-60)) !important;\n  }\n}\n\n.tree-node-content.disabled {\n  color: var(--text-disabled) !important;\n  cursor: not-allowed;\n  background-color: var(--disabled-01) !important;\n\n  &:hover,\n  &.has-focus:not(.selected) {\n    color: var(--text-disabled) !important;\n    background-color: var(--disabled-01) !important;\n  }\n\n  &.selected {\n    color: var(--text-disabled) !important;\n    background-color: var(--disabled-01) !important;\n  }\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n} from '@stencil/core';\n\nimport { getComponentIndex } from '../../../utils';\n\n/**\n * 树形结构节点组件\n *\n * @slot - 子节点插槽，用于嵌套树节点\n */\n@Component({\n  shadow: true,\n  styleUrl: 'tree-node.scss',\n  tag: 'zane-tree-node',\n})\nexport class TreeNode {\n\n  /**\n   * 禁用节点交互\n   * @prop {boolean} [disabled=false]\n   * @reflect 属性值会同步到 DOM 属性\n   */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  /**\n   * 组件宿主元素引用\n   * @element\n   */\n  @Element() elm!: HTMLElement;\n\n  /**\n   * 控制子节点展开状态\n   * @prop {boolean} [expanded=true]\n   * @mutable 允许组件内部修改\n   * @reflect 属性值会同步到 DOM 属性\n   */\n  @Prop({ mutable: true, reflect: true }) expanded: boolean = true;\n\n  /**\n   * 组件全局唯一标识符\n   * @internal\n   */\n  gid: string = getComponentIndex();\n\n  /**\n   * 是否存在子节点\n   * @state\n   */\n  @State() hasChildNodes = false;\n\n  /**\n   * 焦点状态标记\n   * @state\n   */\n  @State() hasFocus = false;\n\n  /**\n   * 链接地址（存在时节点渲染为<a>标签）\n   * @prop {string} href\n   * @reflect 属性值会同步到 DOM 属性\n   */\n  @Prop({ reflect: true }) href: string;\n\n  /**\n   * 节点图标名称（需配合图标库使用）\n   * @prop {string} icon\n   */\n  @Prop() icon: string;\n\n  /**\n   * 激活状态标记（鼠标/键盘按下时）\n   * @state\n   */\n  @State() isActive = false;\n\n  /**\n   * 节点显示文本\n   * @prop {string} [label='']\n   * @mutable 允许组件内部修改\n   */\n  @Prop({ mutable: true }) label: string = '';\n\n  /**\n   * 节点层级（从父节点自动计算）\n   * @prop {number} [level=0]\n   * @reflect 属性值会同步到 DOM 属性\n   */\n  @Prop({ reflect: true }) level: number = 0;\n\n  /**\n   * 当前选中节点标识符\n   * @prop {string} selectedNode\n   * @mutable 允许组件内部修改\n   * @reflect 属性值会同步到 DOM 属性\n   */\n  @Prop({ mutable: true, reflect: true }) selectedNode: string;\n\n  /**\n   * 链接打开方式（仅在设置 href 时生效）\n   * @prop {('_self'|'_blank'|'_parent'|'_top')} [target='_self']\n   * @defaultValue '_self'\n   */\n  @Prop() target: string = '_self';\n\n  /**\n   * 节点唯一标识符（优先级高于 label）\n   * @prop {(null|number|string)} [value]\n   * @mutable 允许组件内部修改\n   */\n  @Prop({ mutable: true }) value?: null | number | string;\n\n  /**\n   * 节点点击事件\n   * @event zane-tree-node--click\n   * @property {boolean} expand - 当前展开状态\n   * @property {string} id - 组件全局 ID\n   * @property {string} value - 节点标识值（优先取 value，否则使用 label）\n   */\n  @Event({ eventName: 'zane-tree-node--click' })\n  zaneTreeNodeClick: EventEmitter;\n\n  /**\n   * 原生元素引用（动态生成 a/div 标签）\n   * @private\n   */\n  private nativeElement?: HTMLElement;\n\n  /**\n   * 标签页导航顺序\n   * @private\n   * @defaultValue 1\n   */\n  private tabindex?: number | string = 1;\n\n  /**\n   * 组件加载前逻辑\n   * @lifecycle\n   */\n  componentWillLoad() {\n    if (this.elm.hasAttribute('tabindex')) {\n      const tabindex = this.elm.getAttribute('tabindex');\n      this.tabindex = tabindex === null ? undefined : tabindex;\n      this.elm.removeAttribute('tabindex');\n    }\n\n    const treeView = this.elm.closest('zane-tree-view');\n\n    (treeView as any).getSelectedNode().then((selectedNode: string) => {\n      this.selectedNode = selectedNode;\n    });\n\n    (treeView as any).subscribeToSelect((selectedNode: string) => {\n      this.selectedNode = selectedNode;\n    });\n\n    const childNodes = this.elm.querySelectorAll('zane-tree-node');\n    this.hasChildNodes = childNodes.length > 0;\n    childNodes.forEach((node: any) => {\n      node.level = this.level + 1;\n    });\n  }\n\n  /**\n   * 触发点击事件\n   * @private\n   */\n  handleClick = () => {\n    this.zaneTreeNodeClick.emit({\n      expand: this.expanded,\n      id: this.gid,\n      value: this.value || this.label,\n    });\n  };\n\n  /**\n   * 判断当前节点是否被选中\n   * @returns {boolean} 选中状态\n   */\n  isSelected() {\n    if (this.value === undefined && this.label === undefined) return false;\n    else if (this.value === undefined) return this.selectedNode === this.label;\n    else return this.selectedNode === this.value;\n  }\n\n  /**\n   * 渲染函数\n   * @returns {JSX.Element} 组件结构\n   */\n  render = () => {\n    const NativeElementTag = this.#getNativeElementTagName();\n    const styles = {\n      paddingInlineStart: `calc(${this.level + 1}rem - 0.125rem)`,\n    };\n\n    return (\n      <Host active={this.isActive} has-focus={this.hasFocus}>\n        <div class=\"tree-node\">\n          <NativeElementTag\n            aria-disabled={this.disabled}\n            class={{\n              active: this.isActive,\n              disabled: this.disabled,\n              'has-focus': this.hasFocus,\n              selected: this.isSelected(),\n              'tree-node-content': true,\n            }}\n            href={this.href}\n            onBlur={this.blurHandler}\n            onClick={this.clickHandler}\n            onFocus={this.focusHandler}\n            onKeyDown={this.keyDownHandler}\n            onMouseDown={this.mouseDownHandler}\n            ref={(el) => (this.nativeElement = el as HTMLElement)}\n            style={styles}\n            tabindex={this.tabindex}\n            target={this.target}\n          >\n            {this.hasChildNodes && (\n              <zane-icon\n                class={{ 'expand-icon': true, expanded: this.expanded }}\n                name=\"caret--right\"\n                size=\"1rem\"\n              />\n            )}\n\n            {!this.hasChildNodes && <div class=\"icon-space\" />}\n\n            {this.icon && (\n              <zane-icon class={'icon'} name={this.icon} size=\"1rem\" />\n            )}\n\n            <span class=\"tree-node-label\">{this.label}</span>\n          </NativeElementTag>\n\n          <div\n            class={{\n              expanded: this.expanded,\n              'node-slot': true,\n            }}\n          >\n            <slot></slot>\n          </div>\n        </div>\n      </Host>\n    );\n  };\n\n  /**\n   * 移除元素焦点\n   * @method\n   * @async\n   */\n  @Method()\n  async setBlur() {\n    if (this.nativeElement) {\n      this.nativeElement.blur();\n    }\n  }\n\n  /**\n   * 设置元素焦点\n   * @method\n   * @async\n   */\n  @Method()\n  async setFocus() {\n    if (this.nativeElement) {\n      this.nativeElement.focus();\n    }\n  }\n\n  /**\n   * 全局键盘释放监听\n   * @listens window:keyup\n   * @param {KeyboardEvent} evt - 键盘事件对象\n   */\n  @Listen('keyup', { target: 'window' })\n  windowKeyUp(evt) {\n    if (this.isActive && evt.key === ' ') this.isActive = false;\n  }\n\n  /**\n   * 全局鼠标释放监听\n   * @listens window:mouseup\n   */\n  @Listen('mouseup', { target: 'window' })\n  windowMouseUp() {\n    if (this.isActive) this.isActive = false;\n  }\n\n  /**\n   * 动态获取元素标签类型\n   * @private\n   * @returns {'a'|'div'} 标签类型\n   */\n  #getNativeElementTagName() {\n    return this.href ? 'a' : 'div';\n  }\n\n  private blurHandler = () => {\n    this.hasFocus = false;\n  };\n\n  private clickHandler = (event) => {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      this.expanded = !this.expanded;\n      this.handleClick();\n    }\n  };\n\n  private focusHandler = () => {\n    this.hasFocus = true;\n  };\n\n  private keyDownHandler = (evt) => {\n    switch (evt.key) {\n      case ' ':\n      case 'Enter': {\n        if (this.hasChildNodes) {\n          evt.preventDefault();\n          this.clickHandler(evt);\n        } else if (this.href) {\n          evt.preventDefault();\n          this.isActive = true;\n          this.handleClick();\n          window.open(this.href, this.target);\n        } else {\n          evt.preventDefault();\n          this.isActive = true;\n          this.handleClick();\n        }\n\n        break;\n      }\n      case 'ArrowLeft': {\n        evt.preventDefault();\n        this.expanded = false;\n\n        break;\n      }\n      case 'ArrowRight': {\n        evt.preventDefault();\n        if (this.expanded && this.hasChildNodes) {\n          const childNodes = this.elm.querySelectorAll('zane-tree-node');\n          if (childNodes.length > 0) {\n            const firstChild = childNodes[0] as any;\n            firstChild.setFocus();\n          }\n        } else {\n          this.expanded = true;\n        }\n\n        break;\n      }\n      // No default\n    }\n  };\n\n  private mouseDownHandler = () => {\n    this.isActive = true;\n  };\n}\n"],"mappings":"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","ignoreList":[]}