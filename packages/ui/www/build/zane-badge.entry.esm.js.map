{"version":3,"file":"zane-badge.entry.esm.js","sources":["src/components/badge/badge.scss?tag=zane-badge&encapsulation=shadow","src/components/badge/badge.tsx"],"sourcesContent":["@use \"../../global/styles/commons\";\n\n:host {\n  display: inline-block;\n}\n\n.badge {\n  position: relative;\n}\n\n.badge-content {\n  position: absolute;\n  z-index: commons.v(--z-index-badge);\n  color: commons.v(--color-white);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: var(--badge-color, commons.v(--color-neutral));\n  border-radius: 12px;\n  padding: commons.v(--spacing-01) var(--spacing-02);\n  @include commons.font-style(code-01);\n\n  &.has-content {\n    top: var(--badge-top, -0.5rem);\n    right: var(--badge-left, -0.5rem);\n    height: 1.25rem;\n    min-width: 1.25rem;\n  }\n\n  &:not(.has-content) {\n    top: var(--badge-top, -0.25rem);\n    right: var(--badge-left, -0.25rem);\n    height: 0.5rem;\n    min-width: 0.5rem;\n  }\n}\n\n\n@each $state in [success, warning, error] {\n  .badge.color-#{$state} {\n    .badge-content {\n      background-color: var(--support-#{$state});\n    }\n  }\n}\n","import { Component, h, Host, Prop } from '@stencil/core';\n\n/**\n * @name Badge\n * @description The badge component is used to display a small amount of information to the user.\n * @category Informational\n * @tag content\n * @example <zane-badge content=\"5\"> <zane-icon name=\"notification\" size=\"2rem\"></zane-icon></zane-badge>\n */\n@Component({\n  shadow: true,\n  styleUrl: 'badge.scss',\n  tag: 'zane-badge',\n})\nexport class Badge {\n  @Prop({ reflect: true }) color:\n    | 'error'\n    | 'primary'\n    | 'secondary'\n    | 'success'\n    | 'warning' = 'error';\n\n  @Prop() content: string;\n\n  render() {\n    return (\n      <Host>\n        <div class={{ [`color-${this.color}`]: true, badge: true }}>\n          <div\n            class={{\n              'badge-content': true,\n              'has-content': this.content !== '',\n            }}\n          >\n            {this.content}\n          </div>\n          <slot />\n        </div>\n      </Host>\n    );\n  }\n}\n"],"names":[],"mappings":";;AAAA,MAAM,QAAQ,GAAG,y0GAAy0G;;MCc70G,KAAK,GAAA,MAAA;AALlB,IAAA,WAAA,CAAA,OAAA,EAAA;;AAM2B,QAAA,IAAK,CAAA,KAAA,GAKd,OAAO;AAqBxB;IAjBC,MAAM,GAAA;QACJ,QACE,EAAC,IAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,EACH,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAK,KAAK,EAAE,EAAE,CAAC,SAAS,IAAI,CAAC,KAAK,CAAE,CAAA,GAAG,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,EAAA,EACxD,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACE,KAAK,EAAE;AACL,gBAAA,eAAe,EAAE,IAAI;AACrB,gBAAA,aAAa,EAAE,IAAI,CAAC,OAAO,KAAK,EAAE;AACnC,aAAA,EAEA,EAAA,IAAI,CAAC,OAAO,CACT,EACN,CAAQ,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,CAAA,CACJ,CACD;;;;;;;"}