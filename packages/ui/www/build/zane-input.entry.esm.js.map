{"version":3,"file":"zane-input.entry.esm.js","sources":["src/components/input/input.scss?tag=zane-input&encapsulation=shadow","src/components/input/input.tsx"],"sourcesContent":["@use '../../global/styles/common-input';\n","import type { InputComponentInterface } from '../../interfaces';\n\nimport {\n  Component,\n  ComponentInterface,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\n\nimport { debounceEvent, getComponentIndex } from '../../utils';\n\n/**\n * 自定义输入框组件 zane-input\n *\n * 实现功能：\n * 1. 支持多种输入类型（文本、密码、邮箱等）及尺寸控制\n * 2. 包含表单验证状态（错误/警告）及辅助文本展示\n * 3. 提供前后插槽(start/end)扩展能力\n * 4. 支持防抖事件处理与无障碍访问\n * 5. 集成密码可见性切换功能\n *\n */\n@Component({\n  shadow: true,\n  styleUrl: './input.scss',\n  tag: 'zane-input',\n})\nexport class Input implements ComponentInterface, InputComponentInterface {\n\n  /**\n   * 自动填充控制\n   * - `on`: 允许浏览器自动填充\n   * - `off`: 禁用自动填充\n   * @default 'off'\n   */\n  @Prop() autocomplete: 'off' | 'on' = 'off';\n\n  /**\n   * 动态ARIA属性配置对象\n   * - 收集宿主元素上所有`aria-*`属性并转移到内部input元素\n   * - 需通过mutable允许组件内修改\n   */\n  @Prop({ mutable: true, reflect: true }) configAria: any = {};\n\n  /**\n   * 输入内容变化事件(zane-input--change)的防抖延迟(ms)\n   * @default 300\n   */\n  @Prop() debounce = 300;\n\n  /**\n   * 禁用状态\n   * - 设置后阻止用户交互\n   * @attr\n   */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  @Element() elm!: HTMLElement;\n\n  gid: string = getComponentIndex();\n\n  /**\n   * 辅助说明文本\n   * - 在非错误/警告状态下显示\n   */\n  @Prop() helperText: string;\n\n  /**\n   * 行内布局模式\n   * - 设置后标签与输入框水平排列\n   * @attr\n   */\n  @Prop({ reflect: true }) inline: boolean = false;\n\n  /**\n   * 验证失败状态\n   * - 激活时会显示invalidText并应用错误样式\n   */\n  @Prop() invalid: boolean = false;\n\n  /**\n   * 验证失败提示文本\n   * - 当invalid=true时显示\n   */\n  @Prop() invalidText: string;\n\n  /**\n   * 输入框标签文本\n   * - 显示在输入区域上方\n   */\n  @Prop() label: string;\n\n  /**\n   * 输入框名称\n   * - 用于表单提交时识别字段\n   * - 默认生成唯一ID: zane-input-{gid}\n   */\n  @Prop() name: string = `zane-input-${this.gid}`;\n\n  /**\n   * 占位提示文本\n   */\n  @Prop() placeholder: string;\n\n  /**\n   * 只读状态\n   * - 允许查看但禁止修改内容\n   * @attr\n   */\n  @Prop({ reflect: true }) readonly: boolean = false;\n\n  /**\n   * 必填标识\n   * - 显示红色星号(*)并触发浏览器原生验证\n   * @attr\n   */\n  @Prop({ reflect: true }) required: boolean = false;\n\n  /**\n   * 尺寸控制\n   * - `sm`: 小尺寸(高度32px)\n   * - `md`: 中尺寸(高度40px)\n   * - `lg`: 大尺寸(高度48px)\n   * @default 'md'\n   * @attr\n   */\n  @Prop({ reflect: true }) size: 'lg' | 'md' | 'sm' = 'md';\n\n  /**\n   * 骨架屏模式\n   * - 加载状态时显示灰色占位块\n   */\n  @Prop() skeleton: boolean = false;\n\n  /**\n   * 输入类型\n   * - `text`: 普通文本\n   * - `password`: 密码(带可见切换按钮)\n   * - `email`: 邮箱格式验证\n   * - `tel`: 电话号码输入\n   * @default 'text'\n   */\n  @Prop() type: 'email' | 'password' | 'tel' | 'text' = 'text';\n\n  /**\n   * 输入框值\n   * - 使用双向数据绑定\n   */\n  @Prop({ mutable: true }) value: string;\n\n  /**\n   * 警告状态\n   * - 非致命性错误提示，显示warnText\n   */\n  @Prop() warn: boolean = false;\n\n  /**\n   * 警告提示文本\n   * - 当warn=true时显示\n   */\n  @Prop() warnText: string;\n\n  /**\n   * 输入框聚焦状态\n   * - 控制宿主元素has-focus属性\n   */\n  @State() hasFocus = false;\n\n  /**\n   * 密码可见性状态\n   * - 仅当type=password时生效\n   * - true: 显示明文\n   * - false: 显示掩码\n   */\n  @State() passwordVisible = false;\n\n  /**\n   * 检测start插槽是否有内容\n   * - 用于动态调整输入框内边距\n   */\n  @State() startSlotHasContent = false;\n\n  /**\n   * 检测end插槽是否有内容\n   * - 用于动态调整输入框内边距\n   */\n  @State() endSlotHasContent = false;\n\n  /**\n   * 失去焦点事件\n   * @event zane-input--blur\n   * @param {FocusEvent} ev - 原生焦点事件对象\n   */\n  @Event({ eventName: 'zane-input--blur' }) zaneBlur: EventEmitter;\n\n  /**\n   * 防抖后的值变更事件\n   * @event zane-input--change\n   * @param {KeyboardEvent} ev - 键盘事件对象(防抖处理)\n   */\n  @Event({ eventName: 'zane-input--change' }) zaneChange: EventEmitter;\n\n  /**\n   * 获得焦点事件\n   * @event zane-input--focus\n   * @param {FocusEvent} ev - 原生焦点事件对象\n   */\n  @Event({ eventName: 'zane-input--focus' }) zaneFocus: EventEmitter;\n\n  /**\n   * 实时输入事件\n   * @event zane-input--input\n   * @param {KeyboardEvent} ev - 每次按键触发的键盘事件\n   */\n  @Event({ eventName: 'zane-input--input' }) zaneInput: EventEmitter;\n  private nativeElement?: HTMLInputElement;\n  private tabindex?: number | string;\n\n  componentWillLoad() {\n    if (this.elm.hasAttribute('tabindex')) {\n      const tabindex = this.elm.getAttribute('tabindex');\n      this.tabindex = tabindex === null ? undefined : tabindex;\n      this.elm.removeAttribute('tabindex');\n    }\n    this.elm.getAttributeNames().forEach((name: string) => {\n      if (name.includes('aria-')) {\n        this.configAria[name] = this.elm.getAttribute(name);\n        this.elm.removeAttribute(name);\n      }\n    });\n    this.startSlotHasContent = !!this.elm.querySelector('[slot=\"start\"]');\n    this.endSlotHasContent = !!this.elm.querySelector('[slot=\"end\"]');\n  }\n\n  connectedCallback() {\n    this.debounceChanged();\n  }\n\n  /**\n   * 获取组件唯一ID\n   * @returns {string} 组件全局唯一标识(gid)\n   */\n  @Method()\n  async getComponentId() {\n    return this.gid;\n  }\n\n  getLabel() {\n    return this.skeleton ? (\n      <div class=\"label skeleton\" />\n    ) : (\n      <label class=\"label\">\n        {this.required && <span class=\"required\">*</span>}\n        {this.label}\n      </label>\n    );\n  }\n\n  render() {\n    return (\n      <Host\n        has-focus={this.hasFocus}\n        has-value={this.hasValue()}\n        invalid={this.invalid}\n        warn={this.warn}\n      >\n        <div class={{ 'form-control': true, inline: this.inline }}>\n          {this.label && this.getLabel()}\n          <div class=\"field\">\n            {this.skeleton ? (\n              <div class=\"input-container-skeleton skeleton\" />\n            ) : (\n              this.renderInput()\n            )}\n          </div>\n          {this.renderHelper()}\n        </div>\n      </Host>\n    );\n  }\n\n  renderHelper() {\n    if (this.invalid)\n      return <div class=\"helper invalid\">{this.invalidText}</div>;\n    else if (this.warn) return <div class=\"helper warn\">{this.warnText}</div>;\n    else if (this.helperText || this.helperText === '')\n      return <div class=\"helper text\">{this.helperText}</div>;\n  }\n\n  renderInput() {\n    const type =\n      this.type === 'password' && this.passwordVisible ? 'text' : this.type;\n\n    return (\n      <div\n        class={{\n          disabled: this.disabled,\n          'end-slot-has-content': this.endSlotHasContent,\n          'has-focus': this.hasFocus,\n          'input-container': true,\n          'start-slot-has-content': this.startSlotHasContent,\n        }}\n      >\n        <div class=\"slot-container start\">\n          <slot name=\"start\" />\n        </div>\n\n        <input\n          autoComplete={this.autocomplete}\n          class=\"input input-native\"\n          disabled={this.disabled}\n          name={this.name}\n          onBlur={this.blurHandler}\n          onFocus={this.focusHandler}\n          onInput={(evt) => this.inputHandler(evt)}\n          placeholder={this.placeholder}\n          readOnly={this.readonly}\n          ref={(input) => (this.nativeElement = input)}\n          required={this.required}\n          tabIndex={this.tabindex}\n          type={type}\n          value={this.value}\n          {...this.configAria}\n        />\n\n        {this.type === 'password' && (\n          <zane-tooltip\n            content={this.passwordVisible ? 'Show password' : 'Hide password'}\n          >\n            <zane-button\n              color={'secondary'}\n              icon={this.passwordVisible ? 'view--off' : 'view'}\n              onGoat-button--click={() => {\n                this.passwordVisible = !this.passwordVisible;\n              }}\n              size={this.size}\n              variant=\"ghost.simple\"\n            ></zane-button>\n          </zane-tooltip>\n        )}\n\n        <div class=\"slot-container end\">\n          <slot name=\"end\" />\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * 移除输入框焦点\n   * - 同时更新hasFocus状态\n   */\n  @Method()\n  async setBlur() {\n    if (this.nativeElement) {\n      this.nativeElement.blur();\n      this.hasFocus = false;\n    }\n  }\n\n  /**\n   * 激活输入框焦点\n   * - 同时更新hasFocus状态\n   */\n  @Method()\n  async setFocus() {\n    if (this.nativeElement) {\n      this.nativeElement.focus();\n      this.hasFocus = true;\n    }\n  }\n\n  /**\n   * 防抖配置变更监听\n   * - 当debounce属性变化时更新事件防抖设置\n   */\n  @Watch('debounce')\n  protected debounceChanged() {\n    this.zaneChange = debounceEvent(this.zaneChange, this.debounce);\n  }\n\n  /** 输入框失焦处理函数 */\n  private blurHandler = (ev: FocusEvent) => {\n    this.hasFocus = false;\n    this.zaneBlur.emit(ev);\n  };\n\n  /** 输入框聚焦处理函数 */\n  private focusHandler = (ev: FocusEvent) => {\n    this.hasFocus = true;\n    this.zaneFocus.emit(ev);\n  };\n\n  /** 获取当前输入值的字符串表示 */\n  private getValue(): string {\n    return (this.value || '').toString();\n  }\n\n  /** 检测输入值是否非空 */\n  private hasValue(): boolean {\n    return this.getValue().length > 0;\n  }\n\n  /**\n   * 输入事件处理\n   * - 更新value值\n   * - 触发zaneInput/zaneChange事件\n   */\n  private inputHandler = (ev: Event) => {\n    const input = ev.target as HTMLInputElement | null;\n    const oldValue = this.value;\n    if (input) {\n      this.value = input.value;\n    }\n    this.zaneInput.emit(ev as KeyboardEvent);\n    if (oldValue !== this.value) {\n      this.zaneChange.emit(ev as KeyboardEvent);\n    }\n  };\n}\n"],"names":[],"mappings":"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"}