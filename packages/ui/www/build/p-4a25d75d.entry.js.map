{"version":3,"names":["tabsCss","Tabs","constructor","hostRef","this","gid","getComponentIndex","type","componentDidLoad","tabsHaveTarget","selectedTab","elm","querySelector","selectTab","target","tabs","getTabs","forEach","tab","index","setAttribute","classList","add","length","tabList","getTabList","getTabPanels","querySelectorAll","render","h","Host","key","i","selected","remove","tabPanels","tabPanel","active","value","tabClick","evt","stopPropagation","detail"],"sources":["src/components/tabs/tabs/tabs.scss?tag=zane-tabs&encapsulation=shadow","src/components/tabs/tabs/tabs.tsx"],"sourcesContent":["@use '../../../global/styles/commons';\n\n:host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  h,\n  Host,\n  Listen,\n  Prop,\n} from '@stencil/core';\n\nimport { getComponentIndex } from '../../../utils';\n\n/**\n * 标签页容器组件，用于管理和切换多个标签页\n *\n */\n@Component({\n  shadow: true,\n  styleUrl: 'tabs.scss',\n  tag: 'zane-tabs',\n})\nexport class Tabs implements ComponentInterface {\n  /**\n   * 组件宿主元素引用\n   *\n   * @type {HTMLElement}\n   * @memberof Tabs\n   */\n  @Element() elm!: HTMLElement;\n\n  /**\n   * 组件唯一标识符，用于区分多个实例\n   *\n   * @type {string}\n   * @memberof Tabs\n   */\n  gid: string = getComponentIndex();\n\n  /**\n   * 组件层级设置，影响样式和视觉层次\n   *\n   * @type {'01' | '02' | 'background'}\n   * @prop layer\n   * @memberof Tabs\n   *\n   * - `'01'`: 第一层级（最高层级，用于凸出显示）\n   * - `'02'`: 第二层级（中等层级，常规内容）\n   * - `'background'`: 背景层级（最低层级，用于背景元素）\n   */\n  @Prop({ reflect: true }) layer?: '01' | '02' | 'background';\n\n  /**\n   * 标签页类型，决定标签页的视觉样式\n   *\n   * @type {'contained' | 'contained-bottom' | 'default'}\n   * @prop type\n   * @default 'default'\n   * @memberof Tabs\n   *\n   * - `'contained'`: 包含式标签（标签与内容区域视觉统一）\n   * - `'contained-bottom'`: 底部包含式标签（标签位于内容底部）\n   * - `'default'`: 默认样式（标准分隔式标签）\n   */\n  @Prop({ reflect: true }) type: 'contained' | 'contained-bottom' | 'default' =\n    'default';\n\n  /**\n   * 组件加载完成后初始化标签页\n   */\n  componentDidLoad() {\n    if (this.tabsHaveTarget()) {\n      const selectedTab = this.elm.querySelector('zane-tab[selected]');\n      if (selectedTab) this.selectTab((selectedTab as any).target);\n    } else {\n      const tabs = this.getTabs();\n      tabs.forEach((tab: HTMLZaneTabElement, index) => {\n        tab.setAttribute('target', `tab-${this.gid}-${index}`);\n        tab.type = this.type;\n      });\n      tabs[0].classList.add('first-tab');\n      tabs[tabs.length - 1].classList.add('last-tab');\n\n      const tabList: any = this.getTabList();\n      tabList.type = this.type;\n      this.getTabPanels().forEach((tab, index) => {\n        tab.setAttribute('value', `tab-${this.gid}-${index}`);\n      });\n      if (tabs.length > 0) this.selectTab(`tab-${this.gid}-0`);\n    }\n  }\n\n  /**\n   * 获取标签列表组件实例\n   *\n   * @return {HTMLElement} 标签列表元素\n   * @memberof Tabs\n   */\n  getTabList() {\n    return this.elm.querySelector(':scope > zane-tabs-list');\n  }\n\n  /**\n   * 获取所有标签面板元素\n   *\n   * @return {NodeListOf<Element>} 标签面板元素列表\n   * @memberof Tabs\n   */\n  getTabPanels() {\n    return this.elm.querySelectorAll(':scope > zane-tab-panel');\n  }\n\n  /**\n   * 获取所有标签页元素\n   *\n   * @return {NodeListOf<HTMLZaneTabElement>} 标签页元素列表\n   * @memberof Tabs\n   */\n  getTabs() {\n    return this.elm.querySelectorAll(':scope > zane-tabs-list zane-tab');\n  }\n\n  /**\n   * 渲染组件宿主容器\n   *\n   * @return {JSX.Element} 组件JSX结构\n   * @memberof Tabs\n   */\n  render() {\n    return (\n      <Host>\n        <slot />\n      </Host>\n    );\n  }\n\n  /**\n   * 选中指定目标标签页\n   *\n   * @param {string} target 要选中的标签页目标标识\n   * @memberof Tabs\n   */\n  selectTab(target) {\n    const tabs = this.getTabs();\n    // eslint-disable-next-line unicorn/no-for-loop\n    for (let i = 0; i < tabs.length; i++) {\n      const tab: any = tabs[i];\n      tab.selected = false;\n      tab.classList.remove('previous-tab', 'next-tab');\n    }\n    for (let i = 0; i < tabs.length; i++) {\n      const tab: any = tabs[i];\n      if (target === tab.target) {\n        tab.selected = true;\n\n        if (tabs[i - 1]) {\n          tabs[i - 1].classList.add('previous-tab');\n        }\n        if (tabs[i + 1]) {\n          tabs[i + 1].classList.add('next-tab');\n        }\n      }\n    }\n    const tabPanels = this.getTabPanels();\n    // eslint-disable-next-line unicorn/no-for-loop\n    for (let i = 0; i < tabPanels.length; i++) {\n      const tabPanel: any = tabPanels[i];\n      tabPanel.active = target === tabPanel.value;\n    }\n  }\n\n  /**\n   * 监听标签点击事件\n   *\n   * @param {CustomEvent} evt 标签点击事件对象\n   * @listens zane-tab--click\n   * @memberof Tabs\n   */\n  @Listen('zane-tab--click')\n  tabClick(evt: CustomEvent<any>) {\n    evt.stopPropagation();\n    if (evt.detail.target) {\n      this.selectTab(evt.detail.target);\n    }\n  }\n\n  /**\n   * 检查标签页是否已有预定义目标\n   *\n   * @return {boolean} 是否存在带target属性的标签页\n   * @memberof Tabs\n   */\n  tabsHaveTarget() {\n    return this.elm.querySelector(':scope > zane-tabs-list zane-tab[target]');\n  }\n}\n"],"mappings":"6IAAA,MAAMA,EAAU,gxF,MCqBHC,EAAI,MALjB,WAAAC,CAAAC,G,UAoBEC,KAAGC,IAAWC,IA2BWF,KAAIG,KAC3B,SAkIH,CA7HC,gBAAAC,GACE,GAAIJ,KAAKK,iBAAkB,CACzB,MAAMC,EAAcN,KAAKO,IAAIC,cAAc,sBAC3C,GAAIF,EAAaN,KAAKS,UAAWH,EAAoBI,O,KAChD,CACL,MAAMC,EAAOX,KAAKY,UAClBD,EAAKE,SAAQ,CAACC,EAAyBC,KACrCD,EAAIE,aAAa,SAAU,OAAOhB,KAAKC,OAAOc,KAC9CD,EAAIX,KAAOH,KAAKG,IAAI,IAEtBQ,EAAK,GAAGM,UAAUC,IAAI,aACtBP,EAAKA,EAAKQ,OAAS,GAAGF,UAAUC,IAAI,YAEpC,MAAME,EAAepB,KAAKqB,aAC1BD,EAAQjB,KAAOH,KAAKG,KACpBH,KAAKsB,eAAeT,SAAQ,CAACC,EAAKC,KAChCD,EAAIE,aAAa,QAAS,OAAOhB,KAAKC,OAAOc,IAAQ,IAEvD,GAAIJ,EAAKQ,OAAS,EAAGnB,KAAKS,UAAU,OAAOT,KAAKC,Q,EAUpD,UAAAoB,GACE,OAAOrB,KAAKO,IAAIC,cAAc,0B,CAShC,YAAAc,GACE,OAAOtB,KAAKO,IAAIgB,iBAAiB,0B,CASnC,OAAAX,GACE,OAAOZ,KAAKO,IAAIgB,iBAAiB,mC,CASnC,MAAAC,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAQ,QAAAE,IAAA,6C,CAWd,SAAAlB,CAAUC,GACR,MAAMC,EAAOX,KAAKY,UAElB,IAAK,IAAIgB,EAAI,EAAGA,EAAIjB,EAAKQ,OAAQS,IAAK,CACpC,MAAMd,EAAWH,EAAKiB,GACtBd,EAAIe,SAAW,MACff,EAAIG,UAAUa,OAAO,eAAgB,W,CAEvC,IAAK,IAAIF,EAAI,EAAGA,EAAIjB,EAAKQ,OAAQS,IAAK,CACpC,MAAMd,EAAWH,EAAKiB,GACtB,GAAIlB,IAAWI,EAAIJ,OAAQ,CACzBI,EAAIe,SAAW,KAEf,GAAIlB,EAAKiB,EAAI,GAAI,CACfjB,EAAKiB,EAAI,GAAGX,UAAUC,IAAI,e,CAE5B,GAAIP,EAAKiB,EAAI,GAAI,CACfjB,EAAKiB,EAAI,GAAGX,UAAUC,IAAI,W,GAIhC,MAAMa,EAAY/B,KAAKsB,eAEvB,IAAK,IAAIM,EAAI,EAAGA,EAAIG,EAAUZ,OAAQS,IAAK,CACzC,MAAMI,EAAgBD,EAAUH,GAChCI,EAASC,OAASvB,IAAWsB,EAASE,K,EAY1C,QAAAC,CAASC,GACPA,EAAIC,kBACJ,GAAID,EAAIE,OAAO5B,OAAQ,CACrBV,KAAKS,UAAU2B,EAAIE,OAAO5B,O,EAU9B,cAAAL,GACE,OAAOL,KAAKO,IAAIC,cAAc,2C","ignoreList":[]}