{"version":3,"names":["linkCss","Link","constructor","hostRef","this","gid","getComponentIndex","hasFocus","isActive","blurHandler","focusHandler","keyDownHandler","evt","key","mouseDownHandler","componentWillLoad","elm","hasAttribute","tabindex","getAttribute","undefined","removeAttribute","itemprop","render","h","Host","active","class","link","href","onBlur","onFocus","onKeyDown","onMouseDown","ref","input","nativeElement","target","triggerClick","click","windowKeyUp","windowMouseUp"],"sources":["src/components/link/link.scss?tag=zane-link&encapsulation=shadow","src/components/link/link.tsx"],"sourcesContent":["@use \"../../global/styles/commons\";\n\n\n:host {\n  display: inline-block;\n}\n\n.link {\n  height: 100%;\n  border-radius: var(--border-radius);\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  cursor: pointer;\n  text-decoration: var(--link-decoration, none);\n\n  color: var(--link-color, var(--link-01));\n\n  &:hover {\n    color: var(--link-color-hover, var(--hover-primary-text));\n    text-decoration: var(--link-decoration-hover, underline);\n  }\n\n  &:visited {\n    color: var(--link-color-visited, var(--visited-link));\n  }\n\n  &.active {\n    color: var(--link-color-active, var(--text-primary));\n  }\n\n\n}\n\n:host(.no-style) .link {\n  color: inherit !important;\n  text-decoration: none !important;\n}\n\n:host(.no-decoration) .link {\n  text-decoration: none !important;\n}\n\n:host(.inline) .link {\n  text-decoration: var(--link-decoration, underline);\n}\n\n.link.has-focus:not(.active) {\n  text-decoration: none;\n  @include commons.focus-ring();\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n} from '@stencil/core';\n\nimport { getComponentIndex } from '../../utils';\n\n/**\n * @name Link\n * @description Links allow users to click their way from page to page.\n * @category Navigation\n * @example <zane-link href=\"#\">Link</zane-link>\n */\n@Component({\n  shadow: true,\n  styleUrl: 'link.scss',\n  tag: 'zane-link',\n})\nexport class Link implements ComponentInterface {\n  @Element() elm!: HTMLElement;\n\n  gid: string = getComponentIndex();\n\n  @State() hasFocus = false;\n\n  /**\n   * Hyperlink to navigate to on click.\n   */\n  @Prop({ reflect: true }) href: string;\n  @State() isActive = false;\n\n  /**\n   * Sets or retrieves the window or frame at which to target content.\n   */\n  @Prop() target: string;\n  private itemprop?: string;\n  private nativeElement?: HTMLAnchorElement;\n  private tabindex?: number | string;\n\n  componentWillLoad() {\n    // If the ion-input has a tabindex attribute we get the value\n    // and pass it down to the native input, then remove it from the\n    // zane-input to avoid causing tabbing twice on the same element\n    if (this.elm.hasAttribute('tabindex')) {\n      const tabindex = this.elm.getAttribute('tabindex');\n      this.tabindex = tabindex === null ? undefined : tabindex;\n      this.elm.removeAttribute('tabindex');\n    }\n    if (this.elm.hasAttribute('itemprop')) {\n      const tabindex = this.elm.getAttribute('itemprop');\n      this.itemprop = tabindex === null ? undefined : tabindex;\n      this.elm.removeAttribute('itemprop');\n    }\n  }\n\n  render() {\n    return (\n      <Host active={this.isActive} has-focus={this.hasFocus}>\n        <a\n          class={{\n            active: this.isActive,\n            'has-focus': this.hasFocus,\n            link: true,\n          }}\n          href={this.href}\n          itemprop={this.itemprop}\n          onBlur={this.blurHandler}\n          onFocus={this.focusHandler}\n          onKeyDown={this.keyDownHandler}\n          onMouseDown={this.mouseDownHandler}\n          ref={(input) => (this.nativeElement = input)}\n          tabindex={this.tabindex}\n          target={this.target}\n        >\n          <slot />\n        </a>\n      </Host>\n    );\n  }\n\n  @Method()\n  async triggerClick() {\n    if (this.nativeElement) {\n      this.nativeElement.click();\n    }\n  }\n\n  @Listen('keyup', { target: 'window' })\n  windowKeyUp(evt) {\n    if (this.isActive && (evt.key === 'Enter' || evt.key === ' '))\n      this.isActive = false;\n  }\n\n  @Listen('mouseup', { target: 'window' })\n  windowMouseUp() {\n    if (this.isActive) this.isActive = false;\n  }\n\n  private blurHandler = () => {\n    this.hasFocus = false;\n  };\n\n  private focusHandler = () => {\n    this.hasFocus = true;\n  };\n\n  private keyDownHandler = (evt) => {\n    if (evt.key === 'Enter' || evt.key === ' ') {\n      this.isActive = true;\n    }\n  };\n\n  private mouseDownHandler = () => {\n    this.isActive = true;\n  };\n}\n"],"mappings":"6IAAA,MAAMA,EAAU,6mG,MCyBHC,EAAI,MALjB,WAAAC,CAAAC,G,UAQEC,KAAGC,IAAWC,IAELF,KAAQG,SAAG,MAMXH,KAAQI,SAAG,MAqEZJ,KAAWK,YAAG,KACpBL,KAAKG,SAAW,KAAK,EAGfH,KAAYM,aAAG,KACrBN,KAAKG,SAAW,IAAI,EAGdH,KAAAO,eAAkBC,IACxB,GAAIA,EAAIC,MAAQ,SAAWD,EAAIC,MAAQ,IAAK,CAC1CT,KAAKI,SAAW,I,GAIZJ,KAAgBU,iBAAG,KACzBV,KAAKI,SAAW,IAAI,CAEvB,CA5EC,iBAAAO,GAIE,GAAIX,KAAKY,IAAIC,aAAa,YAAa,CACrC,MAAMC,EAAWd,KAAKY,IAAIG,aAAa,YACvCf,KAAKc,SAAWA,IAAa,KAAOE,UAAYF,EAChDd,KAAKY,IAAIK,gBAAgB,W,CAE3B,GAAIjB,KAAKY,IAAIC,aAAa,YAAa,CACrC,MAAMC,EAAWd,KAAKY,IAAIG,aAAa,YACvCf,KAAKkB,SAAWJ,IAAa,KAAOE,UAAYF,EAChDd,KAAKY,IAAIK,gBAAgB,W,EAI7B,MAAAE,GACE,OACEC,EAACC,EAAI,CAAAZ,IAAA,2CAACa,OAAQtB,KAAKI,SAAQ,YAAaJ,KAAKG,UAC3CiB,EAAA,KAAAX,IAAA,2CACEc,MAAO,CACLD,OAAQtB,KAAKI,SACb,YAAaJ,KAAKG,SAClBqB,KAAM,MAERC,KAAMzB,KAAKyB,KACXP,SAAUlB,KAAKkB,SACfQ,OAAQ1B,KAAKK,YACbsB,QAAS3B,KAAKM,aACdsB,UAAW5B,KAAKO,eAChBsB,YAAa7B,KAAKU,iBAClBoB,IAAMC,GAAW/B,KAAKgC,cAAgBD,EACtCjB,SAAUd,KAAKc,SACfmB,OAAQjC,KAAKiC,QAEbb,EAAQ,QAAAX,IAAA,8C,CAOhB,kBAAMyB,GACJ,GAAIlC,KAAKgC,cAAe,CACtBhC,KAAKgC,cAAcG,O,EAKvB,WAAAC,CAAY5B,GACV,GAAIR,KAAKI,WAAaI,EAAIC,MAAQ,SAAWD,EAAIC,MAAQ,KACvDT,KAAKI,SAAW,K,CAIpB,aAAAiC,GACE,GAAIrC,KAAKI,SAAUJ,KAAKI,SAAW,K","ignoreList":[]}