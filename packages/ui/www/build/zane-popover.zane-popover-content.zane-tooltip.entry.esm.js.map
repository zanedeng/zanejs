{"version":3,"file":"zane-popover.zane-popover-content.zane-tooltip.entry.esm.js","sources":["src/components/popover/popover/popover.scss?tag=zane-popover&encapsulation=shadow","src/components/popover/popover/popover.tsx","src/components/popover/popover-content/popover-content.scss?tag=zane-popover-content&encapsulation=shadow","src/components/popover/popover-content/popover-content.tsx","src/components/tooltip/tooltip.scss?tag=zane-tooltip&encapsulation=shadow","src/components/tooltip/tooltip.tsx"],"sourcesContent":["@use '../../../global/styles/commons';\n\n:host {\n  --zane-popover-tiptab-padding: 0.5rem;\n  --zane-popover-height: inherit;\n\n  display: inline-block;\n  height: var(--zane-popover-height);\n}\n\n.popover {\n  height: var(--zane-popover-height);\n\n  &.tip-tab {\n    padding: var(--zane-popover-tiptab-padding);\n    line-height: 0;\n    transition: background 0.1s ease-out 0s;\n\n    &.open {\n      background: var(--layer);\n    }\n  }\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n} from '@stencil/core';\n\nimport { getComponentIndex } from '../../../utils';\nimport PopoverController from './popover-controller';\n\n/**\n * @name Popover\n * @description The Popover component is used to display additional information.\n * @category Informational\n * @subcategory Popover\n * @img /assets/img/dropdown.webp\n * @imgDark /assets/img/dropdown-dark.webp\n */\n@Component({\n  shadow: true,\n  styleUrl: 'popover.scss',\n  tag: 'zane-popover',\n})\nexport class Popover implements ComponentInterface {\n  /**\n   * Emitted when the popover is closed.\n   */\n  @Event({ eventName: 'zane-popover--close' }) closeEvent: EventEmitter;\n\n  /**\n   * Time in milliseconds to wait before hiding the popover when the trigger is set to `\"hover\"`.\n   */\n  @Prop() dismissTimeout: number = 300;\n  gid: string = getComponentIndex();\n  @Element() host!: HTMLElement;\n\n  /**\n   * The offset of the popover relative to the trigger element.\n   * This value is used to adjust the position of the popover along the axis of the trigger element.\n   */\n  @Prop() offset: number = 4;\n\n  /**\n   * Determines whether the popover is open.\n   */\n  @Prop({ mutable: true, reflect: true }) open: boolean = false;\n\n  /**\n   * Emitted when the popover is opened.\n   */\n  @Event({ eventName: 'zane-popover--open' }) openEvent: EventEmitter;\n\n  /**\n   * Time in milliseconds to wait before showing the popover when the trigger is set to `\"hover\"`.\n   */\n  @Prop() openTimeout: number = 200;\n\n  /**\n   * The placement of the popover relative to the trigger element.\n   * Possible values are:\n   * - `\"top\"`: The popover is placed above the trigger element.\n   * - `\"top-start\"`: The popover is placed above the trigger element, aligned to the start.\n   * - `\"top-end\"`: The popover is placed above the trigger element, aligned to the end.\n   * - `\"right\"`: The popover is placed to the right of the trigger element.\n   * - `\"right-start\"`: The popover is placed to the right of the trigger element, aligned to the start.\n   * - `\"right-end\"`: The popover is placed to the right of the trigger element, aligned to the end.\n   * - `\"bottom\"`: The popover is placed below the trigger element.\n   * - `\"bottom-start\"`: The popover is placed below the trigger element, aligned to the start.\n   * - `\"bottom-end\"`: The popover is placed below the trigger element, aligned to the end.\n   * - `\"left\"`: The popover is placed to the left of the trigger element.\n   * - `\"left-start\"`: The popover is placed to the left of the trigger element, aligned to the start.\n   * - `\"left-end\"`: The popover is placed to the left of the trigger element, aligned to the end.\n   */\n  @Prop({ mutable: true }) placements: string;\n\n  popoverController: PopoverController;\n\n  slotRef: HTMLSlotElement;\n\n  /**\n   * The tip of the popover.\n   * Possible values are:\n   * - `\"caret\"`: A triangle tip.\n   * - `\"tab\"`: A tab tip.\n   * - `\"none\"`: No tip.\n   */\n  @Prop({ reflect: true }) tip: 'caret' | 'none' | 'tab' = 'caret';\n\n  /**\n   * Determines how the popover is triggered.\n   * Possible values are:\n   * - `\"click\"`: The popover is shown or hidden when the trigger element is clicked.\n   * - `\"hover\"`: The popover is shown when the mouse hovers over the trigger element and hidden when it leaves.\n   * - `\"manual\"`: The visibility of the popover must be manually controlled through the `open` property.\n   */\n  @Prop() trigger: 'click' | 'hover' | 'manual' = 'hover';\n\n  async componentDidLoad() {\n    const contentRef = this.host.querySelector('zane-popover-content');\n\n    if (!contentRef) {\n      throw new Error(\n        'The zane-popover component requires a zane-popover-content component to be present.',\n      );\n    }\n\n    const arrowRef = contentRef.shadowRoot.querySelector(\n      '.arrow',\n    ) as HTMLElement;\n\n    this.popoverController = new PopoverController(\n      this.host,\n      this.trigger,\n      this.open,\n      contentRef as HTMLElement,\n      this.tip === 'tab' ? 0 : this.offset,\n      this.tip === 'tab' ? 8 : 0,\n      this.showPopover,\n      this.hidePopover,\n      this.placements,\n      this.openTimeout,\n      this.dismissTimeout,\n      this.tip === 'caret' ? arrowRef : null,\n    );\n\n    let triggerRef = this.slotRef.assignedElements()[0] as HTMLElement;\n    if (triggerRef.nodeName === 'SLOT') {\n      const assignedElements = (\n        triggerRef as HTMLSlotElement\n      ).assignedElements();\n      if (\n        assignedElements.length > 0 &&\n        assignedElements[0].nodeName !== 'ZANE-POPOVER-CONTENT'\n      ) {\n        triggerRef = assignedElements[0] as HTMLSlotElement;\n      }\n    }\n\n    if (triggerRef) {\n      this.popoverController.registerTarget(triggerRef);\n      this.popoverController.setTriggerRef(triggerRef);\n    }\n\n    if (this.open) {\n      const triggerObserver = new IntersectionObserver(\n        (entries) => {\n          if (entries[0].isIntersecting) {\n            this.popoverController.computePositionThrottle('onLoad');\n            triggerObserver.disconnect();\n          }\n        },\n        {\n          threshold: [0, 1],\n        },\n      );\n      triggerObserver.observe(triggerRef);\n    }\n  }\n\n  componentDidUpdate() {\n    this.popoverController.setOpen(this.open);\n    if (this.open) {\n      this.popoverController.computePositionThrottle('onUpdate');\n    }\n  }\n\n  componentWillLoad() {\n    if (this.tip === 'tab' && !this.placements) {\n      this.placements = 'bottom-end,bottom-start,top-end,top-start';\n    }\n  }\n\n  disconnectedCallback() {\n    this.popoverController.destroy();\n  }\n\n  /**\n   * Hides the popover. This method is useful when the trigger is set to `\"manual\"`.\n   */\n  @Method()\n  async hide() {\n    this.open = false;\n  }\n\n  hidePopover = () => {\n    this.open = false;\n    this.closeEvent.emit();\n  };\n\n  render() {\n    return (\n      <Host gid={this.gid}>\n        <div\n          class={{\n            [`tip-${this.tip}`]: true,\n            open: this.open,\n            popover: true,\n          }}\n        >\n          <slot ref={(el) => (this.slotRef = el as HTMLSlotElement)} />\n        </div>\n      </Host>\n    );\n  }\n\n  @Listen('resize', { target: 'window' })\n  resizeHandler() {\n    this.popoverController.computePositionThrottle('resize');\n  }\n\n  /**\n   * Shows the popover.\n   * This method is particularly useful when the trigger mode is set to `\"manual\"`.\n   * It allows for programmatic control over the visibility of the popover, making it visible regardless of the trigger mode.\n   * Optionally, a target HTMLElement can be provided to dynamically set the trigger element for the popover.\n   */\n  @Method()\n  async show(target?: HTMLElement) {\n    if (target) {\n      this.popoverController.registerTarget(target);\n      this.popoverController.setTriggerRef(target);\n    }\n    this.showPopover();\n  }\n\n  showPopover = () => {\n    this.open = true;\n    setTimeout(() => this.openEvent.emit());\n  };\n\n  @Listen('click', { target: 'window' })\n  windowClickHandler(evt) {\n    this.popoverController.windowClickHandler(evt);\n  }\n}\n","@use '../../../global/styles/commons';\n\n:host {\n  /**\n   * @prop --popover-content-background: Background color of the popover content\n   */\n  --popover-content-background: var(--layer);\n\n  /**\n   * @prop --popover-padding: Padding of the popover content\n   */\n  --popover-content-padding: #{commons.v(--spacing-05)};\n\n  /**\n   * @prop --popover-content-border-radius: Border radius of the popover content\n   */\n  --popover-content-border-radius: 2px;\n\n  /**\n    * @prop --zane-menu-shadow: Shadow of popover content\n   */\n  --popover-content-shadow: none;\n  --popover-content-caret-size: 0.75rem;\n\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: commons.v(--z-index-popover);\n  display: inline-block;\n  pointer-events: none;\n  transform: scale(0);\n  transition: transform 0.1s ease-out 0s;\n}\n\n:host-context(zane-popover[open]) {\n  pointer-events: auto;\n  transform: scale(1);\n}\n\n:host-context(zane-popover[tip='caret']) {\n  .arrow {\n    transform: rotate(45deg) scale(1);\n  }\n}\n\n.popover-content {\n  position: relative;\n  padding: var(--popover-content-padding);\n  background: var(--popover-content-background);\n  border-radius: var(--popover-content-border-radius);\n  filter: var(--popover-content-shadow, none);\n\n  .arrow {\n    position: absolute;\n    z-index: -1;\n    width: var(--popover-content-caret-size);\n    height: var(--popover-content-caret-size);\n    background: var(--popover-content-background);\n    transform: rotate(45deg) scale(0);\n  }\n}\n","import { Component, ComponentInterface, Element, h, Host } from '@stencil/core';\n\nimport { getComponentIndex } from '../../../utils';\n\n/**\n * @name Popover Content\n * @description The PopoverContent component is used to display additional information.\n * @category Informational\n * @subcategory Popover\n * @childComponent true\n */\n@Component({\n  shadow: true,\n  styleUrl: 'popover-content.scss',\n  tag: 'zane-popover-content',\n})\nexport class PopoverContent implements ComponentInterface {\n  gid: string = getComponentIndex();\n\n  @Element() host!: HTMLElement;\n\n  render() {\n    return (\n      <Host>\n        <div class=\"popover-content\">\n          <slot />\n\n          <div class=\"arrow\"></div>\n        </div>\n      </Host>\n    );\n  }\n}\n","@use '../../global/styles/commons';\n\n:host {\n  --zane-tooltip-height: inherit;\n\n  display: inline-block;\n  height: var(--zane-tooltip-height);\n}\n\n.popover {\n  --zane-popover-height: var(--zane-tooltip-height);\n}\n\n.tooltip-content {\n  --popover-content-background: var(--background-inverse);\n  --popover-content-padding: var(--spacing-03) var(--spacing-05);\n  --popover-content-border-radius: 0;\n  --popover-content-caret-size: 0.5rem;\n\n  max-width: 18rem;\n  color: var(--text-inverse);\n\n  @include commons.font-style(label-01);\n}\n","import { Component, Element, h, Host, Listen, Prop } from '@stencil/core';\n\n/**\n * @name Tooltip\n * @description The Tooltip component is used to display additional information on hover.\n * @category Informational\n * @tag content\n * @img /assets/img/tooltip.webp\n * @imgDark /assets/img/tooltip-dark.webp\n */\n@Component({\n  shadow: true,\n  styleUrl: 'tooltip.scss',\n  tag: 'zane-tooltip',\n})\nexport class Tooltip {\n  /**\n   * The content of the tooltip.\n   */\n  @Prop({ mutable: true }) content: string = '';\n\n  @Element() elm!: HTMLElement;\n\n  /**\n   * The placement of the popover relative to the trigger element.\n   * Possible values are:\n   * - `\"top\"`: The popover is placed above the trigger element.\n   * - `\"right\"`: The popover is placed to the right of the trigger element.\n   * - `\"bottom\"`: The popover is placed below the trigger element.\n   * - `\"left\"`: The popover is placed to the left of the trigger element.\n   */\n  @Prop() placements: string = 'top,bottom,right,left';\n\n  popoverElm: any;\n\n  targetElm: HTMLElement;\n\n  /**\n   * If true, the tooltip will be managed by the parent component.\n   */\n  @Prop({ reflect: true }) trigger: 'hover' | 'manual' = 'hover';\n\n  render() {\n    return (\n      <Host>\n        <zane-popover\n          class=\"popover\"\n          placements={this.placements}\n          ref={(elm) => (this.popoverElm = elm)}\n          tip=\"caret\"\n          trigger={this.trigger}\n        >\n          <slot />\n\n          <zane-popover-content class=\"tooltip-content\">\n            {this.content}\n            <slot name=\"content\"></slot>\n          </zane-popover-content>\n        </zane-popover>\n      </Host>\n    );\n  }\n\n  @Listen('mouseover', { target: 'window' })\n  windowMouseOver(evt) {\n    const path = evt.path || evt.composedPath();\n    for (const elm of path) {\n      if (elm === this.elm) return;\n    }\n    let target: HTMLElement;\n    for (const elm of path) {\n      if (\n        elm.hasAttribute &&\n        elm.hasAttribute('tooltip-target') &&\n        elm.getAttribute('tooltip-target') === this.elm.getAttribute('id')\n      )\n        target = elm;\n    }\n\n    if (target && this.targetElm !== target) {\n      this.targetElm = target;\n      if (target.hasAttribute('tooltip-content'))\n        this.content = target.getAttribute('tooltip-content');\n      this.popoverElm.show(target);\n    }\n  }\n}\n"],"names":[],"mappings":"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"}