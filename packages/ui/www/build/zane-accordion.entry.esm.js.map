{"version":3,"file":"zane-accordion.entry.esm.js","sources":["src/components/accordion/accordion/accordion.scss?tag=zane-accordion&encapsulation=shadow","src/components/accordion/accordion/accordion.tsx"],"sourcesContent":["@use \"../../../global/styles/commons\";\n\n:host {\n  display: block;\n}\n\nslot::slotted(zane-accordion-item) {\n  border-top: 1px solid var(--border-subtle);\n}\n\nslot::slotted(zane-accordion-item:last-child) {\n  border-bottom: 1px solid var(--border-subtle);\n}\n","import { Component, Element, h, Host, Listen, Prop } from '@stencil/core';\n\n/**\n * @name Accordion\n * @description An accordion is a vertically stacked list of headers that reveal or hide associated sections of content.\n * @overview\n *  <p>The accordion component delivers large amounts of content in a small space through progressive disclosure. The header title give the user a high level overview of the content allowing the user to decide which sections to read.</p>\n *  <p>Accordions can make information processing and discovering more effective. However, it does hide content from users and it’s important to account for a user not noticing or reading all of the included content. If a user is likely to read all of the content then don’t use an accordion as it adds the burden of an extra click; instead use a full scrolling page with normal headers.</p>\n * @category Data Display\n * @subcategory Accordion\n * @tags display\n * @img /assets/img/accordion.webp\n * @imgDark /assets/img/accordion-dark.webp\n */\n@Component({\n  shadow: true,\n  styleUrl: 'accordion.scss',\n  tag: 'zane-accordion',\n})\nexport class Accordion {\n  /**\n   * Accordion item dropdown alignment.\n   */\n  @Prop({ reflect: true }) align: 'end' | 'start' = 'end';\n\n  @Element() elm!: HTMLElement;\n\n  @Prop() multiple: boolean = false;\n\n  /**\n   * The According size.\n   */\n  @Prop({ reflect: true }) size: 'lg' | 'md' | 'sm' = 'md';\n\n  @Listen('zane-accordion-item-click')\n  accordionItemClick(evt: CustomEvent<any>) {\n    if (!this.multiple) {\n      const accordionItems = this.elm.querySelectorAll('zane-accordion-item');\n      accordionItems.forEach((item) => {\n        if (item !== evt.detail.element) {\n          (item as any).open = false;\n        }\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <slot />\n      </Host>\n    );\n  }\n}\n"],"names":[],"mappings":";;AAAA,MAAM,YAAY,GAAG,qhFAAqhF;;MCmB7hF,SAAS,GAAA,MAAA;AALtB,IAAA,WAAA,CAAA,OAAA,EAAA;;AAME;;AAEG;AACsB,QAAA,IAAK,CAAA,KAAA,GAAoB,KAAK;AAI/C,QAAA,IAAQ,CAAA,QAAA,GAAY,KAAK;AAEjC;;AAEG;AACsB,QAAA,IAAI,CAAA,IAAA,GAAuB,IAAI;AAqBzD;AAlBC,IAAA,kBAAkB,CAAC,GAAqB,EAAA;AACtC,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,MAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,qBAAqB,CAAC;AACvE,YAAA,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;gBAC9B,IAAI,IAAI,KAAK,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE;AAC9B,oBAAA,IAAY,CAAC,IAAI,GAAG,KAAK;;AAE9B,aAAC,CAAC;;;IAIN,MAAM,GAAA;QACJ,QACE,EAAC,IAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,EACH,CAAQ,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,CAAA,CACH;;;;;;;;"}