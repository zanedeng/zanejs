{"version":3,"names":["accordionItemCss","AccordionItem","constructor","hostRef","this","disabled","endSlotHasContent","gid","getComponentIndex","hasFocus","open","startSlotHasContent","render","h","Host","class","id","onClick","zaneAccordionItemClick","emit","element","elm","onBlur","blurHandler","onFocus","focusHandler","type","name","size","part","heading","role"],"sources":["src/components/accordion/accordion-item/accordion-item.scss?tag=zane-accordion-item&encapsulation=shadow","src/components/accordion/accordion-item/accordion-item.tsx"],"sourcesContent":["@use '../../../global/styles/commons';\n\n:host {\n  /**\n   * @prop --zane-accordion-item-heading-background - Background color of the accordion item header\n   */\n  --zane-accordion-item-heading-background: transparent;\n\n  /**\n   * @prop --zane-accordion-item-heading-background-hover - Background color of the accordion item header on hover\n   */\n  --zane-accordion-item-heading-background-hover: var(--layer-hover);\n\n  /**\n   * @prop --zane-accordion-item-title-align - Alignment of the accordion title\n   */\n  --zane-accordion-item-title-align: start;\n\n  display: block;\n}\n\n.accordion-item {\n  .accordion-heading {\n    display: flex;\n    flex-direction: row-reverse;\n    gap: 0.5rem;\n    align-items: center;\n    justify-content: flex-start;\n    width: 100%;\n    height: 2.5rem;\n    padding: 0 v(--spacing-05);\n    color: v(--text-primary);\n    cursor: pointer;\n    background: var(--zane-accordion-item-heading-background);\n    border: 0;\n    border-radius: 0;\n\n    @include commons.font-style(body);\n\n    .accordion-title {\n      width: 100%;\n      text-align: var(--zane-accordion-item-title-align);\n    }\n\n    svg {\n      flex: 0 0 1rem;\n    }\n\n    &:hover {\n      background: var(--zane-accordion-item-heading-background-hover);\n    }\n\n    &.has-focus {\n      @include commons.focus-ring;\n    }\n  }\n\n  .item-section {\n    height: 0;\n    text-align: start;\n    pointer-events: none;\n    background: var(--zane-accordion-item-heading-background);\n    opacity: 0;\n    transition: all 0.1s linear;\n  }\n\n  .accordion-icon {\n    transition: transform 0.1s linear;\n  }\n\n  &.open {\n    .item-section {\n      height: 100%;\n      padding: var(--spacing-03) var(--spacing-10) var(--spacing-06)\n        var(--spacing-05);\n      pointer-events: auto;\n      opacity: 1;\n    }\n\n    .accordion-icon {\n      transform: rotate(180deg);\n    }\n  }\n\n  &.disabled {\n    .accordion-heading {\n      color: var(--text-disabled);\n      cursor: not-allowed;\n\n      .accordion-icon {\n        color: var(--text-disabled);\n      }\n    }\n  }\n}\n\n:host-context([size='sm']) {\n  .accordion-item {\n    .accordion-heading {\n      height: 2rem;\n    }\n  }\n}\n\n:host-context([size='lg']) {\n  .accordion-item {\n    .accordion-heading {\n      height: 3rem;\n    }\n  }\n}\n\n:host-context(zane-accordion[align='start']) {\n  .accordion-item {\n    .accordion-heading {\n      flex-direction: row;\n    }\n  }\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  State,\n} from '@stencil/core';\n\nimport { getComponentIndex } from '../../../utils';\n\n/**\n * 可折叠面板项(Accordion Item)组件\n *\n * 作为zane-accordion的子组件使用，实现单个可折叠面板项的功能\n *\n * @component\n * @shadowDom 使用Shadow DOM封装组件样式\n * @slot heading 标题插槽，可自定义标题内容\n * @slot default 内容插槽，放置折叠面板的内容\n */\n@Component({\n  shadow: true,\n  styleUrl: 'accordion-item.scss',\n  tag: 'zane-accordion-item',\n})\nexport class AccordionItem {\n\n  /**\n   * 禁用状态控制\n   *\n   * - true: 禁用该折叠项，不可交互\n   * - false: 正常状态(默认)\n   *\n   * @type {boolean}\n   * @default false\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * 组件宿主元素引用\n   *\n   * 用于直接访问组件DOM元素\n   *\n   * @type {HTMLElement}\n   */\n  @Element() elm!: HTMLElement;\n\n  /**\n   * 检测end插槽是否有内容\n   *\n   * 用于动态调整布局样式\n   *\n   * @type {boolean}\n   */\n  @State() endSlotHasContent = false;\n\n  /**\n   * 组件唯一标识符\n   *\n   * 用于ARIA属性和事件关联\n   *\n   * @type {string}\n   */\n  gid: string = getComponentIndex();\n\n  /**\n   * 焦点状态\n   *\n   * - true: 组件当前获得焦点\n   * - false: 组件未获得焦点(默认)\n   *\n   * @type {boolean}\n   */\n  @State() hasFocus = false;\n\n  /**\n   * 面板标题文本\n   *\n   * 当heading插槽无内容时显示此文本\n   *\n   * @type {string}\n   */\n  @Prop() heading: string;\n\n  /**\n   * 面板展开状态\n   *\n   * - true: 面板已展开\n   * - false: 面板已折叠(默认)\n   *\n   * @type {boolean}\n   * @default false\n   * @mutable 允许组件内部修改\n   * @reflectToAttr 同步到DOM属性\n   */\n  @Prop({ mutable: true, reflect: true }) open: boolean = false;\n\n  /**\n   * 检测start插槽是否有内容\n   *\n   * 用于动态调整布局样式\n   *\n   * @type {boolean}\n   */\n  @State() startSlotHasContent = false;\n\n  /**\n   * 面板点击事件\n   *\n   * 当面板被点击时触发，携带当前元素引用和状态\n   *\n   * @type {EventEmitter}\n   * @event zane-accordion-item--click\n   */\n  @Event({ eventName: 'zane-accordion-item--click' })\n  zaneAccordionItemClick: EventEmitter;\n\n  /**\n   * 渲染组件\n   *\n   * 包含标题按钮和内容区域，实现完整的可折叠面板项\n   *\n   * @returns {JSX.Element} 组件JSX结构\n   */\n  render = () => {\n    return (\n      <Host open={this.open}>\n        <div\n          class={{\n            'accordion-item': true,\n            disabled: this.disabled,\n            open: this.open,\n          }}\n        >\n          <button\n            aria-controls={`accordion-control-${this.gid}`}\n            aria-disabled={`${this.disabled}`}\n            aria-expanded={`${this.open}`}\n            class={{ 'accordion-heading': true, 'has-focus': this.hasFocus }}\n            id={`accordion-heading-${this.gid}`}\n            onClick={() => {\n              if (!this.disabled) {\n                this.open = !this.open;\n                this.hasFocus = true;\n                this.zaneAccordionItemClick.emit({\n                  element: this.elm,\n                  gid: this.gid,\n                  open: this.open,\n                });\n              }\n            }}\n            onBlur={this.blurHandler}\n            onFocus={this.focusHandler}\n            type=\"button\"\n          >\n            <zane-icon\n              class=\"accordion-icon inherit\"\n              name=\"chevron--down\"\n              size=\"1rem\"\n            />\n            <div class=\"accordion-title\" part=\"title\">\n              <slot name=\"heading\">{this.heading}</slot>\n            </div>\n          </button>\n          <div\n            aria-labelledby={`accordion-heading-${this.gid}`}\n            class=\"item-section slot-main\"\n            id={`accordion-control-${this.gid}`}\n            role=\"region\"\n          >\n            <slot />\n          </div>\n        </div>\n      </Host>\n    );\n  };\n\n  /**\n   * 处理失去焦点事件\n   *\n   * @private\n   */\n  private blurHandler = () => {\n    this.hasFocus = false;\n  };\n\n  /**\n   * 处理获得焦点事件\n   *\n   * @private\n   */\n  private focusHandler = () => {\n    this.hasFocus = true;\n  };\n}\n"],"mappings":"oJAAA,MAAMA,EAAmB,urJ,MC4BZC,EAAa,MAL1B,WAAAC,CAAAC,G,2EAgBUC,KAAQC,SAAY,MAkBnBD,KAAiBE,kBAAG,MAS7BF,KAAGG,IAAWC,IAULJ,KAAQK,SAAG,MAsBoBL,KAAIM,KAAY,MAS/CN,KAAmBO,oBAAG,MAoB/BP,KAAMQ,OAAG,IAELC,EAACC,EAAI,CAACJ,KAAMN,KAAKM,MACfG,EAAA,OACEE,MAAO,CACL,iBAAkB,KAClBV,SAAUD,KAAKC,SACfK,KAAMN,KAAKM,OAGbG,EAAA,0BACiB,qBAAqBT,KAAKG,MAAK,gBAC/B,GAAGH,KAAKC,WAAU,gBAClB,GAAGD,KAAKM,OACvBK,MAAO,CAAE,oBAAqB,KAAM,YAAaX,KAAKK,UACtDO,GAAI,qBAAqBZ,KAAKG,MAC9BU,QAAS,KACP,IAAKb,KAAKC,SAAU,CAClBD,KAAKM,MAAQN,KAAKM,KAClBN,KAAKK,SAAW,KAChBL,KAAKc,uBAAuBC,KAAK,CAC/BC,QAAShB,KAAKiB,IACdd,IAAKH,KAAKG,IACVG,KAAMN,KAAKM,M,GAIjBY,OAAQlB,KAAKmB,YACbC,QAASpB,KAAKqB,aACdC,KAAK,UAELb,EACE,aAAAE,MAAM,yBACNY,KAAK,gBACLC,KAAK,SAEPf,EAAA,OAAKE,MAAM,kBAAkBc,KAAK,SAChChB,EAAM,QAAAc,KAAK,WAAWvB,KAAK0B,WAG/BjB,EACmB,8CAAqBT,KAAKG,MAC3CQ,MAAM,yBACNC,GAAI,qBAAqBZ,KAAKG,MAC9BwB,KAAK,UAELlB,EAAA,gBAYFT,KAAWmB,YAAG,KACpBnB,KAAKK,SAAW,KAAK,EAQfL,KAAYqB,aAAG,KACrBrB,KAAKK,SAAW,IAAI,CAEvB,C","ignoreList":[]}