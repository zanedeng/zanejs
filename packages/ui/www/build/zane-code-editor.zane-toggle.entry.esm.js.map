{"version":3,"file":"zane-code-editor.zane-toggle.entry.esm.js","sources":["src/3d-party/monaco/index.tsx","src/components/code-editor/code-editor.scss?tag=zane-code-editor&encapsulation=shadow","src/components/code-editor/code-editor.tsx","src/components/toggle/toggle.scss?tag=zane-toggle&encapsulation=shadow","src/components/toggle/toggle.tsx"],"sourcesContent":["import { getAssetPath } from '@stencil/core';\n\nimport { loadScript, waitUntil } from '../../utils';\n\nconst VERSION = '0.52.2';\n\nconst win = window as any;\n\nlet loadMonacoCalled = false;\n\nexport default async function loadMonaco() {\n  if (loadMonacoCalled) {\n    await waitUntil(() => !!win.monaco);\n    return;\n  }\n\n  loadMonacoCalled = true;\n\n  // eslint-disable-next-line n/prefer-global/process\n  if (process.env.THIRD_PARTY_ASSETS === 'LOCAL') {\n    win.require = {\n      paths: { vs: getAssetPath('./assets/node_modules/monaco-editor/min/vs') },\n    };\n    await loadScript(\n      getAssetPath('./assets/node_modules/monaco-editor/min/vs/loader.js'),\n    );\n    await loadScript(\n      getAssetPath(\n        './assets/node_modules/monaco-editor/min/vs/editor/editor.main.nls.js',\n      ),\n    );\n    await loadScript(\n      getAssetPath(\n        './assets/node_modules/monaco-editor/min/vs/editor/editor.main.js',\n      ),\n    );\n  } else {\n    win.require = {\n      paths: {\n        vs: `https://cdn.jsdelivr.net/npm/monaco-editor@${VERSION}/min/vs`,\n      },\n    };\n    await loadScript(\n      `https://cdn.jsdelivr.net/npm/monaco-editor@${VERSION}/min/vs/loader.js`,\n    );\n    await loadScript(\n      `https://cdn.jsdelivr.net/npm/monaco-editor@${VERSION}/min/vs/editor/editor.main.min.js`,\n    );\n  }\n\n  await waitUntil(() => !!win.monaco);\n}\n","@use '../../3d-party/monaco/editor.main';\n@use '../../global/styles/commons';\n\n:host {\n  --code-editor-border: 1px solid #{commons.v(--border-strong-01)};\n  --code-editor-border-radius: #{commons.v(--border-radius)};\n\n  display: block;\n  height: 100%;\n}\n\n.code-editor-loader {\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  gap: commons.v(--spacing-02);\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n}\n\n.code-editor-component {\n  position: relative;\n  height: 100%;\n\n  .editor {\n    height: 100%;\n    min-height: 2rem;\n    overflow: hidden;\n    border: var(--code-editor-border);\n    border-radius: var(--code-editor-border-radius);\n  }\n}\n\n.read-only-tag {\n  position: absolute;\n  top: commons.v(--spacing-05);\n  right: 9rem;\n  z-index: 1;\n}\n\n:host(.no-border) {\n  .code-editor-component {\n    .editor {\n      border: none;\n      border-radius: 0;\n    }\n  }\n}\n\n/**\n * States\n */\n.code-editor-component.has-focus .editor {\n  border-color: transparent;\n\n  @include commons.focus-ring;\n}\n\n@each $state in [success, warning, error] {\n  :host-context(.input-state-#{$state}) {\n    .code-editor-component {\n      .editor {\n        border-color: commons.v(--support-#{$state});\n      }\n\n      &.has-focus {\n        .editor {\n          @include commons.focus-ring(var(--support-#{$state}));\n        }\n      }\n    }\n  }\n}\n","import type { InputComponentInterface } from '../../interfaces';\n\nimport {\n  Component,\n  ComponentInterface,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\n\nimport loadMonaco from '../../3d-party/monaco';\nimport {\n  debounceEvent,\n  getComponentIndex,\n  isDarkMode,\n  isInViewport,\n  observeThemeChange,\n} from '../../utils';\n\nconst win = window as any;\n\n/**\n * 基于Monaco Editor的代码编辑器组件\n *\n * 提供语法高亮、智能提示等专业编辑功能，支持暗黑/亮色主题切换，\n * 内置防抖机制优化高频变更事件，适用于代码片段展示和实时编辑场景。\n *\n * @example\n * ```html\n * <zane-code-editor\n *   language=\"javascript\"\n *   minimap\n *   debounce=\"500\"\n *   value=\"console.log('Hello  World')\"\n * ></zane-code-editor>\n * ```\n */\n@Component({\n  shadow: true,\n  styleUrl: 'code-editor.scss',\n  tag: 'zane-code-editor',\n})\nexport class CodeEditor implements ComponentInterface, InputComponentInterface {\n\n  /**\n   * 变更事件防抖时间（毫秒）\n   *\n   * 避免高频输入时频繁触发变更事件，\n   * 设置为0可禁用防抖\n   *\n   * @defaultValue `250`\n   */\n  @Prop() debounce = 250;\n\n  /**\n   * 禁用状态\n   *\n   * 禁用时编辑器不可编辑但可滚动查看内容\n   *\n   * @defaultValue `false`\n   */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  /** Monaco编辑器实例引用 */\n  @State() editorMonacoInstance: any;\n\n  /** 宿主元素实例 */\n  @Element() elm!: HTMLElement;\n\n  /** 组件唯一ID（自动生成） */\n  gid: string = getComponentIndex();\n\n  /** 焦点状态 */\n  @State() hasFocus = false;\n\n  /** 当前是否为暗黑模式 */\n  @State() isDarkMode: boolean = isDarkMode();\n\n  /**\n   * 编程语言支持\n   *\n   * 支持的语法类型：\n   * - `html`: HTML/XML标记语言\n   * - `javascript`: JavaScript/TypeScript\n   * - `json`: JSON数据格式\n   *\n   * @defaultValue `'javascript'`\n   */\n  @Prop() language: 'html' | 'javascript' | 'json' = 'javascript';\n\n  /**\n   * 类型声明库源码\n   *\n   * 用于提供智能提示的类型定义，\n   * 格式应为对应语言的类型声明字符串\n   */\n  @Prop() libSource: any;\n\n  /**\n   * 行号显示控制\n   *\n   * - `on`: 显示行号\n   * - `off`: 隐藏行号\n   *\n   * @defaultValue `'on'`\n   */\n  @Prop() lineNumbers: 'off' | 'on' = 'on';\n\n  /**\n   * 缩略图显示\n   *\n   * 在编辑器右侧显示代码导航缩略图\n   *\n   * @defaultValue `false`\n   */\n  @Prop() minimap: boolean = false;\n\n  /** 表单字段名（自动生成） */\n  @Prop() name: string = `zane-input-${this.gid}`;\n\n  /**\n   * 只读模式\n   *\n   * 开启后禁止编辑但保留代码高亮\n   *\n   * @defaultValue `false`\n   */\n  @Prop({ reflect: true }) readonly: boolean = false;\n\n  /**\n   * 必填状态\n   *\n   * @defaultValue `false`\n   */\n  @Prop({ reflect: true }) required: boolean = false;\n\n  /**\n   * 编辑器内容\n   *\n   * 双向绑定的代码文本值\n   */\n  @Prop({ mutable: true }) value: string;\n\n  /** 内容变更事件（带防抖） */\n  @Event({ eventName: 'zane-code-editor--change' }) zaneChange: EventEmitter;\n\n  /** Monaco容器元素引用 */\n  private editorElement?: HTMLElement;\n\n  /** 组件加载完成生命周期 */\n  componentDidLoad() {\n    this.initializeMonaco(); // 初始化Monaco编辑器\n  }\n\n  /** 组件加载前生命周期 */\n  componentWillLoad() {\n    this.debounceChanged(); // 初始化防抖设置\n    observeThemeChange(() => {\n      this.isDarkMode = isDarkMode();\n      this.themeWatcher();\n    });\n  }\n\n  /**\n   * 禁用状态监听\n   * @param newValue 新的禁用状态值\n   */\n  @Watch('disabled')\n  disabledWatcher(newValue: boolean) {\n    this.editorMonacoInstance.updateOptions({\n      readOnly: newValue || this.readonly,\n    });\n  }\n\n  /**\n   * 获取组件ID\n   * @returns 组件唯一标识符\n   */\n  @Method()\n  async getComponentId() {\n    return this.gid;\n  }\n\n  /**\n   * 获取当前主题\n   * @returns 'vs-dark'或'vs'主题标识\n   */\n  getTheme() {\n    return this.isDarkMode ? 'vs-dark' : 'vs';\n  }\n\n  /** 初始化Monaco编辑器 */\n  async initializeMonaco() {\n    // 确保Monaco加载完成\n    if (!win.monaco) {\n      await loadMonaco();\n    }\n\n    // 延迟初始化（组件不在可视区域时）\n    if (!isInViewport(this.elm)) {\n      setTimeout(() => this.initializeMonaco(), 300);\n      return;\n    }\n\n    // 创建编辑器实例\n    this.editorElement.innerHTML = '';\n\n    this.editorMonacoInstance = win.monaco.editor.create(this.editorElement, {\n      language: this.language,\n      lineNumbers: this.lineNumbers,\n      minimap: {\n        enabled: this.minimap,\n      },\n      readOnly: this.disabled || this.readonly,\n      theme: this.getTheme(),\n      value: this.value,\n    });\n\n    // 加载类型声明库\n    if (this.libSource) {\n      win.monaco.editor.createModel(\n        this.libSource,\n        this.language,\n        'java://zaneui.com/lib.java',\n      );\n    }\n\n    // 内容变更事件监听\n    this.editorMonacoInstance.onDidChangeModelContent((e) => {\n      if (!e.isFlush) {\n        this.value = this.editorMonacoInstance.getValue();\n        this.zaneChange.emit({ value: this.value });\n      }\n    });\n\n    // 焦点状态监听\n    this.editorMonacoInstance.onDidFocusEditorText(() => {\n      this.hasFocus = true;\n    });\n\n    this.editorMonacoInstance.onDidBlurEditorText(() => {\n      this.hasFocus = false;\n    });\n  }\n\n  /**\n   * 编程语言切换监听\n   * @param newValue 新的语言类型\n   */\n  @Watch('language')\n  languageWatcher(newValue: string) {\n    win.monaco.editor.setModelLanguage(\n      this.editorMonacoInstance.getModel(),\n      newValue,\n    );\n  }\n\n  /**\n   * 只读状态监听\n   * @param newValue 新的只读状态\n   */\n  @Watch('readonly')\n  readonlyWatcher(newValue: string) {\n    this.editorMonacoInstance.updateOptions({\n      readOnly: newValue || this.disabled,\n    });\n  }\n\n  /** 渲染函数 */\n  render() {\n    return (\n      <Host>\n        <div\n          class={{\n            'code-editor-component': true,\n            component: true,\n            disabled: this.disabled,\n            'has-focus': this.hasFocus,\n            readonly: this.readonly,\n            [this.getTheme()]: true,\n          }}\n        >\n          {this.disabled || this.readonly ? (\n            <zane-tag class=\"read-only-tag\" color=\"red\">\n              Read Only\n            </zane-tag>\n          ) : null}\n\n          <div class=\"editor\" ref={(el) => (this.editorElement = el)} />\n          {!this.editorMonacoInstance && (\n            <div class=\"code-editor-loader\">\n              <zane-spinner />\n              Loading editor...\n            </div>\n          )}\n        </div>\n      </Host>\n    );\n  }\n\n  /**\n   * 移除编辑器焦点\n   */\n  @Method()\n  async setBlur() {\n    if (this.editorMonacoInstance) {\n      this.editorMonacoInstance.blur();\n    }\n  }\n\n  /**\n   * 设置编辑器焦点\n   */\n  @Method()\n  async setFocus() {\n    if (this.editorMonacoInstance) {\n      this.editorMonacoInstance.focus();\n    }\n  }\n\n  /** 主题切换同步 */\n  themeWatcher() {\n    win.monaco.editor.setTheme(this.getTheme());\n  }\n\n  /**\n   * 外部值变更监听\n   * @param newValue 新的代码值\n   */\n  @Watch('value')\n  valueWatcher(newValue: string) {\n    if (\n      this.editorMonacoInstance &&\n      this.editorMonacoInstance.getValue() !== this.value\n    ) {\n      this.editorMonacoInstance.setValue(newValue);\n    }\n  }\n\n  /** 防抖配置变更处理 */\n  @Watch('debounce')\n  protected debounceChanged() {\n    this.zaneChange = debounceEvent(this.zaneChange, this.debounce);\n  }\n\n  /** 类型声明库变更处理 */\n  @Watch('libSource')\n  protected libSourceChanged() {\n    if (win.monaco) {\n      // 清理旧类型声明\n      const libModel = win.monaco.editor.getModel('java://zaneui.com/lib.java');\n      if (libModel) {\n        libModel.dispose();\n      }\n\n      // 加载新类型声明\n      win.monaco.editor.createModel(\n        this.libSource,\n        this.language,\n        'java://zaneui.com/lib.java',\n      );\n    }\n  }\n}\n","@use '../../global/styles/commons';\n\n:host {\n  display: inline-block;\n  color: commons.v(--text-primary);\n}\n\n.toggle {\n  position: relative;\n  display: flex;\n  align-items: center;\n\n  @include commons.font-style(body-comptact-01);\n\n  &.has-content {\n    gap: commons.v(--spacing-02);\n  }\n\n  .input-native {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    border: 0;\n    clip: rect(0, 0, 0, 0);\n  }\n\n  .box {\n    position: relative;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    background: var(--toggle-off);\n    border: 1px solid commons.v(--border-strong-01);\n    border-radius: 100rem;\n    transition: background-color 70ms cubic-bezier(0.2, 0, 1, 0.9);\n\n    .node {\n      display: block;\n      background: white;\n      border-radius: 50%;\n      transition: all 70ms cubic-bezier(0.2, 0, 1, 0.9);\n    }\n  }\n\n  &.has-focus:not(.active) {\n    .box {\n      border-color: commons.v(--color-white);\n\n      @include commons.focus-ring;\n    }\n\n    &:not(.state-checked) .node {\n      border-color: commons.v(--icon-01);\n    }\n  }\n}\n\n:host(.light) .box {\n  background-color: var(--field);\n}\n\n.toggle.state-checked {\n  .box {\n    background: commons.v(--support-success);\n  }\n\n  &.active .box {\n    border-color: commons.v(--color-white);\n  }\n\n  &.has-focus:not(.active) {\n    .box {\n      border-color: commons.v(--color-white);\n\n      @include commons.focus-ring;\n    }\n  }\n}\n\n/**\n * SIZES\n */\n.toggle {\n  .box {\n    width: var(--toggle-width);\n    height: calc(var(--toggle-width) / 2);\n    padding: 0 calc(var(--toggle-width) / 10);\n\n    .node {\n      width: calc(var(--toggle-width) / 2 - calc(var(--toggle-width) / 5));\n      height: calc(var(--toggle-width) / 2 - calc(var(--toggle-width) / 5));\n    }\n  }\n\n  &.state-checked .node {\n    margin-inline-start: calc(\n      100% - calc(var(--toggle-width) / 2 - calc(var(--toggle-width) / 5))\n    );\n  }\n}\n\n.toggle.size-md {\n  --toggle-width: 2.5rem;\n}\n\n.toggle.size-lg {\n  --toggle-width: 3rem;\n}\n\n.toggle.readonly {\n  color: var(--text-primary) !important;\n  cursor: default;\n\n  .box {\n    background: transparent !important;\n\n    .node {\n      background: var(--icon-primary) !important;\n      border-color: var(--disabled-01) !important;\n    }\n  }\n}\n\n.toggle.disabled {\n  color: var(--text-disabled) !important;\n  cursor: not-allowed;\n\n  .box {\n    background: var(--button-disabled) !important;\n\n    .node {\n      background: var(--icon-on-color-disabled) !important;\n      border-color: var(--disabled-01) !important;\n    }\n  }\n}\n","import type { InputComponentInterface } from '../../interfaces';\n\nimport {\n  Component,\n  ComponentInterface,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n} from '@stencil/core';\n\nimport { getComponentIndex } from '../../utils';\n\n/**\n * 开关组件\n *\n * 该组件实现了可定制的开关切换控件，支持多种交互状态和样式配置，\n * 符合WAI-ARIA无障碍规范，可无缝集成到表单中使用。\n *\n */\n@Component({\n  shadow: true,\n  styleUrl: 'toggle.scss',\n  tag: 'zane-toggle',\n})\nexport class Toggle implements ComponentInterface, InputComponentInterface {\n  /**\n   * ARIA属性配置对象\n   * @prop {Object} configAria - 动态收集的ARIA属性键值对\n   * @mutable 允许组件内部修改\n   * @reflect 属性值变化时同步到DOM属性\n   */\n  @Prop({ mutable: true, reflect: true }) configAria: any = {};\n\n  /**\n   * 禁用状态\n   * @prop {boolean} disabled - 是否禁用开关交互\n   * @default false\n   * @reflect 同步到DOM属性\n   */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  // 获取宿主元素引用\n  @Element() elm!: HTMLElement;\n\n  // 组件唯一标识符\n  gid: string = getComponentIndex();\n\n  /**\n   * 焦点状态\n   * @state {boolean} hasFocus - 指示组件是否获得焦点\n   */\n  @State() hasFocus = false;\n\n  /**\n   * 激活状态（鼠标/键盘按下时）\n   * @state {boolean} isActive - 指示组件是否处于激活状态\n   */\n  @State() isActive = false;\n\n  /**\n   * 开关标签文本\n   * @prop {string} label - 显示在开关旁的文本内容\n   */\n  @Prop() label: string;\n\n  /**\n   * 表单字段名称\n   * @prop {string} name - 关联input元素的name属性\n   * @default `zane-input-${this.gid}`\n   */\n  @Prop() name: string = `zane-input-${this.gid}`;\n\n  /**\n   * 只读状态\n   * @prop {boolean} readonly - 是否只读（可聚焦但不可修改）\n   * @default false\n   * @reflect 同步到DOM属性\n   */\n  @Prop({ reflect: true }) readonly: boolean = false;\n\n  /**\n   * 必填状态\n   * @prop {boolean} required - 是否必填项\n   * @default false\n   * @reflect 同步到DOM属性\n   */\n  @Prop({ reflect: true }) required: boolean = false;\n\n  /**\n   * 圆角样式\n   * @prop {boolean} rounded - 是否显示为圆形开关\n   * @default true\n   */\n  @Prop() rounded: boolean = true;\n\n  /**\n   * 开关尺寸\n   * @prop {'lg' | 'md'} size - 控制开关尺寸的枚举值\n   *   - 'lg': 大尺寸 (large)\n   *   - 'md': 中尺寸 (medium)\n   * @default 'md'\n   */\n  @Prop() size: 'lg' | 'md' = 'md';\n\n  /**\n   * 插槽内容状态\n   * @state {boolean} slotHasContent - 检测是否存在slot内容\n   */\n  @State() slotHasContent = false;\n\n  /**\n   * 开关值\n   * @prop {boolean} value - 开关当前状态（开/关）\n   * @mutable 允许双向绑定\n   * @default false\n   */\n  @Prop({ mutable: true }) value: boolean = false;\n\n  /**\n   * 失去焦点事件\n   * @event zane-toggle--blur\n   * @emits {FocusEvent} 原生焦点事件对象\n   */\n  @Event({ eventName: 'zane-toggle--blur' }) zaneBlur: EventEmitter;\n\n  /**\n   * 值变更事件\n   * @event zane-toggle--change\n   * @emits {UIEvent} 原生UI事件对象\n   */\n  @Event({ eventName: 'zane-toggle--change' }) zaneChange: EventEmitter;\n\n  /**\n   * 获得焦点事件\n   * @event zane-toggle--focus\n   * @emits {FocusEvent} 原生焦点事件对象\n   */\n  @Event({ eventName: 'zane-toggle--focus' }) zaneFocus: EventEmitter;\n\n  private iconContainer?: HTMLElement;\n\n  private nativeElement?: HTMLInputElement;\n\n  private tabindex?: number | string = 1;\n\n  componentWillLoad() {\n    // If the ion-input has a tabindex attribute we get the value\n    // and pass it down to the native input, then remove it from the\n    // zane-input to avoid causing tabbing twice on the same element\n    if (this.elm.hasAttribute('tabindex')) {\n      const tabindex = this.elm.getAttribute('tabindex');\n      this.tabindex = tabindex === null ? undefined : tabindex;\n      this.elm.removeAttribute('tabindex');\n    }\n    this.elm.getAttributeNames().forEach((name: string) => {\n      if (name.includes('aria-')) {\n        this.configAria[name] = this.elm.getAttribute(name);\n        this.elm.removeAttribute(name);\n      }\n    });\n    this.slotHasContent = this.elm.hasChildNodes();\n  }\n\n  /**\n   * 获取组件唯一ID\n   * @method getComponentId\n   * @returns {Promise<string>} 组件ID\n   */\n  @Method()\n  async getComponentId() {\n    return this.gid;\n  }\n  render() {\n    return (\n      <Host active={this.isActive} has-focus={this.hasFocus}>\n        <label\n          class={{\n            [`size-${this.size}`]: true,\n            active: this.isActive,\n            disabled: this.disabled,\n            'has-content': this.slotHasContent,\n            'has-focus': this.hasFocus,\n            readonly: this.readonly,\n            required: this.required,\n            rounded: this.rounded,\n            'state-checked': this.value,\n            toggle: true,\n          }}\n        >\n          <div\n            aria-checked={`${this.value}`}\n            aria-disabled={`${this.disabled}`}\n            aria-required={`${this.required}`}\n            class=\"box\"\n            onBlur={this.blurHandler}\n            onFocus={this.focusHandler}\n            onKeyDown={this.keyDownHandler}\n            onKeyUp={(evt) => {\n              if (evt.keyCode === 13) {\n                this.clickHandler(evt);\n              }\n            }}\n            onMouseDown={this.mouseDownHandler}\n            ref={(elm) => (this.iconContainer = elm)}\n            role=\"checkbox\"\n            tabindex={this.tabindex}\n            {...this.configAria}\n          >\n            <div class=\"node\" />\n          </div>\n\n          <input\n            aria-hidden=\"true\"\n            checked={this.value}\n            class=\"input-native\"\n            name={this.name}\n            onClick={this.clickHandler}\n            ref={(elm) => (this.nativeElement = elm)}\n            required={this.required}\n            tabindex=\"-1\"\n            type=\"checkbox\"\n            value={`${this.value}`}\n          />\n\n          {(() => {\n            return this.label ? (\n              <div class=\"label\">{this.label}</div>\n            ) : (\n              <div class=\"slot-container\">\n                <slot />\n              </div>\n            );\n          })()}\n        </label>\n      </Host>\n    );\n  }\n\n  /**\n   * 移除焦点\n   * @method setBlur\n   */\n  @Method()\n  async setBlur() {\n    if (this.nativeElement) {\n      this.nativeElement.blur();\n    }\n  }\n\n  /**\n   * 设置焦点\n   * @method setFocus\n   */\n  @Method()\n  async setFocus() {\n    if (this.nativeElement) {\n      this.nativeElement.focus();\n    }\n  }\n\n  /**\n   * 监听全局键盘释放事件（处理空格键激活状态）\n   * @listen window:keyup\n   * @param {KeyboardEvent} evt - 键盘事件对象\n   */\n  @Listen('keyup', { target: 'window' })\n  windowKeyUp(evt) {\n    if (this.isActive && evt.key === ' ') this.isActive = false;\n  }\n\n  /**\n   * 监听全局鼠标释放事件（清除激活状态）\n   * @listen window:mouseup\n   */\n  @Listen('mouseup', { target: 'window' })\n  windowMouseUp() {\n    if (this.isActive) this.isActive = false;\n  }\n\n  private blurHandler = (ev: FocusEvent) => {\n    this.hasFocus = false;\n    this.zaneBlur.emit(ev);\n  };\n\n  private clickHandler = (ev: KeyboardEvent | MouseEvent) => {\n    if (!this.disabled && !this.readonly) {\n      this.value = !JSON.parse(this.nativeElement.value);\n      this.zaneChange.emit(ev);\n      this.iconContainer.focus();\n    }\n  };\n\n  private focusHandler = (ev: FocusEvent) => {\n    this.hasFocus = true;\n    this.zaneFocus.emit(ev);\n  };\n\n  private keyDownHandler = (evt) => {\n    if (evt.key === ' ') {\n      evt.preventDefault();\n      this.isActive = true;\n      this.clickHandler(evt);\n    }\n  };\n\n  private mouseDownHandler = () => {\n    this.isActive = true;\n  };\n}\n"],"names":["win"],"mappings":"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"}