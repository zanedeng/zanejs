{"version":3,"file":"zane-link.entry.esm.js","sources":["src/components/link/link.scss?tag=zane-link&encapsulation=shadow","src/components/link/link.tsx"],"sourcesContent":["@use '../../global/styles/commons';\n\n:host {\n  display: inline-block;\n}\n\n.link {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 100%;\n  color: var(--link-color, var(--link-01));\n  text-decoration: var(--link-decoration, none);\n  cursor: pointer;\n  border-radius: var(--border-radius);\n\n  &:hover {\n    color: var(--link-color-hover, var(--hover-primary-text));\n    text-decoration: var(--link-decoration-hover, underline);\n  }\n\n  &:visited {\n    color: var(--link-color-visited, var(--visited-link));\n  }\n\n  &.active {\n    color: var(--link-color-active, var(--text-primary));\n  }\n}\n\n:host(.no-style) .link {\n  color: inherit !important;\n  text-decoration: none !important;\n}\n\n:host(.no-decoration) .link {\n  text-decoration: none !important;\n}\n\n:host(.inline) .link {\n  text-decoration: var(--link-decoration, underline);\n}\n\n.link.has-focus:not(.active) {\n  text-decoration: none;\n\n  @include commons.focus-ring();\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n} from '@stencil/core';\n\nimport { getComponentIndex } from '../../utils';\n\n/**\n * 智能链接组件\n * @component zane-link\n * @tags navigation, link, interactive\n * @shadow true\n *\n * @description\n * 增强型可交互链接组件，支持动态状态反馈和键盘导航优化。\n * 特性包括：\n * - 视觉状态反馈（聚焦/激活）\n * - 空格键触发点击\n * - 跨浏览器兼容的焦点管理\n * - 无障碍属性支持\n *\n * @example\n * <!-- 基础链接 -->\n * <zane-link href=\"/about\">关于我们</zane-link>\n *\n * <!-- 新窗口打开 -->\n * <zane-link href=\"https://external.com\"  target=\"_blank\">\n *   外部链接\n * </zane-link>\n */\n@Component({\n  shadow: true,\n  styleUrl: 'link.scss',\n  tag: 'zane-link',\n})\nexport class Link implements ComponentInterface {\n  /**\n   * 宿主元素引用\n   * @type {HTMLElement}\n   *\n   * @description\n   * 自动注入的宿主 DOM 元素，用于：\n   * - 属性继承处理\n   * - 无障碍属性检测\n   * - 原生事件监听\n   */\n  @Element() elm!: HTMLElement;\n\n  /**\n   * 组件全局唯一标识符\n   * @type {string}\n   *\n   * @description\n   * 自动生成的递增数字 ID，用于：\n   * - 组件实例追踪\n   * - 动态样式关联\n   */\n  gid: string = getComponentIndex();\n\n  /**\n   * 焦点状态标识\n   * @type {boolean}\n   * @state\n   *\n   * @description\n   * 反映链接元素是否获得焦点：\n   * - `true`: 元素处于聚焦状态\n   * - `false`: 元素未聚焦\n   * 此状态会触发聚焦视觉样式\n   */\n  @State() hasFocus = false;\n\n  /**\n   * 链接目标地址\n   * @type {string}\n   * @reflect\n   *\n   * @description\n   * 对应 HTML anchor 元素的 href 属性：\n   * - 支持绝对路径和相对路径\n   * - 支持哈希锚点定位\n   * - 空值时渲染为无跳转功能的伪链接\n   */\n  @Prop({ reflect: true }) href: string;\n\n  /**\n   * 激活状态标识\n   * @type {boolean}\n   * @state\n   *\n   * @description\n   * 反映用户交互激活状态：\n   * - `true`: 通过键盘空格/回车键或鼠标点击激活\n   * - `false`: 未激活状态\n   * 此状态用于实现 Material Design 风格的涟漪效果\n   */\n  @State() isActive = false;\n\n  /**\n   * 链接打开方式\n   * @type {string}\n   *\n   * @description\n   * 对应 HTML anchor 元素的 target 属性：\n   * - `_blank`: 新窗口/标签页打开\n   * - `_self`: 当前窗口打开（默认）\n   * - `_parent` / `_top`: 框架控制\n   */\n  @Prop() target: string;\n\n  /** @private 微数据属性继承 */\n  private itemprop?: string;\n\n  /** @private 原生锚元素引用 */\n  private nativeElement?: HTMLAnchorElement;\n\n  /** @private 动态 Tab 键序控制 */\n  private tabindex?: number | string;\n\n  /**\n   * 组件预加载生命周期\n   * @lifecycle\n   *\n   * @description\n   * 执行关键属性迁移：\n   * 1. 转移宿主元素的 tabindex 到原生元素\n   * 2. 迁移 itemprop 微数据属性\n   * 3. 清理宿主元素冗余属性\n   */\n  componentWillLoad() {\n    // Tabindex 迁移逻辑\n    if (this.elm.hasAttribute('tabindex')) {\n      const tabindex = this.elm.getAttribute('tabindex');\n      this.tabindex = tabindex === null ? undefined : tabindex;\n      this.elm.removeAttribute('tabindex');\n    }\n\n    // 微数据属性迁移\n    if (this.elm.hasAttribute('itemprop')) {\n      const tabindex = this.elm.getAttribute('itemprop');\n      this.itemprop = tabindex === null ? undefined : tabindex;\n      this.elm.removeAttribute('itemprop');\n    }\n  }\n\n  /**\n   * 主渲染方法\n   * @returns {JSX.Element} 组件虚拟 DOM 结构\n   */\n  render() {\n    return (\n      <Host active={this.isActive} has-focus={this.hasFocus}>\n        <a\n          class={{\n            active: this.isActive,\n            'has-focus': this.hasFocus,\n            link: true,\n          }}\n          href={this.href}\n          itemprop={this.itemprop}\n          onBlur={this.blurHandler}\n          onFocus={this.focusHandler}\n          onKeyDown={this.keyDownHandler}\n          onMouseDown={this.mouseDownHandler}\n          ref={(input) => (this.nativeElement = input)}\n          tabindex={this.tabindex}\n          target={this.target}\n        >\n          <slot />\n        </a>\n      </Host>\n    );\n  }\n\n  /**\n   * 触发链接点击\n   * @method\n   * @async\n   *\n   * @description\n   * 通过编程方式触发链接的点击行为：\n   * - 模拟用户点击效果\n   * - 保持与原生事件的一致性\n   * - 适用于自动化测试场景\n   */\n  @Method()\n  async triggerClick() {\n    if (this.nativeElement) {\n      this.nativeElement.click();\n    }\n  }\n\n  /**\n   * 全局键盘释放监听\n   * @listens window:keyup\n   *\n   * @description\n   * 处理键盘交互后的状态重置：\n   * - 当激活状态为 true 时\n   * - 且按键为 Enter 或 Space\n   * - 重置 isActive 状态\n   */\n  @Listen('keyup', { target: 'window' })\n  windowKeyUp(evt) {\n    if (this.isActive && (evt.key === 'Enter' || evt.key === ' '))\n      this.isActive = false;\n  }\n\n  /**\n   * 全局鼠标释放监听\n   * @listens window:mouseup\n   *\n   * @description\n   * 处理鼠标点击后的状态重置：\n   * - 无论何处释放鼠标\n   * - 强制重置 isActive 状态\n   * - 防止状态残留\n   */\n  @Listen('mouseup', { target: 'window' })\n  windowMouseUp() {\n    if (this.isActive) this.isActive = false;\n  }\n\n  /** @private 失焦事件处理 */\n  private blurHandler = () => {\n    this.hasFocus = false;\n  };\n\n  /** @private 聚焦事件处理 */\n  private focusHandler = () => {\n    this.hasFocus = true;\n  };\n\n  /** @private 键盘按下事件处理 */\n  private keyDownHandler = (evt) => {\n    if (evt.key === 'Enter' || evt.key === ' ') {\n      this.isActive = true;\n    }\n  };\n\n  /** @private 鼠标按下事件处理 */\n  private mouseDownHandler = () => {\n    this.isActive = true;\n  };\n}\n"],"names":[],"mappings":"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"}