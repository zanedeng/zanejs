{"version":3,"file":"zane-current-time.entry.esm.js","sources":["src/components/current-time/current-time.scss?tag=zane-current-time&encapsulation=shadow","src/components/current-time/current-time.tsx"],"sourcesContent":["@use '../../global/styles/commons';\n\n:host {\n  display: inline-block;\n}\n","import {\n  Component,\n  ComponentInterface,\n  h,\n  Host,\n  Prop,\n  State,\n} from '@stencil/core';\n\n/**\n * @name Current Time\n * @description Displays the current time in a given timezone.\n * @category Others\n * @example <zane-current-time></zane-current-time>\n */\n\n@Component({\n  shadow: true,\n  styleUrl: 'current-time.scss',\n  tag: 'zane-current-time',\n})\nexport class CurrentTime implements ComponentInterface {\n  // `currentTime` is decorated with `@State()`,\n  // as we need to trigger a rerender when its\n  // value changes to show the latest time\n  @State() currentTime: number = Date.now();\n\n  timer: number;\n\n  @Prop() timezone: string;\n\n  connectedCallback() {\n    this.timer = window.setInterval(() => {\n      // the assignment to `this.currentTime`\n      // will trigger a re-render\n      this.currentTime = Date.now();\n    }, 1000);\n  }\n\n  disconnectedCallback() {\n    window.clearInterval(this.timer);\n  }\n\n  render() {\n    const time = new Date(this.currentTime).toLocaleTimeString('en-US', {\n      timeZone: this.timezone,\n    });\n\n    return (\n      <Host>\n        <div class=\"current-time\">{time}</div>\n      </Host>\n    );\n  }\n}\n"],"names":[],"mappings":";;AAAA,MAAM,cAAc,GAAG,o3EAAo3E;;MCqB93E,WAAW,GAAA,MAAA;AALxB,IAAA,WAAA,CAAA,OAAA,EAAA;;;;;AASW,QAAA,IAAA,CAAA,WAAW,GAAW,IAAI,CAAC,GAAG,EAAE;AA6B1C;IAvBC,iBAAiB,GAAA;QACf,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,MAAK;;;AAGnC,YAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE;SAC9B,EAAE,IAAI,CAAC;;IAGV,oBAAoB,GAAA;AAClB,QAAA,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC;;IAGlC,MAAM,GAAA;AACJ,QAAA,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,kBAAkB,CAAC,OAAO,EAAE;YAClE,QAAQ,EAAE,IAAI,CAAC,QAAQ;AACxB,SAAA,CAAC;AAEF,QAAA,QACE,EAAC,IAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,EACH,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,cAAc,EAAA,EAAE,IAAI,CAAO,CACjC;;;;;;;"}