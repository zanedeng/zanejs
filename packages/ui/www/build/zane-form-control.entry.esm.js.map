{"version":3,"file":"zane-form-control.entry.esm.js","sources":["src/components/form-control/form-control.scss?tag=zane-form-control&encapsulation=shadow","src/components/form-control/form-control.tsx"],"sourcesContent":["@use '../../global/styles/common-input';\n\n:host(.form-field) {\n  margin-bottom: common-input.v(--spacing-07);\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  h,\n  Host,\n  Prop,\n} from '@stencil/core';\n\n/**\n * @name Form Control\n * @description The Form Control component adds a label and caption for its child control.\n * @category Form Inputs\n * @tags form\n * @example <zane-form-control label='Full Name' required>\n *   <zane-input type='text'></zane-input>\n * </zane-form-control>\n */\n@Component({\n  shadow: true,\n  styleUrl: 'form-control.scss',\n  tag: 'zane-form-control',\n})\nexport class FormControl implements ComponentInterface {\n  @Element() elm!: HTMLElement;\n\n  @Prop() helperText: string;\n\n  @Prop({ reflect: true }) inline: boolean = false;\n\n  @Prop() invalid: boolean = false;\n\n  @Prop() invalidText: string;\n\n  @Prop() label: string;\n\n  /**\n   * Whether the form control is required.\n   */\n  @Prop() required: boolean = false;\n\n  @Prop() skeleton: boolean = false;\n\n  @Prop() warn: boolean = false;\n\n  @Prop() warnText: string;\n\n  componentDidLoad() {\n    this.elm.setAttribute('role', 'group');\n    const controlElm = this.getInputElement();\n    this.passRequiredToField(controlElm, this.required);\n    this.passLabelToField(controlElm, this.label);\n  }\n\n  componentShouldUpdate(newVal: any, _oldVal, propName: string) {\n    if (propName === 'required') {\n      this.passRequiredToField(this.getInputElement(), newVal);\n    } else if (propName === 'label') {\n      this.passLabelToField(this.getInputElement(), newVal);\n    }\n  }\n\n  getInputElement() {\n    for (const compName of [\n      'zane-input',\n      'zane-textarea',\n      'zane-select',\n      'zane-checkbox',\n      'zane-radio',\n      'zane-code-editor',\n    ]) {\n      const controlElm = this.elm.querySelector(`${compName}`);\n      if (controlElm) return controlElm;\n    }\n  }\n\n  getLabel() {\n    return this.skeleton ? (\n      <div class=\"label skeleton\" />\n    ) : (\n      <label class=\"label\">\n        {this.required && <span class=\"required\">*</span>}\n        {this.label}\n      </label>\n    );\n  }\n\n  passLabelToField(controlElm: Element, label: string) {\n    if (controlElm) {\n      const el = controlElm as any;\n      const oldProps = el.configAria;\n      el.configAria = {\n        'aria-label': label,\n        ...oldProps,\n      };\n    }\n  }\n\n  passRequiredToField(controlElm: Element, required: boolean) {\n    if (controlElm) {\n      const el = controlElm as any;\n      el.required = required;\n    }\n  }\n\n  render() {\n    return (\n      <Host invalid={this.invalid} warn={this.warn}>\n        <div class={{ 'form-control': true, inline: this.inline }}>\n          {this.label && this.getLabel()}\n          <div class=\"field\">\n            <slot />\n          </div>\n          {this.renderHelper()}\n        </div>\n      </Host>\n    );\n  }\n\n  renderHelper() {\n    if (this.invalid)\n      return <div class=\"helper invalid\">{this.invalidText}</div>;\n    else if (this.warn) return <div class=\"helper warn\">{this.warnText}</div>;\n    else if (this.helperText || this.helperText === '')\n      return <div class=\"helper text\">{this.helperText}</div>;\n  }\n}\n"],"names":[],"mappings":"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"}