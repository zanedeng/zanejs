{"version":3,"file":"zane-header.entry.esm.js","sources":["src/components/application/header/header/header.scss?tag=zane-header&encapsulation=shadow","src/components/application/header/header/header.tsx"],"sourcesContent":["@use \"../../../../global/styles/commons\";\n\n:host {\n  display: block;\n  /**\n   * @prop --zane-header-height: Height of the header. Defaults to 3rem.\n   */\n  --zane-header-height: 3rem;\n\n  /**\n   * @prop --zane-header-width: Width of the header. Defaults to 100%.\n   */\n  --zane-header-width: 100%;\n}\n\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .header-container {\n    height: var(--zane-header-height);\n    width: var(--zane-header-width);\n    display: grid;\n    grid-template-columns: 1fr auto 1fr;\n    align-items: center;\n\n    .left-section {\n      justify-self: flex-start;\n    }\n\n    .center-section {\n      justify-self: center;\n    }\n\n    .right-section {\n      justify-self: flex-end;\n    }\n\n    .section {\n      display: flex;\n      align-items: center;\n      height: 100%;\n\n      slot::slotted(*) {\n        display: flex;\n        align-items: center;\n        height: 100%;\n        color: var(--header-text-color);\n      }\n    }\n  }\n\n  &.three-column .header-container {\n    grid-template-columns: 1fr auto 1fr;\n  }\n\n  &.two-column .header-container {\n    grid-template-columns: auto 1fr;\n  }\n\n\n  &.float {\n    .header-container {\n      margin: commons.v(--spacing-05);\n      border-radius: commons.v(--border-radius);\n      border: 1px solid var(--layer-accent);\n      box-shadow: v(--shadow-md);\n      overflow: clip;\n    }\n\n    @each $color in [primary, secondary, success, info, warning, error,white, black, brand-primary, brand-secondary] {\n      &#{'.color-' + $color} .header-container {\n        background: commons.v(--color-#{$color});\n      }\n    }\n  }\n\n  &:not(.float) {\n    @each $color in\n      [primary, secondary, success, info, warning, error, white, black, brand-primary, brand-secondary] {\n      &#{'.color-' + $color} {\n        background: commons.v(--color-#{$color});\n      }\n    }\n  }\n}\n\n:host([color-is=\"dark\"]):host {\n  --header-text-color: #{commons.v(--color-white)};\n}\n\n:host([color-is=\"light\"]):host {\n  --header-text-color: #{commons.v(--color-black)};\n}\n","import { Component, Element, h, Host, Prop, State, Watch } from '@stencil/core';\n\nimport {\n  hasSlot,\n  isDarkMode,\n  isLightOrDark,\n  observeThemeChange,\n} from '../../../../utils';\n\n/**\n * @name Header\n * @description Header component is used to display a header with a brand, navigation, and actions.\n * @category Navigation\n * @img /assets/img/header.webp\n * @imgDark /assets/img/header-dark.webp\n */\n@Component({\n  shadow: true,\n  styleUrl: 'header.scss',\n  tag: 'zane-header',\n})\nexport class Header {\n  @State() centerSlotHasContent = false;\n\n  /**\n   * Defines the primary color of the header. This can be set to predefined color names to apply specific color themes.\n   */\n  @Prop() color:\n    | 'black'\n    | 'danger'\n    | 'primary'\n    | 'secondary'\n    | 'success'\n    | 'warning'\n    | 'white'\n    | string = 'black';\n\n  /**\n   * States\n   */\n  @State() computedColor: string;\n\n  /**\n   * Color variant for dark mode, applicable when [data-theme=\"dark\"] is set.\n   */\n  @Prop() darkModeColor?:\n    | 'black'\n    | 'danger'\n    | 'primary'\n    | 'secondary'\n    | 'success'\n    | 'warning'\n    | 'white'\n    | string;\n\n  @Prop() float: boolean = false;\n\n  @Element() host!: HTMLElement;\n  @State() themeMode: 'dark' | 'light' = 'light';\n  @Watch('color')\n  colorChanged() {\n    this.#computedColor();\n  }\n\n  componentWillLoad() {\n    this.colorChanged();\n    this.#computeCenterSlotHasContent();\n    observeThemeChange(() => {\n      this.themeMode = isDarkMode() ? 'dark' : 'light';\n      this.colorChanged();\n    });\n  }\n\n  render() {\n    return (\n      <Host color-is={this.#computeColorLightOrDark()}>\n        <header\n          class={{\n            [`color-${this.computedColor}`]: true,\n            float: this.float,\n            header: true,\n            [this.#getColumnType()]: true,\n          }}\n        >\n          <div class=\"header-container\">\n            <div class=\"left-section section\">\n              <slot name=\"left\" />\n            </div>\n            {this.centerSlotHasContent && (\n              <div class=\"center-section section\">\n                <slot\n                  name=\"center\"\n                  onSlotchange={() => this.#computeCenterSlotHasContent()}\n                />\n              </div>\n            )}\n            <div class=\"right-section section\">\n              <slot name=\"right\" />\n            </div>\n          </div>\n        </header>\n      </Host>\n    );\n  }\n\n  #computeCenterSlotHasContent() {\n    this.centerSlotHasContent = hasSlot(this.host, 'center');\n  }\n\n  #computeColorLightOrDark() {\n    const color = getComputedStyle(document.documentElement).getPropertyValue(\n      `--color-${this.computedColor}`,\n    );\n    return isLightOrDark(color);\n  }\n\n  #computedColor() {\n    this.computedColor = this.color;\n    if (isDarkMode() && this.darkModeColor) {\n      this.computedColor = this.darkModeColor;\n    }\n    this.host.querySelectorAll('zane-header-action').forEach((el) => {\n      (el as any).setColor(this.computedColor);\n    });\n    (this.host.querySelector('zane-header-brand') as any)?.setColor(\n      this.computedColor,\n    );\n  }\n\n  #getColumnType() {\n    return this.centerSlotHasContent ? 'three-column' : 'two-column';\n  }\n}\n"],"names":[],"mappings":"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"}