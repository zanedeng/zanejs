{"version":3,"file":"zane-checkbox.zane-select.entry.esm.js","sources":["src/components/checkbox/checkbox.scss?tag=zane-checkbox&encapsulation=shadow","src/components/checkbox/checkbox.tsx","src/components/select/select.scss?tag=zane-select&encapsulation=shadow","src/components/select/select.tsx"],"sourcesContent":["@use '../../global/styles/commons';\n\n:host {\n  --checkbox-size: 1rem;\n\n  display: inline-block;\n  color: commons.v(--text-primary);\n}\n\n.checkbox {\n  position: relative;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  @include commons.font-style(body-compact-01);\n\n  &.has-content {\n    gap: commons.v(--spacing-03);\n  }\n\n  .input-native {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    border: 0;\n    clip: rect(0, 0, 0, 0);\n  }\n\n  .box {\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--input-background-color, var(--field));\n    border: 1px solid commons.v(--icon-primary);\n    border-radius: 2px;\n\n    &::before {\n      box-sizing: border-box;\n      display: block;\n      width: 100%;\n      height: 100%;\n      pointer-events: none;\n      content: '';\n      border: 1px solid transparent;\n      border-radius: 2px;\n    }\n  }\n\n  &.rounded {\n    .box {\n      border-radius: 50%;\n\n      &::before {\n        border-radius: 50%;\n      }\n    }\n  }\n\n  .tick {\n    position: absolute;\n    width: 0;\n    height: 0;\n  }\n\n  &.has-focus:not(.active) {\n    .box {\n      border-color: transparent;\n\n      @include commons.focus-ring;\n    }\n\n    &:not(.state-checked) .box::before {\n      border-color: commons.v(--icon-01);\n    }\n  }\n\n  .label {\n    color: commons.v(--text-primary);\n  }\n}\n\n.checkbox.state-checked {\n  .box {\n    background: commons.v(--icon-primary);\n    border-color: transparent;\n  }\n\n  .tick {\n    top: -15%;\n    left: 15%;\n    width: 33%;\n    height: 67%;\n    border-right: 2px solid commons.v(--icon-inverse);\n    border-bottom: 2px solid commons.v(--icon-inverse);\n    transform: rotate(45deg);\n    transform-origin: 0 100%;\n  }\n\n  &.active .box {\n    border-color: commons.v(--color-white);\n  }\n\n  &.has-focus:not(.active) {\n    .box {\n      border-color: commons.v(--color-white);\n\n      @include commons.focus-ring;\n    }\n  }\n}\n\n.checkbox.state-intermediate {\n  .box {\n    background: commons.v(--icon-primary);\n    border-color: transparent;\n  }\n\n  .tick {\n    width: 67%;\n    height: 0;\n    margin: auto;\n    border-right: 2px solid commons.v(--icon-inverse);\n    border-bottom: 2px solid commons.v(--icon-inverse);\n    transform-origin: 0 100%;\n  }\n\n  &.active .box {\n    border-color: commons.v(--color-white);\n  }\n\n  &.has-focus:not(.active) {\n    .box {\n      border-color: commons.v(--color-white);\n\n      @include commons.focus-ring;\n    }\n  }\n}\n\n/**\n * SIZES\n */\n.checkbox.size-md {\n  .box {\n    width: var(--checkbox-size);\n    height: var(--checkbox-size);\n  }\n}\n\n.checkbox.size-lg {\n  .box {\n    width: 1.5rem;\n    height: 1.5rem;\n  }\n}\n\n/**\n * States\n */\n@each $state in [success, warning, error] {\n  :host-context(.input-state-#{$state}) {\n    .checkbox .box {\n      border-color: commons.v(--color-#{$state});\n    }\n  }\n}\n\n.checkbox.readonly {\n  color: commons.v(--text-primary) !important;\n  cursor: default;\n  border-color: commons.v(--text-disabled) !important;\n\n  &.state-checked .box {\n    background: var(--text-disabled) !important;\n  }\n\n  .box {\n    border: 1px solid var(--text-disabled) !important;\n  }\n\n  .tick {\n    border-color: var(--disabled-01) !important;\n  }\n}\n\n.checkbox.disabled {\n  color: var(--text-disabled) !important;\n  cursor: not-allowed;\n  border-color: var(--text-disabled) !important;\n\n  &.state-checked .box {\n    background: var(--text-disabled) !important;\n  }\n\n  .box {\n    border: 1px solid var(--text-disabled) !important;\n  }\n\n  .tick {\n    border-color: var(--disabled-01) !important;\n  }\n}\n","import type { InputComponentInterface } from '../../interfaces';\n\nimport {\n  Component,\n  ComponentInterface,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n} from '@stencil/core';\n\nimport { getComponentIndex } from '../../utils';\n\n/**\n * @name Checkbox\n * @description Captures boolean input with an optional indeterminate mode.\n * @category Form Inputs\n * @tags input, form\n * @example <zane-checkbox value='true'>Want ice cream?</zane-checkbox>\n */\n@Component({\n  shadow: true,\n  styleUrl: 'checkbox.scss',\n  tag: 'zane-checkbox',\n})\nexport class Checkbox implements ComponentInterface, InputComponentInterface {\n  @Prop({ mutable: true, reflect: true }) configAria: any = {};\n\n  /**\n   * If true, the user cannot interact with the button. Defaults to `false`.\n   */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  @Element() elm!: HTMLElement;\n\n  gid: string = getComponentIndex();\n\n  @State() hasFocus = false;\n\n  @Prop({ mutable: true }) intermediate: boolean = false;\n\n  @State() isActive = false;\n\n  /**\n   * The checkbox label.\n   */\n  @Prop() label: string;\n\n  @Prop({ reflect: true }) layer?: '01' | '02' | 'background';\n\n  /**\n   * The input field name.\n   */\n  @Prop() name: string = `zane-input-${this.gid}`;\n\n  @Prop({ reflect: true }) readonly: boolean = false;\n\n  /**\n   * If true, required icon is show. Defaults to `false`.\n   */\n  @Prop({ reflect: true }) required: boolean = false;\n\n  @Prop() rounded: boolean = false;\n\n  /**\n   * The button size.\n   * Possible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.\n   */\n  @Prop() size: 'lg' | 'md' | 'sm' = 'md';\n\n  @State() slotHasContent = false;\n\n  /**\n   * The input field value.\n   */\n  @Prop({ mutable: true }) value: boolean = false;\n\n  /**\n   * Emitted when the input loses focus.\n   */\n  @Event({ eventName: 'zane-checkbox--blur' }) zaneBlur: EventEmitter;\n\n  /**\n   * On change of input a CustomEvent 'zane-checkbox--change' will be triggered. Event details contains parent event, oldValue, newValue of input.\n   */\n  @Event({ eventName: 'zane-checkbox--change' }) zaneChange: EventEmitter;\n\n  /**\n   * Emitted when the input has focus.\n   */\n  @Event({ eventName: 'zane-checkbox--focus' }) zaneFocus: EventEmitter;\n\n  private iconContainer?: HTMLElement;\n\n  private nativeElement?: HTMLInputElement;\n\n  private tabindex?: number | string = 1;\n\n  componentWillLoad() {\n    // If the ion-input has a tabindex attribute we get the value\n    // and pass it down to the native input, then remove it from the\n    // zane-input to avoid causing tabbing twice on the same element\n    if (this.elm.hasAttribute('tabindex')) {\n      const tabindex = this.elm.getAttribute('tabindex');\n      this.tabindex = tabindex === null ? undefined : tabindex;\n      this.elm.removeAttribute('tabindex');\n    }\n    this.elm.getAttributeNames().forEach((name: string) => {\n      if (name.includes('aria-')) {\n        this.configAria[name] = this.elm.getAttribute(name);\n        this.elm.removeAttribute(name);\n      }\n    });\n    this.slotHasContent = this.elm.hasChildNodes();\n  }\n  @Method()\n  async getComponentId() {\n    return this.gid;\n  }\n  render() {\n    return (\n      <Host active={this.isActive} has-focus={this.hasFocus}>\n        <label\n          class={{\n            [`size-${this.size}`]: true,\n            active: this.isActive,\n            checkbox: true,\n            disabled: this.disabled,\n            'has-content': this.slotHasContent,\n            'has-focus': this.hasFocus,\n            readonly: this.readonly,\n            required: this.required,\n            rounded: this.rounded,\n            'state-checked': this.value,\n            'state-intermediate': !this.value && this.intermediate,\n          }}\n        >\n          <div\n            aria-checked={`${this.value}`}\n            aria-disabled={`${this.disabled}`}\n            aria-required={`${this.required}`}\n            class=\"box\"\n            onBlur={this.blurHandler}\n            onFocus={this.focusHandler}\n            onKeyDown={this.keyDownHandler}\n            onKeyUp={(evt) => {\n              if (evt.keyCode === 13) {\n                this.clickHandler(evt);\n              }\n            }}\n            onMouseDown={this.mouseDownHandler}\n            ref={(elm) => (this.iconContainer = elm)}\n            role=\"checkbox\"\n            tabindex={this.tabindex}\n            {...this.configAria}\n          >\n            <div class=\"tick\" />\n          </div>\n\n          <input\n            aria-hidden=\"true\"\n            checked={this.value}\n            class=\"input-native\"\n            name={this.name}\n            onClick={this.clickHandler}\n            ref={(elm) => (this.nativeElement = elm)}\n            required={this.required}\n            tabindex=\"-1\"\n            type=\"checkbox\"\n            value={`${this.value}`}\n          />\n\n          {(() => {\n            return this.label ? (\n              <div class=\"label\">{this.label}</div>\n            ) : (\n              <div class=\"label slot-container\">\n                <slot />\n              </div>\n            );\n          })()}\n        </label>\n      </Host>\n    );\n  }\n  /**\n   * Sets blur on the native `input` in `zane-input`. Use this method instead of the global\n   * `input.blur()`.\n   */\n  @Method()\n  async setBlur() {\n    if (this.nativeElement) {\n      this.nativeElement.blur();\n    }\n  }\n  /**\n   * Sets focus on the native `input` in `zane-input`. Use this method instead of the global\n   * `input.focus()`.\n   */\n  @Method()\n  async setFocus() {\n    if (this.nativeElement) {\n      this.nativeElement.focus();\n    }\n  }\n  @Listen('keyup', { target: 'window' })\n  windowKeyUp(evt) {\n    if (this.isActive && evt.key === ' ') this.isActive = false;\n  }\n  @Listen('mouseup', { target: 'window' })\n  windowMouseUp() {\n    if (this.isActive) this.isActive = false;\n  }\n\n  private blurHandler = (ev: FocusEvent) => {\n    this.hasFocus = false;\n    this.zaneBlur.emit(ev);\n  };\n\n  private clickHandler = (ev: KeyboardEvent | MouseEvent) => {\n    if (!this.disabled && !this.readonly) {\n      this.value = !JSON.parse(this.nativeElement.value);\n      this.intermediate = false;\n      this.zaneChange.emit(ev);\n      this.iconContainer.focus();\n    }\n  };\n\n  private focusHandler = (ev: FocusEvent) => {\n    this.hasFocus = true;\n    this.zaneFocus.emit(ev);\n  };\n\n  private keyDownHandler = (evt) => {\n    if (evt.key === ' ') {\n      evt.preventDefault();\n      this.isActive = true;\n      this.clickHandler(evt);\n    }\n  };\n\n  private mouseDownHandler = () => {\n    this.isActive = true;\n  };\n}\n","@use '../../global/styles/common-input';\n\n.dropdown {\n  position: relative;\n\n  .dropdown-content {\n    position: absolute;\n    z-index: common-input.v(--z-index-dropdown-content);\n    width: max-content;\n    max-height: 300px;\n    line-height: 0;\n    transform: scale(0);\n    transition: transform 0.1s ease-out 0s;\n  }\n\n  .chevron-down {\n    padding: 0 0.625rem;\n    cursor: pointer;\n    transition: transform 0.1s ease-out 0s;\n  }\n\n  .loader {\n    padding: 0 0.625rem;\n  }\n\n  &.open {\n    .dropdown-content {\n      transform: scale(1);\n    }\n\n    .chevron-down {\n      transform: rotate(180deg);\n    }\n  }\n\n  &.bottom-right .dropdown-content {\n    top: calc(100% + #{common-input.v(--spacing-02)});\n    left: 0;\n    transform-origin: top;\n  }\n\n  &.bottom-left .dropdown-content {\n    top: calc(100% + #{common-input.v(--spacing-02)});\n    right: 0;\n    transform-origin: top;\n  }\n\n  &.top-right .dropdown-content {\n    bottom: calc(100% + #{common-input.v(--spacing-02)});\n    left: 0;\n    transform-origin: bottom;\n  }\n\n  &.top-left .dropdown-content {\n    right: 0;\n    bottom: calc(100% + #{common-input.v(--spacing-02)});\n    transform-origin: bottom;\n  }\n\n  &.search-none.center .dropdown-content {\n    position: fixed;\n    top: 0;\n    left: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100vw;\n    height: 100vh;\n    max-height: 100%;\n    padding: 0 1rem;\n    pointer-events: none;\n    background: rgb(0 0 0 / 50%);\n    transform-origin: center;\n  }\n}\n\n.select {\n  .input-container {\n    .value-container {\n      display: flex;\n      flex: 1;\n      flex-wrap: wrap;\n      column-gap: common-input.v(--spacing-03);\n      height: 100%;\n      overflow: hidden;\n    }\n  }\n\n  .input-container.start-slot-has-content {\n    .value-container {\n      padding-inline-start: 0.5rem;\n\n      .input {\n        padding-inline-start: 0;\n      }\n    }\n  }\n\n  .dropdown-content {\n    width: 100%;\n    min-width: 10rem;\n  }\n\n  .selected-items {\n    padding: 0.5rem;\n    margin-bottom: 0.5rem;\n    background: common-input.v(--background);\n    border: 1px solid var(--border-strong);\n    border-radius: common-input.v(--border-radius);\n    box-shadow: common-input.v(--shadow-sm);\n  }\n\n  .menu {\n    --zane-menu-max-height: 20rem;\n\n    width: 100%;\n\n    .slot-container-start {\n      display: flex;\n      gap: 0.5rem;\n      align-items: center;\n    }\n  }\n\n  .display-value {\n    display: flex;\n    align-items: center;\n    height: 100%;\n    padding-inline: common-input.v(--spacing-05);\n    color: common-input.v(--text-placeholder);\n    cursor: pointer;\n  }\n\n  .display-value-container {\n    display: flex;\n    gap: common-input.v(--spacing-02);\n    align-items: center;\n\n    .item-label {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n  }\n\n  &:not(.multiple) .input-container.has-value {\n    .display-value {\n      color: common-input.v(--text-primary);\n    }\n  }\n\n  .start-search {\n    display: flex;\n    flex-direction: column;\n    gap: var(--spacing-03);\n    align-items: center;\n    justify-content: center;\n    height: 10rem;\n  }\n\n  .text-secondary {\n    color: var(--text-secondary);\n  }\n\n  .toggle-icon {\n    display: flex;\n    align-items: center;\n    align-self: stretch;\n  }\n\n  &.multiple {\n    padding: 0.5rem 0;\n\n    .value-container {\n      padding-inline: var(--spacing-05);\n    }\n\n    .input {\n      padding-block: var(--spacing-03);\n      padding-inline: 0;\n    }\n\n    .input-native {\n      min-width: 6rem;\n    }\n\n    .multi-select-value {\n      padding-block: var(--spacing-03);\n    }\n  }\n}\n\n:host([size='sm']) .multiple :is(.input-container, .input-container-skeleton) {\n  height: auto;\n  min-height: var(--input-height, 2rem);\n}\n\n:host([size='md']) .multiple :is(.input-container, .input-container-skeleton) {\n  height: auto;\n  min-height: var(--input-height, 2.5rem);\n}\n\n:host([size='lg']) .multiple :is(.input-container, .input-container-skeleton) {\n  height: auto;\n  min-height: var(--input-height, 3rem);\n}\n","import type { InputComponentInterface } from '../../interfaces';\n\nimport { computePosition, flip, offset, size } from '@floating-ui/dom';\nimport {\n  Component,\n  ComponentInterface,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { throttle } from 'lodash';\n\nimport { debounceEvent, getComponentIndex, remToPx } from '../../utils';\n\n/**\n * @name Select\n * @description Allows the user to select one or more options using a dropdown.\n * @category Form Inputs\n * @tags input, form\n * @img /assets/img/select.webp\n * @imgDark /assets/img/select-dark.webp\n */\n@Component({\n  shadow: true,\n  styleUrl: 'select.scss',\n  tag: 'zane-select',\n})\nexport class Select implements ComponentInterface, InputComponentInterface {\n  @Element() elm!: HTMLElement;\n\n  @Prop() placements: string = 'bottom-start,top-start,bottom-end,top-end';\n\n  _fixPosition = throttle(\n    (callBack) => {\n      const positions = this.placements.split(',');\n      const placement: any = positions[0];\n      const fallbackPlacements: any = positions.splice(1);\n      const dropdownContent: any =\n        this.elm.shadowRoot.querySelector('.dropdown-content');\n      const menuElm: any = this.getMenuElement();\n\n      computePosition(\n        this.elm.shadowRoot.querySelector('.input-container'),\n        dropdownContent,\n        {\n          // Try removing the middleware. The dropdown will\n          // overflow the boundary's edge and get clipped!\n          middleware: [\n            offset(10),\n            size({\n              apply({ availableHeight }) {\n                if (availableHeight < remToPx(10)) return;\n                menuElm?.style.setProperty(\n                  '--zane-menu-max-height',\n                  `${availableHeight}px`,\n                );\n              },\n              padding: 5,\n            }),\n            flip({\n              fallbackPlacements,\n            }),\n          ],\n          placement,\n        },\n      ).then(({ x, y }) => {\n        Object.assign(dropdownContent.style, {\n          left: `${x}px`,\n          top: `${y}px`,\n        });\n        if (callBack) callBack();\n      });\n    },\n    80,\n    {\n      leading: true,\n      trailing: false,\n    },\n  );\n\n  /**\n   * If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.\n   */\n  @Prop() clearable: boolean = false;\n\n  @Prop({ mutable: true, reflect: true }) configAria: any = {};\n\n  /**\n   * Set the amount of time, in milliseconds, to wait to trigger the `zaneChange` event after each keystroke.\n   */\n  @Prop() debounce = 300;\n\n  /**\n   * If true, the user cannot interact with the button. Defaults to `false`.\n   */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  @State() endSlotHasContent = false;\n\n  gid: string = getComponentIndex();\n\n  @State() hasFocus = false;\n\n  @Prop() helperText: string;\n\n  @Prop() hideDropdownIcon: boolean = false;\n\n  index = 0;\n\n  @Prop({ reflect: true }) inline: boolean = false;\n\n  @Prop() invalid: boolean = false;\n\n  @Prop() invalidText: string;\n\n  /**\n   *  [{\n   *    label: 'Zane Deng',\n   *    value: 'zane-deng',\n   *    icon: 'person'\n   *  }]\n   */\n  @Prop() items: {\n    icon?: string;\n    label: number | string;\n    value: number | string;\n  }[] = [];\n\n  @Prop() label: string;\n\n  @Prop({ reflect: true }) layer?: '01' | '02' | 'background';\n\n  @Prop() multiple: boolean = false;\n\n  /**\n   * The input field name.\n   */\n  @Prop() name: string = `zane-input-${this.gid}`;\n\n  @Prop({ mutable: true, reflect: true }) open: boolean = false;\n\n  /**\n   * The input field placeholder.\n   */\n  @Prop() placeholder: string;\n\n  @State() position: string;\n\n  /**\n   * If true, the user cannot interact with the button. Defaults to `false`.\n   */\n  @Prop({ reflect: true }) readonly: boolean = false;\n\n  /**\n   * If true, required icon is show. Defaults to `false`.\n   */\n  @Prop({ reflect: true }) required: boolean = false;\n\n  /**\n   * Search type\n   * Possible values are `\"none\"`, `\"initial\"`, `\"contains\"`, `\"managed\"`. Defaults to `\"none\"`.\n   */\n  @Prop() search: 'contains' | 'initial' | 'managed' | 'none' = 'none';\n\n  @State() searchString: string = '';\n\n  @Prop() showLoader: boolean = false;\n\n  /**\n   * The select input size.\n   * Possible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.\n   */\n  @Prop({ reflect: true }) size: 'lg' | 'md' | 'sm' = 'md';\n\n  @State() startSlotHasContent = false;\n\n  /**\n   * The input state.\n   * Possible values are: `\"success\"`, `\"error\"`, `\"warning\"`, 'default'. Defaults to `\"default\"`.\n   */\n  @Prop({ reflect: true }) state: 'default' | 'error' | 'success' | 'warning' =\n    'default';\n\n  /**\n   * The input field value.\n   */\n  @Prop({ mutable: true }) value?: number | string = '';\n\n  @Prop() warn: boolean = false;\n\n  @Prop() warnText: string;\n\n  /**\n   * Emitted when the value has changed.\n   */\n  @Event({ eventName: 'zane-select--change' }) zaneChange: EventEmitter;\n\n  /**\n   * Emitted when a keyboard input occurred.\n   */\n  @Event({ eventName: 'zane-select--search' }) zaneSearch: EventEmitter;\n\n  @Event({ eventName: 'zane-select--enter' })\n  zaneSearchEnter: EventEmitter;\n  private displayElement?: HTMLElement;\n  private menuElm?: HTMLZaneMenuElement;\n  private nativeElement?: HTMLInputElement;\n\n  componentDidUpdate() {\n    if (this.open) this._fixPosition();\n  }\n\n  componentWillLoad() {\n    if (this.elm.getAttributeNames)\n      this.elm.getAttributeNames().forEach((name: string) => {\n        if (name.includes('aria-')) {\n          this.configAria[name] = this.elm.getAttribute(name);\n          this.elm.removeAttribute(name);\n        }\n      });\n    this.startSlotHasContent = !!this.elm.querySelector('[slot=\"start\"]');\n    this.endSlotHasContent = !!this.elm.querySelector('[slot=\"end\"]');\n  }\n  connectedCallback() {\n    this.debounceChanged();\n  }\n  @Listen('scroll', { target: 'window' })\n  fixPosition() {\n    if (this.open) {\n      this._fixPosition();\n    }\n  }\n  @Method()\n  async getComponentId() {\n    return this.gid;\n  }\n\n  @Listen('zane-menu-item--click')\n  menuItemClick(evt: CustomEvent<any>) {\n    this.selectHandler(evt.detail.value);\n  }\n\n  @Method()\n  async openSelectList(): Promise<void> {\n    this.openList();\n  }\n\n  render() {\n    return (\n      <Host\n        has-focus={this.hasFocus}\n        has-value={this.hasValue()}\n        position={this.position}\n      >\n        <div class={{ 'form-control': true, inline: this.inline }}>\n          {this.label && (\n            <label class=\"label\">\n              {this.required && <span class=\"required\">*</span>}\n              {this.label}\n            </label>\n          )}\n\n          <div class=\"field\">\n            <div\n              class={{\n                [`search-${this.search}`]: true,\n                dropdown: true,\n                multiple: this.multiple,\n                open: this.open,\n                select: true,\n                [this.position]: true,\n              }}\n            >\n              <div\n                class={{\n                  disabled: this.disabled,\n                  'end-slot-has-content': this.endSlotHasContent,\n                  'has-focus': this.hasFocus,\n                  'has-value': this.hasValue(),\n                  'input-container': true,\n                  readonly: this.readonly,\n                  'start-slot-has-content': this.startSlotHasContent,\n                }}\n              >\n                <div class=\"slot-container start\">\n                  <slot name=\"start\" />\n                </div>\n\n                <div\n                  class=\"value-container\"\n                  on-click={(evt) => {\n                    if (evt.target.classList.contains('multi-select-values')) {\n                      this.toggleList();\n                    }\n                  }}\n                >\n                  {this.renderMultiSelectValues()}\n\n                  {(() => {\n                    return this.search !== 'none' && this.open ? (\n                      <input\n                        class=\"input input-native\"\n                        name={this.name}\n                        onBlur={this.blurHandler}\n                        onFocus={this.focusHandler}\n                        onInput={this.onInput}\n                        onKeyDown={this.keyDownHandler}\n                        placeholder={this.placeholder}\n                        ref={(input) => (this.nativeElement = input)}\n                        type=\"text\"\n                        value={this.searchString}\n                        {...this.configAria}\n                      />\n                    ) : (\n                      <div\n                        aria-disabled={this.disabled ? 'true' : null}\n                        class=\"input display-value\"\n                        onBlur={this.blurHandler}\n                        onClick={this.toggleList}\n                        onFocus={this.focusHandler}\n                        onKeyDown={this.keyDownHandler}\n                        ref={(input) => (this.displayElement = input)}\n                        tabindex=\"0\"\n                        {...this.configAria}\n                      >\n                        {this.getDisplayValue()}\n                      </div>\n                    );\n                  })()}\n                </div>\n\n                {this.clearable && !this.multiple && this.hasValue() && (\n                  <zane-button\n                    class=\"clear clear-action\"\n                    color={'secondary'}\n                    icon=\"close\"\n                    onClick={this.clearInput}\n                    size={'xs'}\n                    variant=\"ghost.simple\"\n                  />\n                )}\n\n                <div class=\"slot-container end\">\n                  <slot name=\"end\" />\n                </div>\n\n                {this.getModeIcon()}\n              </div>\n              <div class=\"dropdown-content\">\n                {this.open && this.renderDropdownList()}\n              </div>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  renderMultiSelectValues() {\n    const values = this.getValues();\n    if (this.multiple && values.length > 0) {\n      // eslint-disable-next-line array-callback-return\n      return values.map((value) => {\n        const item = this.getItemByValue(value);\n        if (item) {\n          return (\n            <zane-tag\n              class=\"multi-select-value\"\n              dismissible={!this.disabled && !this.readonly}\n              size=\"sm\"\n              value={item.value?.toString()}\n            >\n              {item.label}\n            </zane-tag>\n          );\n        }\n      });\n    }\n  }\n\n  @Listen('resize', { target: 'window' })\n  resizeHandler() {\n    this.fixPosition();\n  }\n\n  /**\n   * Sets blur on the native `input` in `zane-input`. Use this method instead of the global\n   * `input.blur()`.\n   */\n  @Method()\n  async setBlur() {\n    if (this.nativeElement) {\n      this.nativeElement.blur();\n    }\n  }\n\n  /**\n   * Sets focus on the native `input` in `ion-input`. Use this method instead of the global\n   * `input.focus()`.t\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    if (!this.open && this.displayElement) {\n      this.displayElement.focus();\n    } else if (this.open && this.nativeElement) {\n      this.nativeElement.focus();\n    }\n  }\n\n  @Listen('zane-tag--dismiss')\n  tagDismissClick(evt: CustomEvent<any>) {\n    this.removeItem(evt.detail.value);\n  }\n\n  @Listen('click', { target: 'window' })\n  windowClick(evt) {\n    if (this.open === false) return;\n    const path = evt.path || evt.composedPath();\n    for (const elm of path) {\n      if (elm === this.elm) return;\n    }\n    this.open = false;\n  }\n\n  @Watch('debounce')\n  protected debounceChanged() {\n    this.zaneSearch = debounceEvent(this.zaneSearch, this.debounce);\n  }\n\n  private addItem(selectItemValue) {\n    let value = this.getValues();\n    if (!value.includes(selectItemValue)) {\n      if (!this.multiple) value = [];\n      value.push(selectItemValue);\n      this.value = value.join(',');\n      this.zaneChange.emit({\n        newItem: this.getItemByValue(selectItemValue),\n        value: this.value,\n      });\n    }\n  }\n\n  private blurHandler = () => {\n    this.hasFocus = false;\n  };\n\n  private clearInput = () => {\n    if (!this.disabled && !this.readonly) {\n      this.removeItem(this.value);\n    }\n  };\n\n  private closeList = () => {\n    if (!this.disabled && !this.readonly && this.open) {\n      this.open = false;\n      setTimeout(() => this.setFocus(), 80);\n    }\n  };\n\n  private containsValue(value: number | string) {\n    const values = this.getValues();\n    return values.includes(value?.toString());\n  }\n\n  private filterItems() {\n    if (this.search === 'managed') return this.items;\n    return this.items.filter((item) => {\n      return (\n        !this.searchString ||\n        item.label\n          .toString()\n          .toLocaleLowerCase()\n          .includes(this.searchString.toLocaleLowerCase())\n      );\n    });\n  }\n\n  private focusHandler = () => {\n    this.hasFocus = true;\n  };\n\n  private getDisplayValue() {\n    if (this.multiple) {\n      return !this.disabled && !this.readonly ? (\n        this.placeholder\n      ) : (\n        <span>&nbsp;</span>\n      );\n    } else {\n      if (this.items) {\n        const item = this.getItemByValue(this.value);\n        if (item) {\n          return (\n            <div class=\"display-value-container\">\n              {item.icon && <zane-icon name={item.icon} size=\"sm\" />}\n              <span class=\"item-label\">{item.label}</span>\n            </div>\n          );\n        }\n      }\n      return !this.disabled && !this.readonly ? (\n        this.placeholder\n      ) : (\n        <span>&nbsp;</span>\n      );\n    }\n  }\n\n  private getItemByValue(value) {\n    if (this.items) {\n      return this.items.find((item) => {\n        return item.value === value;\n      });\n    }\n  }\n\n  private getMenuElement() {\n    return this.elm.querySelector('zane-menu');\n  }\n\n  private getModeIcon() {\n    if (this.showLoader) {\n      return <zane-spinner class=\"loader\" />;\n    }\n    if (!this.disabled && !this.readonly && !this.hideDropdownIcon)\n      return (\n        <zane-icon\n          class=\"toggle-icon chevron-down color-secondary\"\n          name=\"chevron--down\"\n          onClick={this.toggleList}\n          size={this.size}\n          tabindex={-1}\n        ></zane-icon>\n      );\n  }\n\n  private getValues() {\n    return this.value ? this.value.toString().split(',') : [];\n  }\n\n  private hasValue(): boolean {\n    return (this.value || '').toString().length > 0;\n  }\n\n  private keyDownHandler = (evt) => {\n    switch (evt.key) {\n      case 'ArrowDown': {\n        if (this.open) {\n          evt.preventDefault();\n          this.menuElm.setFocus();\n        }\n\n        break;\n      }\n      case 'ArrowUp': {\n        if (this.open) {\n          evt.preventDefault();\n          this.menuElm.setFocus(); // focus on previous item\n        }\n\n        break;\n      }\n      case 'Enter': {\n        evt.preventDefault();\n        this.toggleList();\n        this.zaneSearchEnter.emit({\n          currentItems: this.filterItems(),\n          value: this.searchString,\n        });\n\n        break;\n      }\n      // No default\n    }\n  };\n\n  private onInput = (ev: Event) => {\n    const input = ev.target as HTMLInputElement;\n    this.searchString = input.value || '';\n    this.zaneSearch.emit({\n      value: this.searchString,\n    });\n  };\n\n  private openList = () => {\n    if (!this.disabled && !this.readonly && !this.open) {\n      this.open = true;\n      this.hasFocus = false;\n      if (this.search !== 'none') {\n        this.searchString = '';\n      }\n\n      setTimeout(() => {\n        if (this.search !== 'none' && this.open) {\n          this.nativeElement.focus();\n        }\n      }, 300);\n    }\n  };\n\n  private removeItem(selectItemValue) {\n    let value = this.getValues();\n    if (value.includes(selectItemValue)) {\n      value = value.filter((item) => item !== selectItemValue);\n      this.value = value.join(',');\n      this.zaneChange.emit({\n        removedItem: this.getItemByValue(selectItemValue),\n        value: this.value,\n      });\n    }\n  }\n\n  private renderDropdownList() {\n    if (this.search === 'managed' && this.items.length === 0) {\n      return (\n        <zane-menu\n          class=\"menu\"\n          layer={this.layer}\n          ref={(el) => (this.menuElm = el)}\n          size={this.size}\n        >\n          <div class=\"start-search\">\n            <zane-icon name=\"search\" size={this.size} />\n            <zane-text class=\"text-secondary\">\n              Start typing to perform search\n            </zane-text>\n          </div>\n        </zane-menu>\n      );\n    }\n\n    if (this.items) {\n      const filteredItems = this.filterItems();\n      return (\n        <zane-menu\n          class=\"menu\"\n          empty={filteredItems.length === 0}\n          layer={this.layer}\n          ref={(el) => (this.menuElm = el)}\n          size={this.size}\n        >\n          {(() => {\n            return filteredItems.map((item) => {\n              return (\n                <zane-menu-item layer={this.layer} value={item.value}>\n                  <div class={'slot-container-start'} slot=\"start\">\n                    {item.icon && (\n                      <zane-icon name={item.icon} size={this.size} />\n                    )}\n                  </div>\n                  {item.label || item.value}\n\n                  <div slot=\"end\">\n                    {((this.multiple && this.containsValue(item.value)) ||\n                      this.value === item.value) && (\n                      <zane-icon name=\"checkmark\" size={this.size} />\n                    )}\n                  </div>\n                </zane-menu-item>\n              );\n            });\n          })()}\n        </zane-menu>\n      );\n    }\n  }\n\n  private selectHandler = (selectItemValue) => {\n    if (!this.disabled && !this.readonly) {\n      this.searchString = '';\n\n      if (this.multiple) this.toggleItem(selectItemValue);\n      else this.addItem(selectItemValue);\n    }\n    if (!this.multiple) this.closeList();\n  };\n\n  private toggleItem(selectItemValue) {\n    const value = this.getValues();\n    if (value.includes(selectItemValue)) {\n      this.removeItem(selectItemValue);\n    } else {\n      this.addItem(selectItemValue);\n    }\n  }\n\n  private toggleList = () => {\n    if (this.open) this.closeList();\n    else this.openList();\n  };\n}\n"],"names":["throttle"],"mappings":"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"}