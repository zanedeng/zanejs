{"version":3,"names":["tabsCss","Tabs","constructor","hostRef","this","gid","getComponentIndex","type","componentDidLoad","tabsHaveTarget","selectedTab","elm","querySelector","selectTab","target","tabs","getTabs","forEach","tab","index","setAttribute","classList","add","length","tabList","getTabList","getTabPanels","querySelectorAll","render","h","Host","key","i","selected","remove","tabPanels","tabPanel","active","value","tabClick","evt","stopPropagation","detail"],"sources":["src/components/tabs/tabs/tabs.scss?tag=zane-tabs&encapsulation=shadow","src/components/tabs/tabs/tabs.tsx"],"sourcesContent":["@use \"../../../global/styles/commons\";\n\n:host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  h,\n  Host,\n  Listen,\n  Prop,\n} from '@stencil/core';\n\nimport { getComponentIndex } from '../../../utils';\n\n/**\n * @name Tabs\n * @description The tabs component is used to display multiple panels of content in a container.\n * @category Navigation\n * @tags navigation\n * @example <zane-tabs>\n *   <zane-tabs-list>\n *    <zane-tab selected >Tab 1</zane-tab>\n *    <zane-tab>Tab 2</zane-tab>\n *   </zane-tabs-list>\n * </zane-tabs>\n */\n@Component({\n  shadow: true,\n  styleUrl: 'tabs.scss',\n  tag: 'zane-tabs',\n})\nexport class Tabs implements ComponentInterface {\n  @Element() elm!: HTMLElement;\n  gid: string = getComponentIndex();\n\n  @Prop({ reflect: true }) layer?: '01' | '02' | 'background';\n\n  @Prop({ reflect: true }) type: 'contained' | 'contained-bottom' | 'default' =\n    'default';\n\n  componentDidLoad() {\n    if (this.tabsHaveTarget()) {\n      const selectedTab = this.elm.querySelector('zane-tab[selected]');\n      if (selectedTab) this.selectTab((selectedTab as any).target);\n    } else {\n      const tabs = this.getTabs();\n      tabs.forEach((tab: HTMLZaneTabElement, index) => {\n        tab.setAttribute('target', `tab-${this.gid}-${index}`);\n        tab.type = this.type;\n      });\n      tabs[0].classList.add('first-tab');\n      tabs[tabs.length - 1].classList.add('last-tab');\n\n      const tabList: any = this.getTabList();\n      tabList.type = this.type;\n      this.getTabPanels().forEach((tab, index) => {\n        tab.setAttribute('value', `tab-${this.gid}-${index}`);\n      });\n      if (tabs.length > 0) this.selectTab(`tab-${this.gid}-0`);\n    }\n  }\n\n  getTabList() {\n    return this.elm.querySelector(':scope > zane-tabs-list');\n  }\n\n  getTabPanels() {\n    return this.elm.querySelectorAll(':scope > zane-tab-panel');\n  }\n\n  getTabs() {\n    return this.elm.querySelectorAll(':scope > zane-tabs-list zane-tab');\n  }\n\n  render() {\n    return (\n      <Host>\n        <slot />\n      </Host>\n    );\n  }\n\n  selectTab(target) {\n    const tabs = this.getTabs();\n    // eslint-disable-next-line unicorn/no-for-loop\n    for (let i = 0; i < tabs.length; i++) {\n      const tab: any = tabs[i];\n      tab.selected = false;\n      tab.classList.remove('previous-tab', 'next-tab');\n    }\n    for (let i = 0; i < tabs.length; i++) {\n      const tab: any = tabs[i];\n      if (target === tab.target) {\n        tab.selected = true;\n\n        if (tabs[i - 1]) {\n          tabs[i - 1].classList.add('previous-tab');\n        }\n        if (tabs[i + 1]) {\n          tabs[i + 1].classList.add('next-tab');\n        }\n      }\n    }\n    const tabPanels = this.getTabPanels();\n    // eslint-disable-next-line unicorn/no-for-loop\n    for (let i = 0; i < tabPanels.length; i++) {\n      const tabPanel: any = tabPanels[i];\n      tabPanel.active = target === tabPanel.value;\n    }\n  }\n\n  @Listen('zane-tab--click')\n  tabClick(evt: CustomEvent<any>) {\n    evt.stopPropagation();\n    if (evt.detail.target) {\n      this.selectTab(evt.detail.target);\n    }\n  }\n\n  tabsHaveTarget() {\n    return this.elm.querySelector(':scope > zane-tabs-list zane-tab[target]');\n  }\n}\n"],"mappings":"6IAAA,MAAMA,EAAU,y4E,MC6BHC,EAAI,MALjB,WAAAC,CAAAC,G,UAOEC,KAAGC,IAAWC,IAIWF,KAAIG,KAC3B,SAoFH,CAlFC,gBAAAC,GACE,GAAIJ,KAAKK,iBAAkB,CACzB,MAAMC,EAAcN,KAAKO,IAAIC,cAAc,sBAC3C,GAAIF,EAAaN,KAAKS,UAAWH,EAAoBI,O,KAChD,CACL,MAAMC,EAAOX,KAAKY,UAClBD,EAAKE,SAAQ,CAACC,EAAyBC,KACrCD,EAAIE,aAAa,SAAU,OAAOhB,KAAKC,OAAOc,KAC9CD,EAAIX,KAAOH,KAAKG,IAAI,IAEtBQ,EAAK,GAAGM,UAAUC,IAAI,aACtBP,EAAKA,EAAKQ,OAAS,GAAGF,UAAUC,IAAI,YAEpC,MAAME,EAAepB,KAAKqB,aAC1BD,EAAQjB,KAAOH,KAAKG,KACpBH,KAAKsB,eAAeT,SAAQ,CAACC,EAAKC,KAChCD,EAAIE,aAAa,QAAS,OAAOhB,KAAKC,OAAOc,IAAQ,IAEvD,GAAIJ,EAAKQ,OAAS,EAAGnB,KAAKS,UAAU,OAAOT,KAAKC,Q,EAIpD,UAAAoB,GACE,OAAOrB,KAAKO,IAAIC,cAAc,0B,CAGhC,YAAAc,GACE,OAAOtB,KAAKO,IAAIgB,iBAAiB,0B,CAGnC,OAAAX,GACE,OAAOZ,KAAKO,IAAIgB,iBAAiB,mC,CAGnC,MAAAC,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAQ,QAAAE,IAAA,6C,CAKd,SAAAlB,CAAUC,GACR,MAAMC,EAAOX,KAAKY,UAElB,IAAK,IAAIgB,EAAI,EAAGA,EAAIjB,EAAKQ,OAAQS,IAAK,CACpC,MAAMd,EAAWH,EAAKiB,GACtBd,EAAIe,SAAW,MACff,EAAIG,UAAUa,OAAO,eAAgB,W,CAEvC,IAAK,IAAIF,EAAI,EAAGA,EAAIjB,EAAKQ,OAAQS,IAAK,CACpC,MAAMd,EAAWH,EAAKiB,GACtB,GAAIlB,IAAWI,EAAIJ,OAAQ,CACzBI,EAAIe,SAAW,KAEf,GAAIlB,EAAKiB,EAAI,GAAI,CACfjB,EAAKiB,EAAI,GAAGX,UAAUC,IAAI,e,CAE5B,GAAIP,EAAKiB,EAAI,GAAI,CACfjB,EAAKiB,EAAI,GAAGX,UAAUC,IAAI,W,GAIhC,MAAMa,EAAY/B,KAAKsB,eAEvB,IAAK,IAAIM,EAAI,EAAGA,EAAIG,EAAUZ,OAAQS,IAAK,CACzC,MAAMI,EAAgBD,EAAUH,GAChCI,EAASC,OAASvB,IAAWsB,EAASE,K,EAK1C,QAAAC,CAASC,GACPA,EAAIC,kBACJ,GAAID,EAAIE,OAAO5B,OAAQ,CACrBV,KAAKS,UAAU2B,EAAIE,OAAO5B,O,EAI9B,cAAAL,GACE,OAAOL,KAAKO,IAAIC,cAAc,2C","ignoreList":[]}