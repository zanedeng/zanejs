{"version":3,"names":["getNextLayer","layer","layerCycle","currentIndex","indexOf","nextIndex","length","tableCss","DEFAULT_CELL_WIDTH","SUPPORTED_PAGE_SIZES","label","value","Table","constructor","hostRef","this","columns","data","emptyStateDescription","emptyStateHeadline","keyField","managed","hoveredCell","onCellMouseOver","throttle","row","column","page","pageSize","paginate","selectedRowKeys","sortable","sortOrder","isHorizontallyScrolled","isSelectAll","isSelectAllIntermediate","onRowSelectClick","includes","filter","rowId","push","onSelectChange","onSelectAllClick","map","slice","getTotalItems","totalItems","onCellClick","col","evt","zaneCellClick","emit","altKey","ctrlKey","metaKey","record","shiftKey","zaneSelectChange","render","h","Host","key","class","table","onScroll","event","target","scrollLeft","renderHeader","renderBody","renderEmptyState","renderPagination","rows","sortBy","sort","a","b","forEach","fixedCols","scrollCols","selectionType","center","colWidth","width","Number","parseInt","colEl","onClick","selection","window","getSelection","type","onKeyDown","elem","navigator","clipboard","writeText","innerText","onMouseOver","style","tabindex","template","innerHTML","title","name","fixed","intermediate","icon","color","zaneSort","variant","inline","items","e","detail","zanePage","placements","Math","min","disabled","description","headline"],"sources":["src/utils/getNextLayer.ts","src/components/table/table.scss?tag=zane-table&encapsulation=shadow","src/components/table/able.tsx"],"sourcesContent":["export type LayerType = '01' | '02' | 'background';\n\n/**\n * 获取下一个层级标识\n * @param layer - 当前层级标识\n * @returns 返回下一个层级标识，遵循 background → 01 → 02 → background 的循环顺序\n *\n * @example\n * getNextLayer(); // '01'\n * getNextLayer('background'); // '01'\n * getNextLayer('01'); // '02'\n * getNextLayer('02'); // 'background'\n */\nexport function getNextLayer(layer?: LayerType): LayerType {\n  const layerCycle: LayerType[] = ['background', '01', '02'];\n\n  // 获取当前索引，未提供时默认为-1(background前一位)\n  const currentIndex = layer ? layerCycle.indexOf(layer) : -1;\n\n  // 计算下一个索引(循环)\n  const nextIndex = (currentIndex + 1) % layerCycle.length;\n\n  return layerCycle[nextIndex];\n}\n","@use '../../global/styles/commons';\n\n:host {\n  --zane-table-border-color: #{commons.v(--border-subtle)};\n  --zane-table-border: 1px solid var(--zane-table-border-color);\n  --zane-col-content-padding: #{commons.v(--spacing-04)}\n    #{commons.v(--spacing-05)};\n\n  display: block;\n  height: 100%;\n  min-height: 20em;\n}\n\n.table {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background: var(--layer);\n\n  @include commons.font-style(body-compact-01);\n\n  .table-scroll-container {\n    position: relative;\n    height: 100%;\n    overflow: auto;\n  }\n\n  .empty-table {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 80%;\n\n    .empty-state {\n      width: 10rem;\n    }\n  }\n\n  .pagination {\n    --input-background-color: var(--layer);\n\n    display: flex;\n    background: var(--layer);\n    border-top: 1px solid var(--zane-table-border-color);\n\n    .form-control {\n      margin: 0;\n    }\n\n    .select {\n      --input-border-radius: none;\n      --input-border: none;\n      --input-border-inline-start: 1px solid var(--zane-table-border-color);\n      --input-border-inline-end: 1px solid var(--zane-table-border-color);\n\n      margin: 0;\n    }\n\n    .page-sizes-select {\n      margin-inline-start: commons.v(--spacing-03);\n    }\n\n    .pagination-item-count {\n      display: flex;\n      flex: 1;\n      align-items: center;\n      margin-inline-start: commons.v(--spacing-04);\n    }\n\n    .arrows {\n      --border-radius: 0;\n      --zane-button-height: calc(2.5rem - 2px);\n    }\n  }\n\n  &.horizontal-scrolled {\n    .fixed-columns::after {\n      position: absolute;\n      top: 0;\n      right: -20px;\n      width: 20px;\n      height: 100%;\n      content: ' ';\n      box-shadow: 10px 0 20px -20px #{v(--border-color)} inset;\n    }\n  }\n}\n\n.row {\n  box-sizing: border-box;\n  display: flex;\n\n  .columns-container {\n    display: flex;\n  }\n\n  .col {\n    margin: 0;\n    color: var(--text-primary);\n\n    .col-content {\n      display: flex;\n      align-items: center;\n      height: 100%;\n\n      .col-text {\n        flex: 1;\n        padding: var(--zane-col-content-padding);\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      .col-template {\n        width: 100%;\n      }\n\n      .col-action {\n        --zane-button-border-radius: none;\n\n        &.has-focus {\n          z-index: 12;\n        }\n      }\n\n      .checkbox {\n        padding: 0 var(--spacing-03);\n      }\n    }\n\n    &.center .col-content {\n      justify-content: center;\n    }\n\n    &:last-child {\n      flex: 1;\n    }\n  }\n\n  .fixed-columns {\n    position: sticky;\n    left: 0;\n    z-index: 1;\n  }\n\n  .scrollable-columns {\n    flex: 1;\n\n    /* z-index: 0; */\n  }\n}\n\n.header {\n  position: sticky;\n  top: 0;\n  z-index: commons.v(--z-index-table-header);\n\n  @include commons.font-style(heading-compact-01);\n\n  .left-panel {\n    position: sticky;\n    top: 0;\n    left: 0;\n  }\n\n  .col {\n    background: var(--layer-accent);\n\n    &.sort {\n      background: var(--layer-selected-hover);\n    }\n  }\n}\n\n.body {\n  .row {\n    .col {\n      cursor: pointer;\n      background: var(--layer);\n      border-bottom: 1px solid var(--layer-accent);\n\n      &.col-checkbox .col-content {\n        border: 0;\n      }\n\n      .col-content {\n        border: 2px solid transparent;\n        border-bottom: 1px solid transparent;\n\n        .col-text {\n          text-wrap: wrap;\n        }\n      }\n\n      &:focus {\n        z-index: 1;\n        outline: none;\n        border-bottom-color: commons.v(--color-primary);\n\n        .col-content {\n          border-color: commons.v(--color-primary);\n        }\n      }\n    }\n\n    &:hover {\n      .col {\n        background-color: var(--layer-hover);\n      }\n    }\n  }\n\n  .left-panel {\n    position: sticky;\n    left: 0;\n  }\n}\n\n:host-context(.no-wrap-column) {\n  .row .col .col-content .col-text {\n    text-wrap: nowrap;\n  }\n}\n\n.empty-data {\n  position: absolute;\n  inset: 46px 0 0;\n  height: max-content;\n  margin: auto;\n  color: commons.v(--color-neutral-600);\n  text-align: center;\n  border-radius: 3px;\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  State,\n} from '@stencil/core';\nimport { throttle } from 'lodash';\n\nimport { getNextLayer } from '../../utils';\n\nconst DEFAULT_CELL_WIDTH = 16; // in rem\nconst SUPPORTED_PAGE_SIZES = [\n  {\n    label: 10,\n    value: 10,\n  },\n  {\n    label: 25,\n    value: 25,\n  },\n  {\n    label: 50,\n    value: 50,\n  },\n  {\n    label: 100,\n    value: 100,\n  },\n];\n\n/**\n * @name Table\n * @description A configurable component for displaying tabular data.\n * @category Data Display\n * @img /assets/img/table.webp\n * @imgDark /assets/img/table-dark.webp\n */\n@Component({\n  shadow: true,\n  styleUrl: 'table.scss',\n  tag: 'zane-table',\n})\nexport class Table {\n  /**\n   * Grid columns configuration.\n   * [\n   * {\n   *   \"name\":\"name\",\n   *   \"label\":\"Name\",\n   *   \"width\":300,\n   *   \"fixed\":true,\n   *   \"template\": function(row, column) { return row[column.name];}\n   *  },\n   * {\n   *   \"name\":\"age\",\n   *   \"label\":\"Age\"\n   * }\n   * ]\n   */\n  @Prop() columns: any[] = [];\n\n  /**\n   * Grid data to display on table\n   * [{\n   *  'id': '5e7118ddce4b3d577956457f',\n   *  'age': 21,\n   *  'name': 'John',\n   *  'company': 'India',\n   *  'email': 'john@example.com',\n   *  'phone': '+1 (839) 560-3581',\n   *  'address': '326 Irving Street, Grimsley, Texas, 4048'\n   *  }]\n   */\n  @Prop() data: any[] = [];\n\n  @Element() elm!: HTMLElement;\n\n  @Prop({ mutable: true }) emptyStateDescription: string =\n    'There are no items to display';\n\n  @Prop({ mutable: true }) emptyStateHeadline: string = 'No items';\n\n  @Prop() keyField: string = 'id';\n\n  @Prop({ reflect: true }) layer?: '01' | '02' | 'background';\n\n  @Prop() managed: boolean = false;\n\n  @State() private hoveredCell: any = {};\n\n  onCellMouseOver = throttle((row: any, column: any) => {\n    this.hoveredCell = { column, row };\n  }, 30);\n\n  @Prop() page: number = 1;\n\n  @Prop() pageSize: number = 10;\n\n  @Prop() paginate: boolean = true;\n\n  @Prop({ mutable: true }) selectedRowKeys: string[] = [];\n\n  @Prop() selectionType: 'checkbox' | undefined;\n\n  @Prop() sortable: boolean = true;\n\n  @Prop({ mutable: true }) sortBy: string;\n\n  @Prop({ mutable: true }) sortOrder: 'asc' | 'desc' = 'asc';\n  @Prop({ mutable: true }) totalItems;\n  /**\n   * Emitted when a table cell is clicked.\n   */\n  @Event({ eventName: 'zane-table--cell-click' }) zaneCellClick: EventEmitter;\n  /**\n   * Emitted when the page changes.\n   */\n  @Event({ eventName: 'zane-table--page' }) zanePage: EventEmitter;\n\n  /**\n   * Emitted when the selection changes.\n   */\n  @Event({ eventName: 'zane-table--selection-change' })\n  zaneSelectChange: EventEmitter;\n\n  /**\n   * Emitted when the table is sorted.\n   */\n  @Event({ eventName: 'zane-table--sort' }) zaneSort: EventEmitter;\n\n  @State() private isHorizontallyScrolled: boolean = false;\n\n  @State() private isSelectAll: boolean = false;\n\n  @State() private isSelectAllIntermediate: boolean = false;\n\n  getTotalItems() {\n    let totalItems = this.totalItems;\n    if (this.paginate && !this.managed) totalItems = this.data.length;\n    return totalItems;\n  }\n\n  onCellClick(row: any, col: any, evt: MouseEvent) {\n    this.zaneCellClick.emit({\n      altKey: evt.altKey,\n      column: col,\n      ctrlKey: evt.ctrlKey,\n      metaKey: evt.metaKey,\n      record: row,\n      shiftKey: evt.shiftKey,\n    });\n  }\n\n  onRowSelectClick = (row) => {\n    let selectedRowKeys = [...this.selectedRowKeys];\n    if (selectedRowKeys.includes(row[this.keyField])) {\n      this.isSelectAll = false;\n      selectedRowKeys = selectedRowKeys.filter(\n        (rowId) => rowId !== row[this.keyField],\n      );\n    } else {\n      selectedRowKeys.push(row[this.keyField]);\n    }\n    this.onSelectChange(selectedRowKeys);\n  };\n\n  onSelectAllClick = () => {\n    let selectedRowKeys = [];\n    this.isSelectAll = !this.isSelectAll;\n    if (this.isSelectAll)\n      selectedRowKeys = this.data\n        .map((row) => row[this.keyField])\n        .slice((this.page - 1) * this.pageSize, this.page * this.pageSize);\n    this.onSelectChange(selectedRowKeys);\n  };\n\n  onSelectChange(selectedRowKeys: any) {\n    this.selectedRowKeys = selectedRowKeys;\n    this.zaneSelectChange.emit({\n      isSelectAll: this.isSelectAll,\n      value: this.selectedRowKeys,\n    });\n  }\n\n  render() {\n    return (\n      <Host>\n        <div\n          class={{\n            'horizontal-scrolled': this.isHorizontallyScrolled,\n            paginate: this.paginate,\n            sortable: this.sortable,\n            table: true,\n          }}\n        >\n          <div\n            class=\"table-scroll-container\"\n            onScroll={(event) => {\n              this.isHorizontallyScrolled = !!(event.target as any).scrollLeft;\n            }}\n          >\n            {this.renderHeader()}\n            {this.data.length > 0 ? this.renderBody() : this.renderEmptyState()}\n          </div>\n          <div class=\"table-footer\">{this.renderPagination()}</div>\n        </div>\n      </Host>\n    );\n  }\n\n  renderBody() {\n    const rows = [];\n\n    let data = [...this.data];\n\n    if (!this.managed) {\n      if (this.sortable && this.sortBy) {\n        data = data.sort((a, b) => {\n          if (a[this.sortBy] < b[this.sortBy])\n            return this.sortOrder === 'asc' ? -1 : 1;\n          if (a[this.sortBy] > b[this.sortBy])\n            return this.sortOrder === 'asc' ? 1 : -1;\n          return 0;\n        });\n      }\n      if (this.paginate) {\n        data = data.slice(\n          (this.page - 1) * this.pageSize,\n          this.page * this.pageSize,\n        );\n      }\n    }\n\n    data.forEach((row) => {\n      const fixedCols = [];\n      const scrollCols = [];\n\n      if (this.selectionType === 'checkbox')\n        fixedCols.push(\n          <div class={{ center: true, col: true, 'col-checkbox': true }}>\n            <div class=\"col-content\">\n              <zane-checkbox\n                class=\"checkbox\"\n                layer={getNextLayer(this.layer)}\n                onZane-checkbox--change={() => this.onRowSelectClick(row)}\n                value={this.selectedRowKeys.includes(row[this.keyField])}\n              />\n            </div>\n          </div>,\n        );\n\n      this.columns.forEach((column) => {\n        let colWidth = DEFAULT_CELL_WIDTH;\n        if (column.width) colWidth = Number.parseInt(column.width);\n        const colEl = (\n          <div\n            class={{\n              col: true,\n              'col-hover':\n                this.hoveredCell.row === row &&\n                this.hoveredCell.column === column,\n            }}\n            onClick={(evt: MouseEvent) => {\n              const selection = window.getSelection();\n              if (selection.type !== 'Range')\n                this.onCellClick(row, column, evt);\n            }}\n            onKeyDown={(event) => {\n              if ((event.ctrlKey || event.metaKey) && event.key === 'c') {\n                const elem: any = event.target;\n                window.navigator.clipboard.writeText(elem.innerText);\n              }\n            }}\n            onMouseOver={() => {\n              this.onCellMouseOver(row, column);\n            }}\n            style={{ width: `${colWidth}rem` }}\n            tabindex=\"1\"\n          >\n            <div class=\"col-content\">\n              {(() => {\n                return column.template ? (\n                  <div\n                    class=\"col-template\"\n                    innerHTML={column.template(row, column)}\n                  ></div>\n                ) : (\n                  <div class=\"col-text\" title={row?.[column.name]}>\n                    {row?.[column.name]}\n                  </div>\n                );\n              })()}\n            </div>\n          </div>\n        );\n\n        column.fixed ? fixedCols.push(colEl) : scrollCols.push(colEl);\n      });\n      rows.push(\n        <div class={{ row: true, 'row-hover': this.hoveredCell.row === row }}>\n          <div class=\"fixed-columns columns-container\">{fixedCols}</div>\n          <div class=\"scrollable-columns columns-container\">{scrollCols}</div>\n        </div>,\n      );\n    });\n\n    return <div class=\"body\">{rows}</div>;\n  }\n\n  renderHeader() {\n    const fixedCols = [];\n    const scrollCols = [];\n\n    if (this.selectionType === 'checkbox') {\n      fixedCols.push(\n        <div class=\"col col-checkbox center\">\n          <div class=\"col-content\">\n            <zane-checkbox\n              class=\"checkbox\"\n              intermediate={this.isSelectAllIntermediate}\n              layer={'01'}\n              onZane-checkbox--change={this.onSelectAllClick}\n              value={this.isSelectAll}\n            />\n          </div>\n        </div>,\n      );\n    }\n    this.columns.forEach((col) => {\n      let colWidth = DEFAULT_CELL_WIDTH;\n      if (col.width) colWidth = Number.parseInt(col.width);\n      const colEl = (\n        <div\n          class={{ col: true, sort: this.sortBy === col.name }}\n          style={{ width: `${colWidth}rem` }}\n        >\n          <div class=\"col-content\">\n            <div class=\"col-text\">{col.label}</div>\n            <div class=\"col-actions\">\n              {(() => {\n                if (!this.sortable) return;\n                let icon = 'arrows--vertical';\n                if (this.sortBy === col.name) {\n                  icon = this.sortOrder === 'asc' ? 'arrow--up' : 'arrow--down';\n                }\n                return (\n                  <zane-button\n                    class=\"col-action\"\n                    color=\"secondary\"\n                    dark-mode-color=\"white\"\n                    icon={icon}\n                    onClick={() => {\n                      if (this.sortBy === col.name) {\n                        if (this.sortOrder === 'asc') this.sortOrder = 'desc';\n                        else this.sortBy = null;\n                      } else {\n                        this.sortBy = col.name;\n                        this.sortOrder = 'asc';\n                      }\n                      this.zaneSort.emit({\n                        sortBy: this.sortBy,\n                        sortOrder: this.sortOrder,\n                      });\n                    }}\n                    variant=\"ghost\"\n                  />\n                );\n              })()}\n            </div>\n          </div>\n        </div>\n      );\n      col.fixed ? fixedCols.push(colEl) : scrollCols.push(colEl);\n    });\n\n    return (\n      <div class=\"header\">\n        <div class=\"row\">\n          <div class=\"fixed-columns columns-container\">{fixedCols}</div>\n          <div class=\"scrollable-columns columns-container\">{scrollCols}</div>\n        </div>\n      </div>\n    );\n  }\n\n  renderPagination() {\n    if (this.paginate)\n      return (\n        <div class=\"pagination\">\n          <div class=\"page-sizes-select\">\n            <zane-select\n              class=\"select\"\n              inline={true}\n              items={SUPPORTED_PAGE_SIZES}\n              label=\"Items per page:\"\n              layer={getNextLayer(this.layer)}\n              onZane-select--change={(e) => {\n                this.pageSize = e.detail.value;\n                this.zanePage.emit({\n                  page: this.page,\n                  pageSize: this.pageSize,\n                });\n              }}\n              placements=\"top-start\"\n              value={this.pageSize}\n            />\n          </div>\n          <div class=\"pagination-item-count\">\n            <zane-text color=\"secondary\" inline>\n              {this.pageSize * (this.page - 1)} -{' '}\n              {Math.min(this.pageSize * this.page, this.getTotalItems())} of{' '}\n              {this.getTotalItems()} items\n            </zane-text>\n          </div>\n          <div class=\"pagination-right\">\n            <div class=\"table-footer-right-content\">\n              <div class=\"table-footer-right-content-pagination\">\n                <zane-button\n                  class=\"arrows\"\n                  color=\"secondary\"\n                  dark-mode-color=\"light\"\n                  disabled={this.page === 1}\n                  icon=\"arrow--left\"\n                  onClick={() => {\n                    this.page = this.page - 1;\n                    this.zanePage.emit({\n                      page: this.page,\n                      pageSize: this.pageSize,\n                    });\n                  }}\n                  variant=\"ghost\"\n                />\n                <zane-button\n                  class=\"arrows\"\n                  color=\"secondary\"\n                  dark-mode-color=\"light\"\n                  disabled={this.pageSize * this.page >= this.getTotalItems()}\n                  icon=\"arrow--right\"\n                  onClick={() => {\n                    this.page = this.page + 1;\n                    this.zanePage.emit({\n                      page: this.page,\n                      pageSize: this.pageSize,\n                    });\n                  }}\n                  variant=\"ghost\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n  }\n\n  private renderEmptyState() {\n    return (\n      <div class=\"empty-table\">\n        <zane-empty-state\n          class=\"empty-state content-center\"\n          description={this.emptyStateDescription}\n          headline={this.emptyStateHeadline}\n        />\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}