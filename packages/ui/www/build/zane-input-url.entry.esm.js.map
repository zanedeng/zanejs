{"version":3,"file":"zane-input-url.entry.esm.js","sources":["src/components/input-url/input-url.scss?tag=zane-input-url&encapsulation=shadow","src/components/input-url/input-url.tsx"],"sourcesContent":["@use '../../global/styles/common-input';\n\n:host {\n  display: block;\n}\n\n/* URL-specific styles */\n.input-container.invalid {\n  border-color: var(--support-error);\n}\n\n.input-container.has-focus.invalid {\n  box-shadow: 0 0 0 0.125rem var(--support-error);\n}\n\n.helper.invalid {\n  color: var(--support-error-inverse);\n}\n\n.input-container {\n  display: none;\n}\n\n.url-container {\n  display: flex;\n\n  zane-link {\n    flex: 1;\n  }\n}\n\n.editing {\n  .url-container {\n    display: none;\n  }\n\n  .input-container {\n    display: flex;\n  }\n}\n","import type { InputComponentInterface } from '../../interfaces';\n\nimport {\n  Component,\n  ComponentInterface,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\n\nimport { debounceEvent, getComponentIndex } from '../../utils';\n\n/**\n * @name Input URL\n * @description A specialized input field for URL validation.\n * @category Up coming\n * @tags input, form, url\n * @example <zane-input-url value=\"https://shivajivarma.com\"></zane-input-url>\n */\n@Component({\n  shadow: true,\n  styleUrl: 'input-url.scss',\n  tag: 'zane-input-url',\n})\nexport class InputUrl implements ComponentInterface, InputComponentInterface {\n  /**\n   * Set the amount of time, in milliseconds, to wait to trigger the `valueChange` event after each keystroke.\n   */\n  @Prop() debounce = 300;\n\n  /**\n   * If true, the user cannot interact with the input. Defaults to `false`.\n   */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  @Prop({ mutable: true, reflect: true }) editing: boolean = false;\n\n  @Element() elm!: HTMLElement;\n\n  @State() endSlotHasContent = false;\n\n  gid: string = getComponentIndex();\n\n  @State() hasFocus = false;\n\n  /**\n   * Emitted when the URL input is invalid.\n   */\n  @Event() inputInvalid: EventEmitter<boolean>;\n\n  @State() isValid = true;\n\n  /**\n   * The input field name.\n   */\n  @Prop() name: string = `zane-input-url-${this.gid}`;\n\n  /**\n   * The input field placeholder.\n   */\n  @Prop() placeholder: string;\n  /**\n   * The input field size.\n   * Possible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.\n   */\n  @Prop({ reflect: true }) size: 'lg' | 'md' | 'sm' = 'md';\n\n  @State() startSlotHasContent = false;\n  /**\n   * The input field value.\n   */\n  @Prop({ mutable: true }) value: string;\n  /**\n   * Emitted when a keyboard input occurred.\n   */\n  @Event() valueChange: EventEmitter<string>;\n  private nativeElement?: HTMLInputElement;\n\n  componentDidLoad() {\n    this.startSlotHasContent =\n      this.elm.querySelector('[slot=\"start\"]') !== null;\n    this.endSlotHasContent = this.elm.querySelector('[slot=\"end\"]') !== null;\n  }\n\n  componentWillLoad() {\n    this.debounceChanged();\n  }\n\n  /**\n   * Get the component's unique ID\n   */\n  @Method()\n  async getComponentId() {\n    return this.gid;\n  }\n\n  render() {\n    return (\n      <Host has-focus={this.hasFocus} invalid={!this.isValid}>\n        <div class=\"form-control\">\n          <div class=\"field\">{this.renderInput()}</div>\n          {this.renderHelper()}\n        </div>\n      </Host>\n    );\n  }\n\n  renderHelper() {\n    if (!this.isValid) {\n      return <div class=\"helper invalid\">Please enter a valid URL</div>;\n    }\n    return null;\n  }\n\n  renderInput() {\n    return (\n      <div class={{ editing: this.editing, 'url-input': true }}>\n        <div class={{ 'url-container': true }}>\n          <zane-link href={this.value} target=\"_blank\">\n            {this.value}\n          </zane-link>\n          <zane-button\n            icon=\"edit\"\n            onZane-button--click={() => {\n              this.#startEditing();\n            }}\n            size=\"sm\"\n            variant=\"ghost\"\n          ></zane-button>\n        </div>\n\n        <div\n          class={{\n            disabled: this.disabled,\n            'end-slot-has-content': this.endSlotHasContent,\n            'has-focus': this.hasFocus,\n            'input-container': true,\n            invalid: !this.isValid,\n            'start-slot-has-content': this.startSlotHasContent,\n          }}\n        >\n          <input\n            class=\"input input-native\"\n            disabled={this.disabled}\n            name={this.name}\n            onBlur={this.blurHandler}\n            onFocus={this.focusHandler}\n            onInput={(evt) => this.inputHandler(evt)}\n            placeholder={this.placeholder}\n            ref={(input) => (this.nativeElement = input)}\n            type=\"url\"\n            value={this.value}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Sets blur on the native `input`. Use this method instead of the global\n   * `input.blur()`.\n   */\n  @Method()\n  async setBlur() {\n    if (this.nativeElement) {\n      this.nativeElement.blur();\n      this.hasFocus = false;\n    }\n  }\n\n  /**\n   * Sets focus on the native `input`. Use this method instead of the global\n   * `input.focus()`.\n   */\n  @Method()\n  async setFocus() {\n    if (this.nativeElement) {\n      this.nativeElement.focus();\n      this.hasFocus = true;\n    }\n  }\n\n  @Watch('debounce')\n  protected debounceChanged() {\n    this.valueChange = debounceEvent(this.valueChange, this.debounce);\n  }\n\n  #closeEditing() {\n    this.isValid = this.validateUrl(this.value);\n    this.inputInvalid.emit(!this.isValid);\n\n    if (this.isValid) this.editing = false;\n  }\n\n  #startEditing() {\n    this.editing = true;\n    setTimeout(() => this.setFocus(), 80);\n  }\n\n  private blurHandler = () => {\n    this.hasFocus = false;\n\n    // Validate on blur for better user experience\n    this.#closeEditing();\n  };\n\n  private focusHandler = () => {\n    this.hasFocus = true;\n  };\n\n  private inputHandler = (ev: Event) => {\n    const input = ev.target as HTMLInputElement | null;\n    const oldValue = this.value;\n\n    if (input) {\n      this.value = input.value;\n    }\n\n    if (oldValue !== this.value) {\n      this.valueChange.emit(this.value);\n    }\n  };\n\n  /**\n   * Validate if the given string is a valid URL\n   */\n  private validateUrl(url: string): boolean {\n    if (!url) return true; // Empty value is considered valid (not invalid)\n\n    try {\n      // Use built-in URL constructor for validation\n      // eslint-disable-next-line no-new\n      new URL(url);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n}\n"],"names":[],"mappings":"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"}