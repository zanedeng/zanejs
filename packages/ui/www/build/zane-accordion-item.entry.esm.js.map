{"version":3,"file":"zane-accordion-item.entry.esm.js","sources":["src/components/accordion/accordion-item/accordion-item.scss?tag=zane-accordion-item&encapsulation=shadow","src/components/accordion/accordion-item/accordion-item.tsx"],"sourcesContent":["@use '../../../global/styles/commons';\n\n:host {\n  /**\n   * @prop --zane-accordion-item-heading-background - Background color of the accordion item header\n   */\n  --zane-accordion-item-heading-background: transparent;\n\n  /**\n   * @prop --zane-accordion-item-heading-background-hover - Background color of the accordion item header on hover\n   */\n  --zane-accordion-item-heading-background-hover: var(--layer-hover);\n\n  /**\n   * @prop --zane-accordion-item-title-align - Alignment of the accordion title\n   */\n  --zane-accordion-item-title-align: start;\n\n  display: block;\n}\n\n.accordion-item {\n  .accordion-heading {\n    display: flex;\n    flex-direction: row-reverse;\n    gap: 0.5rem;\n    align-items: center;\n    justify-content: flex-start;\n    width: 100%;\n    height: 2.5rem;\n    padding: 0 v(--spacing-05);\n    color: v(--text-primary);\n    cursor: pointer;\n    background: var(--zane-accordion-item-heading-background);\n    border: 0;\n    border-radius: 0;\n\n    @include commons.font-style(body);\n\n    .accordion-title {\n      width: 100%;\n      text-align: var(--zane-accordion-item-title-align);\n    }\n\n    svg {\n      flex: 0 0 1rem;\n    }\n\n    &:hover {\n      background: var(--zane-accordion-item-heading-background-hover);\n    }\n\n    &.has-focus {\n      @include commons.focus-ring;\n    }\n  }\n\n  .item-section {\n    height: 0;\n    text-align: start;\n    pointer-events: none;\n    background: var(--zane-accordion-item-heading-background);\n    opacity: 0;\n    transition: all 0.1s linear;\n  }\n\n  .accordion-icon {\n    transition: transform 0.1s linear;\n  }\n\n  &.open {\n    .item-section {\n      height: 100%;\n      padding: var(--spacing-03) var(--spacing-10) var(--spacing-06)\n        var(--spacing-05);\n      pointer-events: auto;\n      opacity: 1;\n    }\n\n    .accordion-icon {\n      transform: rotate(180deg);\n    }\n  }\n\n  &.disabled {\n    .accordion-heading {\n      color: var(--text-disabled);\n      cursor: not-allowed;\n\n      .accordion-icon {\n        color: var(--text-disabled);\n      }\n    }\n  }\n}\n\n:host-context([size='sm']) {\n  .accordion-item {\n    .accordion-heading {\n      height: 2rem;\n    }\n  }\n}\n\n:host-context([size='lg']) {\n  .accordion-item {\n    .accordion-heading {\n      height: 3rem;\n    }\n  }\n}\n\n:host-context(zane-accordion[align='start']) {\n  .accordion-item {\n    .accordion-heading {\n      flex-direction: row;\n    }\n  }\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  State,\n} from '@stencil/core';\n\nimport { getComponentIndex } from '../../../utils';\n\n/**\n * @name Accordion Item\n * @description An accordion item is single item in an accordion list. It contains a header and a content section that can be expanded or collapsed by the user.\n * @overview\n *  <p>The accordion item component is a single item in an accordion list. It contains a header and a content section that can be expanded or collapsed by the user. The accordion item can be used in conjunction with the accordion component to create a list of expandable items.</p>\n * @category Data Display\n * @subcategory Accordion\n * @childComponent true\n */\n@Component({\n  shadow: true,\n  styleUrl: 'accordion-item.scss',\n  tag: 'zane-accordion-item',\n})\nexport class AccordionItem {\n  /**\n   * If true, the user cannot interact with the button. Defaults to `false`.\n   */\n  @Prop() disabled: boolean = false;\n\n  @Element() elm!: HTMLElement;\n\n  @State() endSlotHasContent = false;\n\n  gid: string = getComponentIndex();\n\n  @State() hasFocus = false;\n\n  /**\n   * The menu item value.\n   */\n  @Prop() heading: string;\n\n  /**\n   * Menu item selection state.\n   */\n  @Prop({ mutable: true, reflect: true }) open: boolean = false;\n  @State() startSlotHasContent = false;\n\n  /**\n   * Emitted when the menu item is clicked.\n   */\n  @Event({ eventName: 'zane-accordion-item--click' })\n  zaneAccordionItemClick: EventEmitter;\n\n  render = () => {\n    return (\n      <Host open={this.open}>\n        <div\n          class={{\n            'accordion-item': true,\n            disabled: this.disabled,\n            open: this.open,\n          }}\n        >\n          <button\n            aria-controls={`accordion-control-${this.gid}`}\n            aria-disabled={`${this.disabled}`}\n            aria-expanded={`${this.open}`}\n            class={{ 'accordion-heading': true, 'has-focus': this.hasFocus }}\n            id={`accordion-heading-${this.gid}`}\n            on-click={() => {\n              if (!this.disabled) {\n                this.open = !this.open;\n                this.hasFocus = true;\n                this.zaneAccordionItemClick.emit({\n                  element: this.elm,\n                  gid: this.gid,\n                  open: this.open,\n                });\n              }\n            }}\n            onBlur={this.blurHandler}\n            onFocus={this.focusHandler}\n            type=\"button\"\n          >\n            <zane-icon\n              class=\"accordion-icon inherit\"\n              name=\"chevron--down\"\n              size=\"1rem\"\n            />\n            <div class=\"accordion-title\" part=\"title\">\n              <slot name=\"heading\">{this.heading}</slot>\n            </div>\n          </button>\n          <div\n            aria-labelledby={`accordion-heading-${this.gid}`}\n            class=\"item-section slot-main\"\n            id={`accordion-control-${this.gid}`}\n            role=\"region\"\n          >\n            <slot />\n          </div>\n        </div>\n      </Host>\n    );\n  };\n\n  private blurHandler = () => {\n    this.hasFocus = false;\n  };\n\n  private focusHandler = () => {\n    this.hasFocus = true;\n  };\n}\n"],"names":[],"mappings":";;;;;AAAA,MAAM,gBAAgB,GAAG,iyIAAiyI;;MC2B7yI,aAAa,GAAA,MAAA;AAL1B,IAAA,WAAA,CAAA,OAAA,EAAA;;;AAME;;AAEG;AACK,QAAA,IAAQ,CAAA,QAAA,GAAY,KAAK;AAIxB,QAAA,IAAiB,CAAA,iBAAA,GAAG,KAAK;AAElC,QAAA,IAAG,CAAA,GAAA,GAAW,iBAAiB,EAAE;AAExB,QAAA,IAAQ,CAAA,QAAA,GAAG,KAAK;AAOzB;;AAEG;AACqC,QAAA,IAAI,CAAA,IAAA,GAAY,KAAK;AACpD,QAAA,IAAmB,CAAA,mBAAA,GAAG,KAAK;AAQpC,QAAA,IAAM,CAAA,MAAA,GAAG,MAAK;AACZ,YAAA,QACE,EAAC,IAAI,EAAA,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAA,EACnB,CAAA,CAAA,KAAA,EAAA,EACE,KAAK,EAAE;AACL,oBAAA,gBAAgB,EAAE,IAAI;oBACtB,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,IAAI,EAAE,IAAI,CAAC,IAAI;iBAChB,EAAA,EAED,CAAA,CAAA,QAAA,EAAA,EAAA,eAAA,EACiB,CAAqB,kBAAA,EAAA,IAAI,CAAC,GAAG,EAAE,EAAA,eAAA,EAC/B,CAAA,EAAG,IAAI,CAAC,QAAQ,CAAA,CAAE,mBAClB,CAAA,EAAG,IAAI,CAAC,IAAI,CAAE,CAAA,EAC7B,KAAK,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,QAAQ,EAAE,EAChE,EAAE,EAAE,CAAA,kBAAA,EAAqB,IAAI,CAAC,GAAG,CAAA,CAAE,EAAA,UAAA,EACzB,MAAK;AACb,oBAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAClB,wBAAA,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI;AACtB,wBAAA,IAAI,CAAC,QAAQ,GAAG,IAAI;AACpB,wBAAA,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC;4BAC/B,OAAO,EAAE,IAAI,CAAC,GAAG;4BACjB,GAAG,EAAE,IAAI,CAAC,GAAG;4BACb,IAAI,EAAE,IAAI,CAAC,IAAI;AAChB,yBAAA,CAAC;;iBAEL,EACD,MAAM,EAAE,IAAI,CAAC,WAAW,EACxB,OAAO,EAAE,IAAI,CAAC,YAAY,EAC1B,IAAI,EAAC,QAAQ,EAAA,EAEb,CACE,CAAA,WAAA,EAAA,EAAA,KAAK,EAAC,wBAAwB,EAC9B,IAAI,EAAC,eAAe,EACpB,IAAI,EAAC,MAAM,EACX,CAAA,EACF,CAAA,CAAA,KAAA,EAAA,EAAK,KAAK,EAAC,iBAAiB,EAAC,IAAI,EAAC,OAAO,EAAA,EACvC,CAAM,CAAA,MAAA,EAAA,EAAA,IAAI,EAAC,SAAS,EAAA,EAAE,IAAI,CAAC,OAAO,CAAQ,CACtC,CACC,EACT,CACmB,CAAA,KAAA,EAAA,EAAA,iBAAA,EAAA,qBAAqB,IAAI,CAAC,GAAG,CAAA,CAAE,EAChD,KAAK,EAAC,wBAAwB,EAC9B,EAAE,EAAE,CAAqB,kBAAA,EAAA,IAAI,CAAC,GAAG,CAAA,CAAE,EACnC,IAAI,EAAC,QAAQ,EAAA,EAEb,CAAA,CAAA,MAAA,EAAA,IAAA,CAAQ,CACJ,CACF,CACD;AAEX,SAAC;AAEO,QAAA,IAAW,CAAA,WAAA,GAAG,MAAK;AACzB,YAAA,IAAI,CAAC,QAAQ,GAAG,KAAK;AACvB,SAAC;AAEO,QAAA,IAAY,CAAA,YAAA,GAAG,MAAK;AAC1B,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI;AACtB,SAAC;AACF;;;;;;;"}