{"version":3,"names":["sidenavMenuCss","SidenavMenu","constructor","hostRef","this","empty","emptyState","showLoader","componentWillLoad","parseEmptyState","handleKeyDown","evt","path","composedPath","menuItem","elm","tagName","key","preventDefault","focusNextItem","focusPreviousItem","internalEmptyState","JSON","parse","render","h","class","renderEmptyState","setFocus","firstMenuItem","getFirstItem","currentItem","nextItem","nextElementSibling","disabled","querySelector","previousItem","previousElementSibling","slot","title","description"],"sources":["src/components/application/sidenav/sidenav-menu/sidenav-menu.scss?tag=zane-sidenav-menu&encapsulation=shadow","src/components/application/sidenav/sidenav-menu/sidenav-menu.tsx"],"sourcesContent":["@use '../../../../global/styles/commons';\n\n:host {\n  --list-border-radius: var(--border-radius);\n  --zane-menu-max-height: inherit;\n\n  display: inline-block;\n}\n\n.menu {\n  box-sizing: border-box;\n  padding: var(--spacing-02) 0;\n  background-color: var(--field-02);\n  border: 1px solid commons.v(--color-neutral-200);\n  border-radius: var(--list-border-radius);\n  box-shadow: var(--shadow-sm);\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  h,\n  Listen,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\n\n/**\n * 侧边导航菜单组件\n *\n * @Component 装饰器定义组件元数据\n * @shadow 启用Shadow DOM封装\n * @styleUrl 指定组件样式文件\n * @tag 定义组件在HTML中的标签名\n */\n@Component({\n  shadow: true,\n  styleUrl: 'sidenav-menu.scss',\n  tag: 'zane-sidenav-menu',\n})\nexport class SidenavMenu implements ComponentInterface {\n  /**\n   * 获取组件宿主元素引用\n   * @type {HTMLElement}\n   */\n  @Element() elm!: HTMLElement;\n\n  /**\n   * 是否显示空状态\n   * @type {boolean}\n   * @default false\n   * @mutable 可变的\n   */\n  @Prop({ mutable: true }) empty: boolean = false;\n\n  /**\n   * 空状态配置(JSON字符串格式)\n   * @type {string}\n   * @default '{\"headline\": \"No items\", \"description\": \"There are no items to display\"}'\n   * @mutable 可变的\n   */\n  @Prop({ mutable: true }) emptyState: any = `{\n    \"headline\": \"No items\",\n    \"description\": \"There are no items to display\"\n  }`;\n\n  /**\n   * 内部解析后的空状态对象\n   * @type {{description: string; title: string}}\n   * @State 组件内部状态\n   */\n  @State()\n  internalEmptyState: { description: string; title: string };\n\n  /**\n   * 是否显示加载指示器\n   * @type {boolean}\n   * @default false\n   */\n  @Prop() showLoader: boolean = false;\n\n  /**\n   * 组件值，可以是数字或字符串\n   * @type {number|string}\n   * @mutable 可变的\n   */\n  @Prop({ mutable: true }) value?: number | string;\n\n  /**\n   * 组件加载前生命周期钩子\n   * 用于初始化空状态\n   */\n  componentWillLoad() {\n    this.parseEmptyState();\n  }\n\n  /**\n   * 监听全局键盘事件\n   * @param {KeyboardEvent} evt - 键盘事件对象\n   * @Listen 装饰器监听window的keydown事件\n   */\n  @Listen('keydown', { target: 'window' })\n  handleKeyDown(evt: KeyboardEvent) {\n    const path = evt.composedPath();\n    let menuItem = null;\n    for (const elm of path) {\n      if ((elm as any).tagName === 'ZANE-MENU-ITEM') {\n        menuItem = elm;\n      }\n      if (elm !== this.elm) continue;\n      if (evt.key === 'ArrowDown') {\n        evt.preventDefault();\n        this.focusNextItem(menuItem);\n      } else if (evt.key === 'ArrowUp') {\n        evt.preventDefault();\n        this.focusPreviousItem(menuItem);\n      }\n    }\n  }\n\n  /**\n   * 解析空状态JSON字符串\n   * @Watch 监听emptyState属性变化\n   */\n  @Watch('emptyState')\n  parseEmptyState() {\n    this.internalEmptyState = this.emptyState\n      ? JSON.parse(this.emptyState)\n      : this.emptyState;\n  }\n\n  /**\n   * 渲染组件\n   * @returns {JSX.Element} 组件JSX结构\n   */\n  render() {\n    return (\n      <div class=\"menu\">\n        <slot />\n        {this.renderEmptyState()}\n      </div>\n    );\n  }\n\n  /**\n   * 公开方法：设置焦点到第一个菜单项\n   * @Method 装饰器定义公共API方法\n   * @returns {Promise<void>}\n   */\n  @Method()\n  async setFocus() {\n    const firstMenuItem = this.getFirstItem();\n    firstMenuItem?.setFocus();\n  }\n\n  /**\n   * 聚焦下一个菜单项\n   * @private 私有方法\n   * @param {HTMLElement} currentItem - 当前菜单项元素\n   */\n  private focusNextItem(currentItem) {\n    let nextItem: any = currentItem.nextElementSibling;\n    do {\n      if (\n        nextItem &&\n        nextItem.tagName === 'ZANE-MENU-ITEM' &&\n        !nextItem.disabled\n      ) {\n        nextItem.setFocus();\n        return;\n      }\n      nextItem = nextItem\n        ? nextItem.nextElementSibling\n        : this.elm.querySelector('zane-menu-item');\n    } while (nextItem !== currentItem);\n  }\n\n  /**\n   * 聚焦上一个菜单项\n   * @private 私有方法\n   * @param {HTMLElement} currentItem - 当前菜单项元素\n   */\n  private focusPreviousItem(currentItem) {\n    let previousItem: any = currentItem.previousElementSibling;\n    do {\n      if (\n        previousItem &&\n        previousItem.tagName === 'ZANE-MENU-ITEM' &&\n        !previousItem.disabled\n      ) {\n        previousItem.setFocus();\n        return;\n      }\n      previousItem = previousItem\n        ? previousItem.previousElementSibling\n        : this.elm.querySelector('zane-menu-item:last-child');\n    } while (previousItem !== currentItem);\n  }\n\n  /**\n   * 获取第一个菜单项\n   * @private 私有方法\n   * @returns {HTMLElement|null} 第一个菜单项元素或null\n   */\n  private getFirstItem() {\n    return this.elm.querySelector('zane-menu-item');\n  }\n\n  /**\n   * 渲染空状态\n   * @private 私有方法\n   * @returns {JSX.Element|null} 空状态JSX或null\n   */\n  private renderEmptyState() {\n    if (this.empty)\n      return (\n        <zane-empty-state class=\"empty-menu\">\n          <div slot=\"title\">{this.internalEmptyState.title}</div>\n          <div slot=\"description\">{this.internalEmptyState.description}</div>\n        </zane-empty-state>\n      );\n  }\n}\n"],"mappings":"kDAAA,MAAMA,EAAiB,wgG,MCyBVC,EAAW,MALxB,WAAAC,CAAAC,G,UAkB2BC,KAAKC,MAAY,MAQjBD,KAAAE,WAAkB,0FAkBnCF,KAAUG,WAAY,KA+I/B,CAlIC,iBAAAC,GACEJ,KAAKK,iB,CASP,aAAAC,CAAcC,GACZ,MAAMC,EAAOD,EAAIE,eACjB,IAAIC,EAAW,KACf,IAAK,MAAMC,KAAOH,EAAM,CACtB,GAAKG,EAAYC,UAAY,iBAAkB,CAC7CF,EAAWC,C,CAEb,GAAIA,IAAQX,KAAKW,IAAK,SACtB,GAAIJ,EAAIM,MAAQ,YAAa,CAC3BN,EAAIO,iBACJd,KAAKe,cAAcL,E,MACd,GAAIH,EAAIM,MAAQ,UAAW,CAChCN,EAAIO,iBACJd,KAAKgB,kBAAkBN,E,GAU7B,eAAAL,GACEL,KAAKiB,mBAAqBjB,KAAKE,WAC3BgB,KAAKC,MAAMnB,KAAKE,YAChBF,KAAKE,U,CAOX,MAAAkB,GACE,OACEC,EAAA,OAAAR,IAAA,2CAAKS,MAAM,QACTD,EAAQ,QAAAR,IAAA,6CACPb,KAAKuB,mB,CAWZ,cAAMC,GACJ,MAAMC,EAAgBzB,KAAK0B,eAC3BD,IAAa,MAAbA,SAAa,SAAbA,EAAeD,U,CAQT,aAAAT,CAAcY,GACpB,IAAIC,EAAgBD,EAAYE,mBAChC,EAAG,CACD,GACED,GACAA,EAAShB,UAAY,mBACpBgB,EAASE,SACV,CACAF,EAASJ,WACT,M,CAEFI,EAAWA,EACPA,EAASC,mBACT7B,KAAKW,IAAIoB,cAAc,iBAC7B,OAASH,IAAaD,E,CAQhB,iBAAAX,CAAkBW,GACxB,IAAIK,EAAoBL,EAAYM,uBACpC,EAAG,CACD,GACED,GACAA,EAAapB,UAAY,mBACxBoB,EAAaF,SACd,CACAE,EAAaR,WACb,M,CAEFQ,EAAeA,EACXA,EAAaC,uBACbjC,KAAKW,IAAIoB,cAAc,4BAC7B,OAASC,IAAiBL,E,CAQpB,YAAAD,GACN,OAAO1B,KAAKW,IAAIoB,cAAc,iB,CAQxB,gBAAAR,GACN,GAAIvB,KAAKC,MACP,OACEoB,EAAA,oBAAkBC,MAAM,cACtBD,EAAK,OAAAa,KAAK,SAASlC,KAAKiB,mBAAmBkB,OAC3Cd,EAAA,OAAKa,KAAK,eAAelC,KAAKiB,mBAAmBmB,a","ignoreList":[]}