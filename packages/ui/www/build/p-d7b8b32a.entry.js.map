{"version":3,"names":["checkboxCss","Checkbox","constructor","hostRef","this","configAria","disabled","gid","getComponentIndex","hasFocus","intermediate","isActive","name","readonly","required","rounded","size","slotHasContent","value","tabindex","blurHandler","ev","zaneBlur","emit","clickHandler","JSON","parse","nativeElement","zaneChange","iconContainer","focus","focusHandler","zaneFocus","keyDownHandler","evt","key","preventDefault","mouseDownHandler","componentWillLoad","elm","hasAttribute","getAttribute","undefined","removeAttribute","getAttributeNames","forEach","includes","hasChildNodes","getComponentId","render","h","Host","active","class","checkbox","Object","assign","onBlur","onFocus","onKeyDown","onKeyUp","keyCode","onMouseDown","ref","role","checked","onClick","type","label","setBlur","blur","setFocus","windowKeyUp","windowMouseUp","selectCss","Select","placements","_fixPosition","throttle","callBack","positions","split","placement","fallbackPlacements","splice","dropdownContent","shadowRoot","querySelector","menuElm","getMenuElement","computePosition","middleware","offset","apply","availableHeight","remToPx","style","setProperty","padding","flip","then","x","y","left","top","leading","trailing","clearable","debounce","endSlotHasContent","hideDropdownIcon","index","inline","invalid","items","multiple","open","search","searchString","showLoader","startSlotHasContent","state","warn","clearInput","removeItem","closeList","setTimeout","toggleList","zaneSearchEnter","currentItems","filterItems","onInput","input","target","zaneSearch","openList","selectHandler","selectItemValue","toggleItem","addItem","componentDidUpdate","connectedCallback","debounceChanged","fixPosition","menuItemClick","detail","openSelectList","hasValue","position","dropdown","select","classList","contains","renderMultiSelectValues","placeholder","displayElement","getDisplayValue","color","icon","variant","getModeIcon","renderDropdownList","values","getValues","length","map","item","getItemByValue","dismissible","_a","toString","resizeHandler","tagDismissClick","windowClick","path","composedPath","debounceEvent","push","join","newItem","containsValue","filter","toLocaleLowerCase","find","removedItem","layer","el","filteredItems","empty","slot"],"sources":["src/components/checkbox/checkbox.scss?tag=zane-checkbox&encapsulation=shadow","src/components/checkbox/checkbox.tsx","src/components/select/select.scss?tag=zane-select&encapsulation=shadow","src/components/select/select.tsx"],"sourcesContent":["@use '../../global/styles/commons';\n\n:host {\n  --checkbox-size: 1rem;\n\n  display: inline-block;\n  color: commons.v(--text-primary);\n}\n\n.checkbox {\n  position: relative;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  @include commons.font-style(body-compact-01);\n\n  &.has-content {\n    gap: commons.v(--spacing-03);\n  }\n\n  .input-native {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    border: 0;\n    clip: rect(0, 0, 0, 0);\n  }\n\n  .box {\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--input-background-color, var(--field));\n    border: 1px solid commons.v(--icon-primary);\n    border-radius: 2px;\n\n    &::before {\n      box-sizing: border-box;\n      display: block;\n      width: 100%;\n      height: 100%;\n      pointer-events: none;\n      content: '';\n      border: 1px solid transparent;\n      border-radius: 2px;\n    }\n  }\n\n  &.rounded {\n    .box {\n      border-radius: 50%;\n\n      &::before {\n        border-radius: 50%;\n      }\n    }\n  }\n\n  .tick {\n    position: absolute;\n    width: 0;\n    height: 0;\n  }\n\n  &.has-focus:not(.active) {\n    .box {\n      border-color: transparent;\n\n      @include commons.focus-ring;\n    }\n\n    &:not(.state-checked) .box::before {\n      border-color: commons.v(--icon-01);\n    }\n  }\n\n  .label {\n    color: commons.v(--text-primary);\n  }\n}\n\n.checkbox.state-checked {\n  .box {\n    background: commons.v(--icon-primary);\n    border-color: transparent;\n  }\n\n  .tick {\n    top: -15%;\n    left: 15%;\n    width: 33%;\n    height: 67%;\n    border-right: 2px solid commons.v(--icon-inverse);\n    border-bottom: 2px solid commons.v(--icon-inverse);\n    transform: rotate(45deg);\n    transform-origin: 0 100%;\n  }\n\n  &.active .box {\n    border-color: commons.v(--color-white);\n  }\n\n  &.has-focus:not(.active) {\n    .box {\n      border-color: commons.v(--color-white);\n\n      @include commons.focus-ring;\n    }\n  }\n}\n\n.checkbox.state-intermediate {\n  .box {\n    background: commons.v(--icon-primary);\n    border-color: transparent;\n  }\n\n  .tick {\n    width: 67%;\n    height: 0;\n    margin: auto;\n    border-right: 2px solid commons.v(--icon-inverse);\n    border-bottom: 2px solid commons.v(--icon-inverse);\n    transform-origin: 0 100%;\n  }\n\n  &.active .box {\n    border-color: commons.v(--color-white);\n  }\n\n  &.has-focus:not(.active) {\n    .box {\n      border-color: commons.v(--color-white);\n\n      @include commons.focus-ring;\n    }\n  }\n}\n\n/**\n * SIZES\n */\n.checkbox.size-md {\n  .box {\n    width: var(--checkbox-size);\n    height: var(--checkbox-size);\n  }\n}\n\n.checkbox.size-lg {\n  .box {\n    width: 1.5rem;\n    height: 1.5rem;\n  }\n}\n\n/**\n * States\n */\n@each $state in [success, warning, error] {\n  :host-context(.input-state-#{$state}) {\n    .checkbox .box {\n      border-color: commons.v(--color-#{$state});\n    }\n  }\n}\n\n.checkbox.readonly {\n  color: commons.v(--text-primary) !important;\n  cursor: default;\n  border-color: commons.v(--text-disabled) !important;\n\n  &.state-checked .box {\n    background: var(--text-disabled) !important;\n  }\n\n  .box {\n    border: 1px solid var(--text-disabled) !important;\n  }\n\n  .tick {\n    border-color: var(--disabled-01) !important;\n  }\n}\n\n.checkbox.disabled {\n  color: var(--text-disabled) !important;\n  cursor: not-allowed;\n  border-color: var(--text-disabled) !important;\n\n  &.state-checked .box {\n    background: var(--text-disabled) !important;\n  }\n\n  .box {\n    border: 1px solid var(--text-disabled) !important;\n  }\n\n  .tick {\n    border-color: var(--disabled-01) !important;\n  }\n}\n","import type { InputComponentInterface } from '../../interfaces';\n\nimport {\n  Component,\n  ComponentInterface,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n} from '@stencil/core';\n\nimport { getComponentIndex } from '../../utils';\n\n/**\n * 自定义复选框组件\n *\n * 实现可定制的复选框控件，支持选中/未选/中间态三种状态，\n * 提供完整的ARIA支持、键盘交互和事件响应机制。\n *\n * @example\n * ```html\n * <zane-checkbox\n *   label=\"同意协议\"\n *   size=\"md\"\n *   layer=\"02\"\n *   rounded\n *   required\n * ></zane-checkbox>\n * ```\n */\n@Component({\n  shadow: true,\n  styleUrl: 'checkbox.scss',\n  tag: 'zane-checkbox',\n})\nexport class Checkbox implements ComponentInterface, InputComponentInterface {\n  /**\n   * ARIA属性配置对象\n   *\n   * 用于动态设置ARIA属性（如aria-label, aria-describedby等），\n   * 组件会自动收集元素上所有`aria-*`属性到该对象。\n   *\n   * @defaultValue `{}`\n   */\n  @Prop({ mutable: true, reflect: true }) configAria: any = {};\n\n  /**\n   * 禁用状态\n   *\n   * 当设置为`true`时，组件不可交互且视觉上变灰\n   *\n   * @defaultValue `false`\n   */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  /** 宿主元素实例 */\n  @Element() elm!: HTMLElement;\n\n  /** 组件唯一ID（自动生成） */\n  gid: string = getComponentIndex();\n\n  /** 焦点状态（内部使用） */\n  @State() hasFocus = false;\n\n  /**\n   * 中间态状态\n   *\n   * 当设置为`true`时显示\"-\"图标，表示部分选中状态，\n   * 与`value`属性互斥（中间态时`value`应为false）\n   *\n   * @defaultValue `false`\n   */\n  @Prop({ mutable: true }) intermediate: boolean = false;\n\n  /** 激活状态（按下鼠标/空格键时） */\n  @State() isActive = false;\n\n  /** 复选框标签文本 */\n  @Prop() label: string;\n\n  /**\n   * 视觉层级\n   *\n   * 控制组件在UI中的层级深度，影响阴影和背景色：\n   * - `01`: 表层组件（最高层级）\n   * - `02`: 中层组件\n   * - `background`: 背景层组件（最低层级）\n   */\n  @Prop({ reflect: true }) layer?: '01' | '02' | 'background';\n\n  /** 表单字段名（自动生成） */\n  @Prop() name: string = `zane-input-${this.gid}`;\n\n  /** 只读状态 */\n  @Prop({ reflect: true }) readonly: boolean = false;\n\n  /** 必填状态 */\n  @Prop({ reflect: true }) required: boolean = false;\n\n  /** 圆角样式 */\n  @Prop() rounded: boolean = false;\n\n  /**\n   * 尺寸规格\n   *\n   * - `lg`: 大尺寸(48px)\n   * - `md`: 中尺寸(40px)\n   * - `sm`: 小尺寸(32px)\n   *\n   * @defaultValue `'md'`\n   */\n  @Prop() size: 'lg' | 'md' | 'sm' = 'md';\n\n  /** 是否存在插槽内容 */\n  @State() slotHasContent = false;\n\n  /**\n   * 选中状态\n   *\n   * 当设置为`true`时显示选中图标，\n   * 与`intermediate`属性互斥\n   *\n   * @defaultValue `false`\n   */\n  @Prop({ mutable: true }) value: boolean = false;\n\n  /** 失去焦点事件 */\n  @Event({ eventName: 'zane-checkbox--blur' }) zaneBlur: EventEmitter;\n\n  /** 值变更事件 */\n  @Event({ eventName: 'zane-checkbox--change' }) zaneChange: EventEmitter;\n\n  /** 获得焦点事件 */\n  @Event({ eventName: 'zane-checkbox--focus' }) zaneFocus: EventEmitter;\n\n  /** 图标容器元素引用 */\n  private iconContainer?: HTMLElement;\n\n  /** 原生input元素引用 */\n  private nativeElement?: HTMLInputElement;\n\n  /** 自定义tabindex值 */\n  private tabindex?: number | string = 1;\n\n  /**\n   * 组件加载前生命周期\n   *\n   * 1. 处理宿主元素上的tabindex属性\n   * 2. 收集所有ARIA属性到configAria对象\n   * 3. 检测是否存在插槽内容\n   */\n  componentWillLoad() {\n    if (this.elm.hasAttribute('tabindex')) {\n      const tabindex = this.elm.getAttribute('tabindex');\n      this.tabindex = tabindex === null ? undefined : tabindex;\n      this.elm.removeAttribute('tabindex');\n    }\n    this.elm.getAttributeNames().forEach((name: string) => {\n      if (name.includes('aria-')) {\n        this.configAria[name] = this.elm.getAttribute(name);\n        this.elm.removeAttribute(name);\n      }\n    });\n    this.slotHasContent = this.elm.hasChildNodes();\n  }\n\n  /**\n   * 获取组件ID\n   *\n   * @returns 组件唯一标识符\n   */\n  @Method()\n  async getComponentId() {\n    return this.gid;\n  }\n\n  /**\n   * 渲染函数\n   *\n   * 生成复选框的DOM结构，包含：\n   * 1. 可视化的复选框图标\n   * 2. 隐藏的原生input元素\n   * 3. 标签区域（支持文本或插槽）\n   */\n  render() {\n    return (\n      <Host active={this.isActive} has-focus={this.hasFocus}>\n        <label\n          class={{\n            [`size-${this.size}`]: true,\n            active: this.isActive,\n            checkbox: true,\n            disabled: this.disabled,\n            'has-content': this.slotHasContent,\n            'has-focus': this.hasFocus,\n            readonly: this.readonly,\n            required: this.required,\n            rounded: this.rounded,\n            'state-checked': this.value,\n            'state-intermediate': !this.value && this.intermediate,\n          }}\n        >\n          <div\n            aria-checked={`${this.value}`}\n            aria-disabled={`${this.disabled}`}\n            aria-required={`${this.required}`}\n            class=\"box\"\n            onBlur={this.blurHandler}\n            onFocus={this.focusHandler}\n            onKeyDown={this.keyDownHandler}\n            onKeyUp={(evt) => {\n              if (evt.keyCode === 13) {\n                this.clickHandler(evt);\n              }\n            }}\n            onMouseDown={this.mouseDownHandler}\n            ref={(elm) => (this.iconContainer = elm)}\n            role=\"checkbox\"\n            tabindex={this.tabindex}\n            {...this.configAria}\n          >\n            <div class=\"tick\" />\n          </div>\n\n          <input\n            aria-hidden=\"true\"\n            checked={this.value}\n            class=\"input-native\"\n            name={this.name}\n            onClick={this.clickHandler}\n            ref={(elm) => (this.nativeElement = elm)}\n            required={this.required}\n            tabindex=\"-1\"\n            type=\"checkbox\"\n            value={`${this.value}`}\n          />\n\n          {(() => {\n            return this.label ? (\n              <div class=\"label\">{this.label}</div>\n            ) : (\n              <div class=\"label slot-container\">\n                <slot />\n              </div>\n            );\n          })()}\n        </label>\n      </Host>\n    );\n  }\n\n  /**\n   * 移除焦点\n   */\n  @Method()\n  async setBlur() {\n    if (this.nativeElement) {\n      this.nativeElement.blur();\n    }\n  }\n\n  /**\n   * 设置焦点\n   */\n  @Method()\n  async setFocus() {\n    if (this.nativeElement) {\n      this.nativeElement.focus();\n    }\n  }\n\n  /** 全局空格键释放监听 */\n  @Listen('keyup', { target: 'window' })\n  windowKeyUp(evt) {\n    if (this.isActive && evt.key === ' ') this.isActive = false;\n  }\n\n  /** 全局鼠标释放监听 */\n  @Listen('mouseup', { target: 'window' })\n  windowMouseUp() {\n    if (this.isActive) this.isActive = false;\n  }\n\n  /** 失去焦点处理 */\n  private blurHandler = (ev: FocusEvent) => {\n    this.hasFocus = false;\n    this.zaneBlur.emit(ev);\n  };\n\n  /** 点击/Enter键处理 */\n  private clickHandler = (ev: KeyboardEvent | MouseEvent) => {\n    if (!this.disabled && !this.readonly) {\n      this.value = !JSON.parse(this.nativeElement.value);\n      this.intermediate = false;\n      this.zaneChange.emit(ev);\n      this.iconContainer.focus();\n    }\n  };\n\n  /** 获得焦点处理 */\n  private focusHandler = (ev: FocusEvent) => {\n    this.hasFocus = true;\n    this.zaneFocus.emit(ev);\n  };\n\n  /** 空格键按下处理 */\n  private keyDownHandler = (evt) => {\n    if (evt.key === ' ') {\n      evt.preventDefault();\n      this.isActive = true;\n      this.clickHandler(evt);\n    }\n  };\n\n  /** 鼠标按下处理 */\n  private mouseDownHandler = () => {\n    this.isActive = true;\n  };\n}\n","@use '../../global/styles/common-input';\n\n.dropdown {\n  position: relative;\n\n  .dropdown-content {\n    position: absolute;\n    z-index: common-input.v(--z-index-dropdown-content);\n    width: max-content;\n    max-height: 300px;\n    line-height: 0;\n    transform: scale(0);\n    transition: transform 0.1s ease-out 0s;\n  }\n\n  .chevron-down {\n    padding: 0 0.625rem;\n    cursor: pointer;\n    transition: transform 0.1s ease-out 0s;\n  }\n\n  .loader {\n    padding: 0 0.625rem;\n  }\n\n  &.open {\n    .dropdown-content {\n      transform: scale(1);\n    }\n\n    .chevron-down {\n      transform: rotate(180deg);\n    }\n  }\n\n  &.bottom-right .dropdown-content {\n    top: calc(100% + #{common-input.v(--spacing-02)});\n    left: 0;\n    transform-origin: top;\n  }\n\n  &.bottom-left .dropdown-content {\n    top: calc(100% + #{common-input.v(--spacing-02)});\n    right: 0;\n    transform-origin: top;\n  }\n\n  &.top-right .dropdown-content {\n    bottom: calc(100% + #{common-input.v(--spacing-02)});\n    left: 0;\n    transform-origin: bottom;\n  }\n\n  &.top-left .dropdown-content {\n    right: 0;\n    bottom: calc(100% + #{common-input.v(--spacing-02)});\n    transform-origin: bottom;\n  }\n\n  &.search-none.center .dropdown-content {\n    position: fixed;\n    top: 0;\n    left: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100vw;\n    height: 100vh;\n    max-height: 100%;\n    padding: 0 1rem;\n    pointer-events: none;\n    background: rgb(0 0 0 / 50%);\n    transform-origin: center;\n  }\n}\n\n.select {\n  .input-container {\n    .value-container {\n      display: flex;\n      flex: 1;\n      flex-wrap: wrap;\n      column-gap: common-input.v(--spacing-03);\n      height: 100%;\n      overflow: hidden;\n    }\n  }\n\n  .input-container.start-slot-has-content {\n    .value-container {\n      padding-inline-start: 0.5rem;\n\n      .input {\n        padding-inline-start: 0;\n      }\n    }\n  }\n\n  .dropdown-content {\n    width: 100%;\n    min-width: 10rem;\n  }\n\n  .selected-items {\n    padding: 0.5rem;\n    margin-bottom: 0.5rem;\n    background: common-input.v(--background);\n    border: 1px solid var(--border-strong);\n    border-radius: common-input.v(--border-radius);\n    box-shadow: common-input.v(--shadow-sm);\n  }\n\n  .menu {\n    --zane-menu-max-height: 20rem;\n\n    width: 100%;\n\n    .slot-container-start {\n      display: flex;\n      gap: 0.5rem;\n      align-items: center;\n    }\n  }\n\n  .display-value {\n    display: flex;\n    align-items: center;\n    height: 100%;\n    padding-inline: common-input.v(--spacing-05);\n    color: common-input.v(--text-placeholder);\n    cursor: pointer;\n  }\n\n  .display-value-container {\n    display: flex;\n    gap: common-input.v(--spacing-02);\n    align-items: center;\n\n    .item-label {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n  }\n\n  &:not(.multiple) .input-container.has-value {\n    .display-value {\n      color: common-input.v(--text-primary);\n    }\n  }\n\n  .start-search {\n    display: flex;\n    flex-direction: column;\n    gap: var(--spacing-03);\n    align-items: center;\n    justify-content: center;\n    height: 10rem;\n  }\n\n  .text-secondary {\n    color: var(--text-secondary);\n  }\n\n  .toggle-icon {\n    display: flex;\n    align-items: center;\n    align-self: stretch;\n  }\n\n  &.multiple {\n    padding: 0.5rem 0;\n\n    .value-container {\n      padding-inline: var(--spacing-05);\n    }\n\n    .input {\n      padding-block: var(--spacing-03);\n      padding-inline: 0;\n    }\n\n    .input-native {\n      min-width: 6rem;\n    }\n\n    .multi-select-value {\n      padding-block: var(--spacing-03);\n    }\n  }\n}\n\n:host([size='sm']) .multiple :is(.input-container, .input-container-skeleton) {\n  height: auto;\n  min-height: var(--input-height, 2rem);\n}\n\n:host([size='md']) .multiple :is(.input-container, .input-container-skeleton) {\n  height: auto;\n  min-height: var(--input-height, 2.5rem);\n}\n\n:host([size='lg']) .multiple :is(.input-container, .input-container-skeleton) {\n  height: auto;\n  min-height: var(--input-height, 3rem);\n}\n","import type { InputComponentInterface } from '../../interfaces';\n\nimport { computePosition, flip, offset, size } from '@floating-ui/dom';\nimport {\n  Component,\n  ComponentInterface,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { throttle } from 'lodash';\n\nimport { debounceEvent, getComponentIndex, remToPx } from '../../utils';\n\n/**\n * 基于 Floating UI 的增强型下拉选择组件\n *\n * @component\n * @tag zane-select\n * @implements {ComponentInterface, InputComponentInterface}\n *\n * @example\n * <!-- 基础用法 -->\n * <zane-select\n *   items={[{label: '选项1', value: 1}]}\n *   placeholder=\"请选择\"\n *   size=\"md\"\n * />\n */\n@Component({\n  shadow: true,\n  styleUrl: 'select.scss',\n  tag: 'zane-select',\n})\nexport class Select implements ComponentInterface, InputComponentInterface {\n  @Element() elm!: HTMLElement;\n\n  /**\n   * 下拉菜单定位策略配置\n   * @type {string}\n   * @default 'bottom-start,top-start,bottom-end,top-end'\n   * @example\n   * placements=\"top,right-start\" // 优先尝试顶部对齐，次选右侧对齐\n   *\n   * 格式说明：\n   * - 使用逗号分隔的定位字符串\n   * - 每个定位字符串格式为[方向]-[对齐方式]\n   * - 方向选项：top | right | bottom | left\n   * - 对齐方式：start | end\n   */\n  @Prop() placements: string = 'bottom-start,top-start,bottom-end,top-end';\n\n  _fixPosition = throttle(\n    (callBack) => {\n      const positions = this.placements.split(',');\n      const placement: any = positions[0];\n      const fallbackPlacements: any = positions.splice(1);\n      const dropdownContent: any =\n        this.elm.shadowRoot.querySelector('.dropdown-content');\n      const menuElm: any = this.getMenuElement();\n\n      computePosition(\n        this.elm.shadowRoot.querySelector('.input-container'),\n        dropdownContent,\n        {\n          middleware: [\n            offset(10),\n            size({\n              apply({ availableHeight }) {\n                if (availableHeight < remToPx(10)) return;\n                menuElm?.style.setProperty(\n                  '--zane-menu-max-height',\n                  `${availableHeight}px`,\n                );\n              },\n              padding: 5,\n            }),\n            flip({\n              fallbackPlacements,\n            }),\n          ],\n          placement,\n        },\n      ).then(({ x, y }) => {\n        Object.assign(dropdownContent.style, {\n          left: `${x}px`,\n          top: `${y}px`,\n        });\n        if (callBack) callBack();\n      });\n    },\n    80,\n    {\n      leading: true,\n      trailing: false,\n    },\n  );\n\n  /**\n   * 是否显示清除按钮\n   * @type {boolean}\n   * @default false\n   */\n  @Prop() clearable: boolean = false;\n\n  /**\n   * ARIA属性配置对象\n   * @type {Object}\n   * @mutable\n   * @example\n   * configAria={{ 'aria-labelledby': 'custom-label' }}\n   *\n   * 支持动态配置以下属性：\n   * - aria-label：定义组件的语义标签\n   * - aria-labelledby：关联可见标签元素\n   * - aria-describedby：关联描述元素\n   */\n  @Prop({ mutable: true, reflect: true }) configAria: any = {};\n\n  /**\n   * 搜索输入防抖时间（毫秒）\n   * @type {number}\n   * @default 300\n   */\n  @Prop() debounce = 300;\n\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  @State() endSlotHasContent = false;\n\n  gid: string = getComponentIndex();\n\n  @State() hasFocus = false;\n\n  @Prop() helperText: string;\n\n  @Prop() hideDropdownIcon: boolean = false;\n\n  index = 0;\n\n  @Prop({ reflect: true }) inline: boolean = false;\n\n  @Prop() invalid: boolean = false;\n\n  @Prop() invalidText: string;\n\n  @Prop() items: {\n    icon?: string;\n    label: number | string;\n    value: number | string;\n  }[] = [];\n\n  @Prop() label: string;\n\n  /**\n   * 视觉层级配置\n   * @type {'01' | '02' | 'background'}\n   * @example\n   * layer=\"02\" // 使用第二层级的阴影和背景\n   *\n   * 层级说明：\n   * - 01：基础层级（默认），适用于常规布局\n   * - 02：更高层级，适合悬浮卡片效果\n   * - background：背景层级，适合非交互元素\n   */\n  @Prop({ reflect: true }) layer?: '01' | '02' | 'background';\n\n  @Prop() multiple: boolean = false;\n\n  @Prop() name: string = `zane-input-${this.gid}`;\n\n  @Prop({ mutable: true, reflect: true }) open: boolean = false;\n\n  @Prop() placeholder: string;\n\n  @State() position: string;\n\n  @Prop({ reflect: true }) readonly: boolean = false;\n\n  @Prop({ reflect: true }) required: boolean = false;\n\n  /**\n   * 搜索模式配置\n   * @type {'contains' | 'initial' | 'managed' | 'none'}\n   * @default 'none'\n   * @example\n   * search=\"contains\" // 实时子字符串匹配\n   *\n   * 模式说明：\n   * - none：禁用搜索功能\n   * - contains：根据输入内容进行子字符串匹配过滤\n   * - initial：仅在打开菜单时执行初始过滤\n   * - managed：由父组件完全控制搜索逻辑\n   */\n  @Prop() search: 'contains' | 'initial' | 'managed' | 'none' = 'none';\n\n  @State() searchString: string = '';\n\n  @Prop() showLoader: boolean = false;\n\n  /**\n   * 组件尺寸选项\n   * @type {'lg' | 'md' | 'sm'}\n   * @default 'md'\n   * @example\n   * size=\"sm\" // 小尺寸样式\n   *\n   * 具体尺寸对应关系：\n   * - sm：高度32px，适合紧凑布局\n   * - md：高度40px，标准尺寸\n   * - lg：高度48px，强调视觉重点\n   */\n  @Prop({ reflect: true }) size: 'lg' | 'md' | 'sm' = 'md';\n\n  @State() startSlotHasContent = false;\n\n  /**\n   * 组件状态标识\n   * @type {'default' | 'error' | 'success' | 'warning'}\n   * @default 'default'\n   * @example\n   * state=\"error\" // 显示错误状态样式\n   *\n   * 状态说明：\n   * - default：常规状态\n   * - error：输入验证失败\n   * - success：输入验证通过\n   * - warning：存在潜在问题\n   */\n  @Prop({ reflect: true }) state: 'default' | 'error' | 'success' | 'warning' =\n    'default';\n\n  @Prop({ mutable: true }) value?: number | string = '';\n\n  @Prop() warn: boolean = false;\n\n  @Prop() warnText: string;\n\n  /**\n   * 值变更事件\n   * @event zane-select--change\n   * @type {EventEmitter<{ newItem?: object, removedItem?: object, value: string }>}\n   * @example\n   * <zane-select onZaneSelectChange={e => console.log(e.detail)}>\n   *\n   * 事件参数说明：\n   * - newItem：新增项的对象数据（当为添加操作时存在）\n   * - removedItem：移除项的对象数据（当为删除操作时存在）\n   * - value：当前选中值的逗号分隔字符串\n   */\n  @Event({ eventName: 'zane-select--change' }) zaneChange: EventEmitter;\n\n  /**\n   * 搜索输入事件（带防抖）\n   * @event zane-select--search\n   * @type {EventEmitter<{ value: string }>}\n   * @example\n   * <zane-search onZaneSearch={e => handleSearch(e.detail.value)}>\n   *\n   * 触发条件：\n   * - 当search不为'none'时\n   * - 输入内容发生变更且经过防抖处理\n   */\n  @Event({ eventName: 'zane-select--search' }) zaneSearch: EventEmitter;\n\n  /**\n   * 搜索回车确认事件\n   * @event zane-select--enter\n   * @type {EventEmitter<{ currentItems: array, value: string }>}\n   * @example\n   * <zane-search onZaneSearchEnter={e => loadMore(e.detail.value)}>\n   *\n   * 事件参数说明：\n   * - currentItems：当前过滤后的菜单项数组\n   * - value：当前的搜索关键词\n   */\n  @Event({ eventName: 'zane-select--enter' })\n  zaneSearchEnter: EventEmitter;\n  private displayElement?: HTMLElement;\n  private menuElm?: HTMLZaneMenuElement;\n  private nativeElement?: HTMLInputElement;\n\n  componentDidUpdate() {\n    if (this.open) this._fixPosition();\n  }\n\n  componentWillLoad() {\n    if (this.elm.getAttributeNames)\n      this.elm.getAttributeNames().forEach((name: string) => {\n        if (name.includes('aria-')) {\n          this.configAria[name] = this.elm.getAttribute(name);\n          this.elm.removeAttribute(name);\n        }\n      });\n    this.startSlotHasContent = !!this.elm.querySelector('[slot=\"start\"]');\n    this.endSlotHasContent = !!this.elm.querySelector('[slot=\"end\"]');\n  }\n  connectedCallback() {\n    this.debounceChanged();\n  }\n  @Listen('scroll', { target: 'window' })\n  fixPosition() {\n    if (this.open) {\n      this._fixPosition();\n    }\n  }\n  @Method()\n  async getComponentId() {\n    return this.gid;\n  }\n\n  @Listen('zane-menu-item--click')\n  menuItemClick(evt: CustomEvent<any>) {\n    this.selectHandler(evt.detail.value);\n  }\n\n  @Method()\n  async openSelectList(): Promise<void> {\n    this.openList();\n  }\n\n  render() {\n    return (\n      <Host\n        has-focus={this.hasFocus}\n        has-value={this.hasValue()}\n        position={this.position}\n      >\n        <div class={{ 'form-control': true, inline: this.inline }}>\n          {this.label && (\n            <label class=\"label\">\n              {this.required && <span class=\"required\">*</span>}\n              {this.label}\n            </label>\n          )}\n\n          <div class=\"field\">\n            <div\n              class={{\n                [`search-${this.search}`]: true,\n                dropdown: true,\n                multiple: this.multiple,\n                open: this.open,\n                select: true,\n                [this.position]: true,\n              }}\n            >\n              <div\n                class={{\n                  disabled: this.disabled,\n                  'end-slot-has-content': this.endSlotHasContent,\n                  'has-focus': this.hasFocus,\n                  'has-value': this.hasValue(),\n                  'input-container': true,\n                  readonly: this.readonly,\n                  'start-slot-has-content': this.startSlotHasContent,\n                }}\n              >\n                <div class=\"slot-container start\">\n                  <slot name=\"start\" />\n                </div>\n\n                <div\n                  class=\"value-container\"\n                  on-click={(evt) => {\n                    if (evt.target.classList.contains('multi-select-values')) {\n                      this.toggleList();\n                    }\n                  }}\n                >\n                  {this.renderMultiSelectValues()}\n\n                  {(() => {\n                    return this.search !== 'none' && this.open ? (\n                      <input\n                        class=\"input input-native\"\n                        name={this.name}\n                        onBlur={this.blurHandler}\n                        onFocus={this.focusHandler}\n                        onInput={this.onInput}\n                        onKeyDown={this.keyDownHandler}\n                        placeholder={this.placeholder}\n                        ref={(input) => (this.nativeElement = input)}\n                        type=\"text\"\n                        value={this.searchString}\n                        {...this.configAria}\n                      />\n                    ) : (\n                      <div\n                        aria-disabled={this.disabled ? 'true' : null}\n                        class=\"input display-value\"\n                        onBlur={this.blurHandler}\n                        onClick={this.toggleList}\n                        onFocus={this.focusHandler}\n                        onKeyDown={this.keyDownHandler}\n                        ref={(input) => (this.displayElement = input)}\n                        tabindex=\"0\"\n                        {...this.configAria}\n                      >\n                        {this.getDisplayValue()}\n                      </div>\n                    );\n                  })()}\n                </div>\n\n                {this.clearable && !this.multiple && this.hasValue() && (\n                  <zane-button\n                    class=\"clear clear-action\"\n                    color={'secondary'}\n                    icon=\"close\"\n                    onClick={this.clearInput}\n                    size={'xs'}\n                    variant=\"ghost.simple\"\n                  />\n                )}\n\n                <div class=\"slot-container end\">\n                  <slot name=\"end\" />\n                </div>\n\n                {this.getModeIcon()}\n              </div>\n              <div class=\"dropdown-content\">\n                {this.open && this.renderDropdownList()}\n              </div>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  renderMultiSelectValues() {\n    const values = this.getValues();\n    if (this.multiple && values.length > 0) {\n      // eslint-disable-next-line array-callback-return\n      return values.map((value) => {\n        const item = this.getItemByValue(value);\n        if (item) {\n          return (\n            <zane-tag\n              class=\"multi-select-value\"\n              dismissible={!this.disabled && !this.readonly}\n              size=\"sm\"\n              value={item.value?.toString()}\n            >\n              {item.label}\n            </zane-tag>\n          );\n        }\n      });\n    }\n  }\n\n  @Listen('resize', { target: 'window' })\n  resizeHandler() {\n    this.fixPosition();\n  }\n\n  @Method()\n  async setBlur() {\n    if (this.nativeElement) {\n      this.nativeElement.blur();\n    }\n  }\n\n  @Method()\n  async setFocus(): Promise<void> {\n    if (!this.open && this.displayElement) {\n      this.displayElement.focus();\n    } else if (this.open && this.nativeElement) {\n      this.nativeElement.focus();\n    }\n  }\n\n  @Listen('zane-tag--dismiss')\n  tagDismissClick(evt: CustomEvent<any>) {\n    this.removeItem(evt.detail.value);\n  }\n\n  @Listen('click', { target: 'window' })\n  windowClick(evt) {\n    if (this.open === false) return;\n    const path = evt.path || evt.composedPath();\n    for (const elm of path) {\n      if (elm === this.elm) return;\n    }\n    this.open = false;\n  }\n\n  @Watch('debounce')\n  protected debounceChanged() {\n    this.zaneSearch = debounceEvent(this.zaneSearch, this.debounce);\n  }\n\n  private addItem(selectItemValue) {\n    let value = this.getValues();\n    if (!value.includes(selectItemValue)) {\n      if (!this.multiple) value = [];\n      value.push(selectItemValue);\n      this.value = value.join(',');\n      this.zaneChange.emit({\n        newItem: this.getItemByValue(selectItemValue),\n        value: this.value,\n      });\n    }\n  }\n\n  private blurHandler = () => {\n    this.hasFocus = false;\n  };\n\n  private clearInput = () => {\n    if (!this.disabled && !this.readonly) {\n      this.removeItem(this.value);\n    }\n  };\n\n  private closeList = () => {\n    if (!this.disabled && !this.readonly && this.open) {\n      this.open = false;\n      setTimeout(() => this.setFocus(), 80);\n    }\n  };\n\n  private containsValue(value: number | string) {\n    const values = this.getValues();\n    return values.includes(value?.toString());\n  }\n\n  private filterItems() {\n    if (this.search === 'managed') return this.items;\n    return this.items.filter((item) => {\n      return (\n        !this.searchString ||\n        item.label\n          .toString()\n          .toLocaleLowerCase()\n          .includes(this.searchString.toLocaleLowerCase())\n      );\n    });\n  }\n\n  private focusHandler = () => {\n    this.hasFocus = true;\n  };\n\n  private getDisplayValue() {\n    if (this.multiple) {\n      return !this.disabled && !this.readonly ? (\n        this.placeholder\n      ) : (\n        <span>&nbsp;</span>\n      );\n    } else {\n      if (this.items) {\n        const item = this.getItemByValue(this.value);\n        if (item) {\n          return (\n            <div class=\"display-value-container\">\n              {item.icon && <zane-icon name={item.icon} size=\"sm\" />}\n              <span class=\"item-label\">{item.label}</span>\n            </div>\n          );\n        }\n      }\n      return !this.disabled && !this.readonly ? (\n        this.placeholder\n      ) : (\n        <span>&nbsp;</span>\n      );\n    }\n  }\n\n  private getItemByValue(value) {\n    if (this.items) {\n      return this.items.find((item) => {\n        return item.value === value;\n      });\n    }\n  }\n\n  private getMenuElement() {\n    return this.elm.querySelector('zane-menu');\n  }\n\n  private getModeIcon() {\n    if (this.showLoader) {\n      return <zane-spinner class=\"loader\" />;\n    }\n    if (!this.disabled && !this.readonly && !this.hideDropdownIcon)\n      return (\n        <zane-icon\n          class=\"toggle-icon chevron-down color-secondary\"\n          name=\"chevron--down\"\n          onClick={this.toggleList}\n          size={this.size}\n          tabindex={-1}\n        ></zane-icon>\n      );\n  }\n\n  private getValues() {\n    return this.value ? this.value.toString().split(',') : [];\n  }\n\n  private hasValue(): boolean {\n    return (this.value || '').toString().length > 0;\n  }\n\n  private keyDownHandler = (evt) => {\n    switch (evt.key) {\n      case 'ArrowDown': {\n        if (this.open) {\n          evt.preventDefault();\n          this.menuElm.setFocus();\n        }\n\n        break;\n      }\n      case 'ArrowUp': {\n        if (this.open) {\n          evt.preventDefault();\n          this.menuElm.setFocus(); // focus on previous item\n        }\n\n        break;\n      }\n      case 'Enter': {\n        evt.preventDefault();\n        this.toggleList();\n        this.zaneSearchEnter.emit({\n          currentItems: this.filterItems(),\n          value: this.searchString,\n        });\n\n        break;\n      }\n      // No default\n    }\n  };\n\n  private onInput = (ev: Event) => {\n    const input = ev.target as HTMLInputElement;\n    this.searchString = input.value || '';\n    this.zaneSearch.emit({\n      value: this.searchString,\n    });\n  };\n\n  private openList = () => {\n    if (!this.disabled && !this.readonly && !this.open) {\n      this.open = true;\n      this.hasFocus = false;\n      if (this.search !== 'none') {\n        this.searchString = '';\n      }\n\n      setTimeout(() => {\n        if (this.search !== 'none' && this.open) {\n          this.nativeElement.focus();\n        }\n      }, 300);\n    }\n  };\n\n  private removeItem(selectItemValue) {\n    let value = this.getValues();\n    if (value.includes(selectItemValue)) {\n      value = value.filter((item) => item !== selectItemValue);\n      this.value = value.join(',');\n      this.zaneChange.emit({\n        removedItem: this.getItemByValue(selectItemValue),\n        value: this.value,\n      });\n    }\n  }\n\n  private renderDropdownList() {\n    if (this.search === 'managed' && this.items.length === 0) {\n      return (\n        <zane-menu\n          class=\"menu\"\n          layer={this.layer}\n          ref={(el) => (this.menuElm = el)}\n          size={this.size}\n        >\n          <div class=\"start-search\">\n            <zane-icon name=\"search\" size={this.size} />\n            <zane-text class=\"text-secondary\">\n              Start typing to perform search\n            </zane-text>\n          </div>\n        </zane-menu>\n      );\n    }\n\n    if (this.items) {\n      const filteredItems = this.filterItems();\n      return (\n        <zane-menu\n          class=\"menu\"\n          empty={filteredItems.length === 0}\n          layer={this.layer}\n          ref={(el) => (this.menuElm = el)}\n          size={this.size}\n        >\n          {(() => {\n            return filteredItems.map((item) => {\n              return (\n                <zane-menu-item layer={this.layer} value={item.value}>\n                  <div class={'slot-container-start'} slot=\"start\">\n                    {item.icon && (\n                      <zane-icon name={item.icon} size={this.size} />\n                    )}\n                  </div>\n                  {item.label || item.value}\n\n                  <div slot=\"end\">\n                    {((this.multiple && this.containsValue(item.value)) ||\n                      this.value === item.value) && (\n                      <zane-icon name=\"checkmark\" size={this.size} />\n                    )}\n                  </div>\n                </zane-menu-item>\n              );\n            });\n          })()}\n        </zane-menu>\n      );\n    }\n  }\n\n  private selectHandler = (selectItemValue) => {\n    if (!this.disabled && !this.readonly) {\n      this.searchString = '';\n\n      if (this.multiple) this.toggleItem(selectItemValue);\n      else this.addItem(selectItemValue);\n    }\n    if (!this.multiple) this.closeList();\n  };\n\n  private toggleItem(selectItemValue) {\n    const value = this.getValues();\n    if (value.includes(selectItemValue)) {\n      this.removeItem(selectItemValue);\n    } else {\n      this.addItem(selectItemValue);\n    }\n  }\n\n  private toggleList = () => {\n    if (this.open) this.closeList();\n    else this.openList();\n  };\n}\n"],"mappings":"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","ignoreList":[]}