{"version":3,"names":["tabPanelCss","TabPanel","constructor","hostRef","this","active","render","h","Host","key"],"sources":["src/components/tabs/tab-panel/tab-panel.scss?tag=zane-tab-panel&encapsulation=shadow","src/components/tabs/tab-panel/tab-panel.tsx"],"sourcesContent":["@use '../../../global/styles/commons';\n\n:host {\n  display: none;\n}\n\n:host([active]) {\n  display: block;\n  flex: 1;\n}\n","import { Component, ComponentInterface, h, Host, Prop } from '@stencil/core';\n\n/**\n * 标签页内容面板容器\n *\n * 该组件与 zane-tab 标签页组件配合使用，形成完整的标签页系统。当标签页被激活时，\n * 关联的面板内容将显示在界面中，支持层级深度控制以实现复杂的视觉层次效果。\n *\n * @example\n * <zane-tab-panel value=\"profile\" active>\n *   用户资料详情内容\n * </zane-tab-panel>\n */\n@Component({\n  shadow: true,\n  styleUrl: 'tab-panel.scss',\n  tag: 'zane-tab-panel',\n})\nexport class TabPanel implements ComponentInterface {\n  /**\n   * 面板激活状态（与关联标签页同步）\n   *\n   * 当设置为 true 时，面板将显示在界面中。该属性通常由父级 zane-tabs 组件自动管理，\n   * 开发者也支持手动控制以实现特殊交互场景。\n   *\n   * @type {boolean}\n   * @prop active\n   * @default false\n   * @reflect\n   */\n  @Prop({ reflect: true }) active: boolean = false;\n\n  /**\n   * 视觉层级深度控制\n   *\n   * 提供三层深度选项，用于构建层次化界面效果：\n   * - '01': 顶层面板（默认最高层级）\n   * - '02': 中间层级面板\n   * - 'background': 背景层级面板（最低层级）\n   *\n   * @type {'01' | '02' | 'background'}\n   * @prop layer\n   * @reflect\n   */\n  @Prop({ reflect: true }) layer?: '01' | '02' | 'background';\n\n  /**\n   * 面板唯一标识值\n   *\n   * 必须与对应 zane-tab 组件的 target 属性匹配，建立标签页与内容面板的关联关系。\n   * 该值应确保在同一个 zane-tabs 容器中保持唯一。\n   *\n   * @type {string}\n   * @prop value\n   * @reflect\n   */\n  @Prop({ reflect: true }) value: string;\n\n  render() {\n    return (\n      <Host>\n        <slot />\n      </Host>\n    );\n  }\n}\n"],"mappings":"kDAAA,MAAMA,EAAc,mxF,MCkBPC,EAAQ,MALrB,WAAAC,CAAAC,G,UAiB2BC,KAAMC,OAAY,KAmC5C,CAPC,MAAAC,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAQ,QAAAE,IAAA,6C","ignoreList":[]}