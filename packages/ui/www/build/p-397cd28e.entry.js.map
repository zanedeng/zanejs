{"version":3,"names":["currentTimeCss","CurrentTime","constructor","hostRef","this","currentTime","Date","now","connectedCallback","timer","window","setInterval","disconnectedCallback","clearInterval","render","time","toLocaleTimeString","timeZone","timezone","h","Host","key","class"],"sources":["src/components/current-time/current-time.scss?tag=zane-current-time&encapsulation=shadow","src/components/current-time/current-time.tsx"],"sourcesContent":["@use '../../global/styles/commons';\n\n:host {\n  display: inline-block;\n}\n","import {\n  Component,\n  ComponentInterface,\n  h,\n  Host,\n  Prop,\n  State,\n} from '@stencil/core';\n\n/**\n * @name Current Time\n * @description Displays the current time in a given timezone.\n * @category Others\n * @example <zane-current-time></zane-current-time>\n */\n\n@Component({\n  shadow: true,\n  styleUrl: 'current-time.scss',\n  tag: 'zane-current-time',\n})\nexport class CurrentTime implements ComponentInterface {\n  // `currentTime` is decorated with `@State()`,\n  // as we need to trigger a rerender when its\n  // value changes to show the latest time\n  @State() currentTime: number = Date.now();\n\n  timer: number;\n\n  @Prop() timezone: string;\n\n  connectedCallback() {\n    this.timer = window.setInterval(() => {\n      // the assignment to `this.currentTime`\n      // will trigger a re-render\n      this.currentTime = Date.now();\n    }, 1000);\n  }\n\n  disconnectedCallback() {\n    window.clearInterval(this.timer);\n  }\n\n  render() {\n    const time = new Date(this.currentTime).toLocaleTimeString('en-US', {\n      timeZone: this.timezone,\n    });\n\n    return (\n      <Host>\n        <div class=\"current-time\">{time}</div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"kDAAA,MAAMA,EAAiB,+2E,MCqBVC,EAAW,MALxB,WAAAC,CAAAC,G,UASWC,KAAAC,YAAsBC,KAAKC,KA6BrC,CAvBC,iBAAAC,GACEJ,KAAKK,MAAQC,OAAOC,aAAY,KAG9BP,KAAKC,YAAcC,KAAKC,KAAK,GAC5B,I,CAGL,oBAAAK,GACEF,OAAOG,cAAcT,KAAKK,M,CAG5B,MAAAK,GACE,MAAMC,EAAO,IAAIT,KAAKF,KAAKC,aAAaW,mBAAmB,QAAS,CAClEC,SAAUb,KAAKc,WAGjB,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAK,OAAAE,IAAA,2CAAAC,MAAM,gBAAgBP,G","ignoreList":[]}