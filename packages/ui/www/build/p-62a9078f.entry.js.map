{"version":3,"names":["VERSION","win","window","loadPrismCalled","async","loadPrism","waitUntil","Prism","loadScript","loadPrismLanguageCalled","loadPrismLanguage","language","languages","autoLoader","autoloader","plugins","Promise","resolve","loadLanguages","codeHighlighterCss","locale","copied","copiedCode","copyToClipboard","loading","CodeHighlighter","constructor","hostRef","this","compiledCode","copyState","gid","getComponentIndex","hideCopy","inline","lineNumbers","value","codeString","parsedCodeString","componentDidLoad","initializePrism","componentWillLoad","host","querySelector","innerHTML","hasChildNodes","innerText","format","undefined","decode","str","replaceAll","isInViewport","setTimeout","__classPrivateFieldGet","_CodeHighlighter_instances","_CodeHighlighter_renderPrism","call","languageWatcher","render","h","Host","key","class","_CodeHighlighter_handleCopyClick","_CodeHighlighter_renderHighlighter","Fragment","content","color","icon","size","variant","title","themeWatcher","valueWatcher","textToCopy","textArea","document","createElement","style","position","left","body","prepend","select","execCommand","error","console","remove","_CodeHighlighter_populateCode","formatted","highlight","lineNumbersWrapper","linesNum","split","length","lines","Array","from","join","beautify.css","wrap_line_length","beautify.html","beautify.js"],"sources":["src/3d-party/prism/index.tsx","src/components/code-highlighter/code-highlighter.scss?tag=zane-code-highlighter&encapsulation=shadow","src/components/code-highlighter/code-highlighter.tsx"],"sourcesContent":["import { getAssetPath } from '@stencil/core';\n\nimport { loadScript, waitUntil } from '../../utils';\n\nconst VERSION = '1.30.0';\n\nconst win = window as any;\n\nlet loadPrismCalled = false;\n\nexport async function loadPrism() {\n  if (loadPrismCalled) {\n    await waitUntil(() => !!win.Prism);\n    return;\n  }\n\n  loadPrismCalled = true;\n\n  // eslint-disable-next-line n/prefer-global/process\n  if (process.env.THIRD_PARTY_ASSETS === 'LOCAL') {\n    await loadScript(\n      getAssetPath(\n        './assets/node_modules/prismjs/components/prism-core.min.js',\n      ),\n    );\n    await loadScript(\n      getAssetPath(\n        './assets/node_modules/prismjs/plugins/autoloader/prism-autoloader.min.js',\n      ),\n    );\n  } else {\n    await loadScript(\n      `https://cdn.jsdelivr.net/npm/prismjs@${VERSION}/components/prism-core.min.js`,\n    );\n    await loadScript(\n      `https://cdn.jsdelivr.net/npm/prismjs@${VERSION}/plugins/autoloader/prism-autoloader.min.js`,\n    );\n  }\n\n  await waitUntil(() => !!win.Prism);\n}\n\nconst loadPrismLanguageCalled: any = {};\n\nexport async function loadPrismLanguage(language: string) {\n  const Prism = win.Prism;\n\n  if (loadPrismLanguageCalled[language]) {\n    await waitUntil(() => !!Prism.languages[language]);\n    return;\n  }\n\n  loadPrismLanguageCalled[language] = true;\n\n  await autoLoader(language);\n}\n\nexport async function autoLoader(language: string) {\n  const Prism = win.Prism;\n  const autoloader = Prism.plugins.autoloader;\n  return await new Promise((resolve) => {\n    autoloader.loadLanguages([language], () => {\n      resolve(1);\n    });\n  });\n}\n","@use '../../3d-party/prism/prism';\n@use '../../3d-party/prism/prism-line-numbers';\n@use '../../global/styles/commons';\n\n:host {\n  /**\n    * @prop --zane-code-highlighter-background: Code Highlighter background color\n    */\n  --zane-code-highlighter-background: var(--code-bg-primary);\n\n  display: block;\n  height: 100%;\n}\n\n.code-loader {\n  display: flex;\n  gap: var(--spacing-02);\n  align-items: center;\n  justify-content: center;\n  height: 10rem;\n  background-color: var(--zane-code-highlighter-background);\n}\n\n.code-highlighter {\n  position: relative;\n  height: 100%;\n  color: var(--text-primary);\n  background-color: var(--zane-code-highlighter-background);\n\n  .scroll-wrapper {\n    height: 100%;\n    overflow: auto;\n\n    .line-numbers-wrapper {\n      position: relative;\n      padding: var(--spacing-05);\n      padding-inline-end: 3rem;\n\n      @include commons.font-style(code-02);\n\n      &.line-numbers {\n        margin-left: 3.8rem;\n      }\n\n      .highlighter {\n        position: relative;\n        margin: 0;\n      }\n    }\n  }\n\n  .copy-btn {\n    position: absolute;\n    top: 0.675rem;\n    right: var(--spacing-03);\n    background-color: var(--zane-code-highlighter-background);\n  }\n}\n\n:host([inline]) {\n  display: inline;\n  height: initial;\n\n  .code-highlighter {\n    display: inline;\n    cursor: pointer;\n\n    .scroll-wrapper {\n      display: inline;\n\n      .line-numbers-wrapper {\n        display: inline;\n        padding: 0 var(--spacing-03);\n        font-size: inherit;\n        word-wrap: break-word;\n\n        .highlighter {\n          display: inline;\n        }\n      }\n    }\n  }\n\n  .code-loader {\n    display: inline;\n    height: initial;\n  }\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  Fragment,\n  h,\n  Host,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\nimport * as beautify from 'js-beautify/js';\n\nimport { loadPrism, loadPrismLanguage } from '../../3d-party/prism';\nimport { Language } from '../../constants';\nimport { getComponentIndex, isInViewport } from '../../utils';\n\nconst win = window as any;\n\nconst locale: {\n  copied: string;\n  copiedCode: string;\n  copyToClipboard: string;\n  loading: string;\n} = {\n  copied: 'Copied',\n  copiedCode: 'Copied code',\n  copyToClipboard: 'Copy to clipboard',\n  loading: 'Loading code...',\n};\n\n/**\n * @name Code Highlighter\n * @description A browser based code highlighter.\n * @category Data Display\n * @tag display, code\n * @img /assets/img/code-highlighter.webp\n * @imgDark /assets/img/code-highlighter-dark.webp\n */\n@Component({\n  shadow: true,\n  styleUrl: 'code-highlighter.scss',\n  tag: 'zane-code-highlighter',\n})\nexport class CodeHighlighter implements ComponentInterface {\n  @State() compiledCode: string = null;\n\n  @State() copyState: 'copied' | 'idle' = 'idle';\n\n  /**\n   * Format the code snippet.\n   */\n  @Prop({ mutable: true, reflect: true }) format: boolean;\n\n  gid: string = getComponentIndex();\n\n  /**\n   * Hide the copy button.\n   */\n  @Prop() hideCopy: boolean = false;\n\n  @Element() host!: HTMLElement;\n\n  /**\n   * Display the code snippet inline.\n   */\n  @Prop({ reflect: true }) inline: boolean = false;\n\n  /**\n   * The language of the code snippet.\n   */\n  @Prop({ reflect: true }) language: Language = 'javascript';\n\n  /**\n   * Display line numbers.\n   */\n  @Prop({ reflect: true }) lineNumbers: boolean = false;\n  /**\n   * The code snippet to highlight.\n   */\n  @Prop() value: string = '';\n\n  private codeString: string = '';\n  private parsedCodeString: string = '';\n\n  componentDidLoad() {\n    this.initializePrism();\n  }\n\n  async componentWillLoad() {\n    this.codeString = '';\n    if (this.value) {\n      this.codeString = this.value;\n    } else if (this.host.querySelector('code')) {\n      this.codeString = this.host.querySelector('code').innerHTML;\n    } else if (this.host.hasChildNodes()) {\n      this.codeString = this.host.innerText;\n    }\n\n    if (this.format === undefined) {\n      this.format = !this.inline;\n    }\n\n    this.codeString = this.decode(this.codeString);\n  }\n\n  decode(str: string) {\n    return str.replaceAll('&lt;', '<').replaceAll('&gt;', '>');\n  }\n\n  async initializePrism() {\n    if (!win.Prism) {\n      await loadPrism();\n    }\n\n    if (!isInViewport(this.host)) {\n      setTimeout(() => this.initializePrism(), 300);\n      return;\n    }\n\n    const Prism = win.Prism;\n    const autoloader = Prism.plugins.autoloader;\n    if (autoloader) {\n      await loadPrismLanguage(this.language);\n      this.#renderPrism();\n    } else {\n      this.#renderPrism();\n    }\n  }\n\n  @Watch('language')\n  languageWatcher() {\n    this.#renderPrism();\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.compiledCode !== null && (\n          <div\n            class=\"code-highlighter\"\n            on-click={async () => {\n              if (this.inline) await this.#handleCopyClick();\n            }}\n          >\n            <div class=\"scroll-wrapper\">\n              <div\n                class={{\n                  'line-numbers': this.lineNumbers,\n                  'line-numbers-wrapper': true,\n                }}\n              >\n                {this.#renderHighlighter()}\n              </div>\n            </div>\n            {!this.hideCopy && this.copyState === 'idle' && !this.inline && (\n              <Fragment>\n                <zane-tooltip\n                  class={'copy-btn'}\n                  content={locale.copyToClipboard}\n                >\n                  <zane-button\n                    aria-label=\"Copy to clipboard\"\n                    class=\"icon-only\"\n                    color={'secondary'}\n                    icon={'copy'}\n                    onZane-button--click={async () => {\n                      await this.#handleCopyClick();\n                    }}\n                    size=\"sm\"\n                    variant={'ghost'}\n                  ></zane-button>\n                </zane-tooltip>\n              </Fragment>\n            )}\n            {!this.hideCopy && this.copyState === 'copied' && !this.inline && (\n              <div>\n                <zane-button\n                  aria-label={locale.copiedCode}\n                  class=\"copy-btn icon-only test\"\n                  color={'success'}\n                  icon={'checkmark'}\n                  size=\"sm\"\n                  title={locale.copiedCode}\n                  variant={'default'}\n                >\n                  {locale.copied}\n                </zane-button>\n              </div>\n            )}\n          </div>\n        )}\n        {this.compiledCode === null && (\n          <div class=\"code-loader\">\n            <zane-spinner>{locale.loading}</zane-spinner>\n          </div>\n        )}\n      </Host>\n    );\n  }\n\n  @Watch('lineNumbers')\n  themeWatcher() {\n    this.#renderPrism();\n  }\n\n  @Watch('value')\n  valueWatcher() {\n    if (this.value) {\n      this.codeString = this.value;\n    }\n    this.#renderPrism();\n  }\n\n  async #handleCopyClick() {\n    const textToCopy = this.parsedCodeString;\n    // Navigator clipboard api needs a secure context (https)\n    // Use the 'out of viewport hidden text area' trick\n    const textArea = document.createElement('textarea');\n    textArea.value = textToCopy;\n\n    // Move textarea out of the viewport so it's not visible\n    textArea.style.position = 'absolute';\n    textArea.style.left = '-999999px';\n\n    document.body.prepend(textArea);\n    textArea.select();\n\n    try {\n      document.execCommand('copy');\n    } catch (error) {\n      console.error(error);\n    } finally {\n      textArea.remove();\n    }\n\n    this.copyState = 'copied';\n\n    setTimeout(() => {\n      this.copyState = 'idle';\n    }, 3000);\n  }\n\n  #populateCode() {\n    const Prism = win.Prism;\n    const formatted = Prism.highlight(\n      this.parsedCodeString,\n      Prism.languages[this.language],\n      this.language,\n    );\n    let lineNumbersWrapper = '';\n    if (this.lineNumbers) {\n      const linesNum = formatted.split('\\n').length;\n      const lines = Array.from({ length: linesNum + 1 }).join('<span></span>');\n      lineNumbersWrapper = `<span aria-hidden='true' class='line-numbers-rows'>${lines}</span>`;\n    }\n    this.compiledCode = formatted + lineNumbersWrapper;\n  }\n\n  #renderHighlighter() {\n    return this.inline ? (\n      <div class=\"highlighter\" innerHTML={this.compiledCode} />\n    ) : (\n      <pre class=\"highlighter line-numbers\" innerHTML={this.compiledCode} />\n    );\n  }\n\n  #renderPrism() {\n    if (\n      (this.format && this.language === 'javascript') ||\n      this.language === 'html' ||\n      this.language === 'css'\n    ) {\n      switch (this.language) {\n        case 'css': {\n          this.parsedCodeString = beautify.css(this.codeString, {\n            wrap_line_length: 120,\n          });\n          break;\n        }\n        case 'html': {\n          this.parsedCodeString = beautify.html(this.codeString, {\n            wrap_line_length: 120,\n          });\n          break;\n        }\n        case 'javascript': {\n          this.parsedCodeString = beautify.js(this.codeString, {\n            wrap_line_length: 120,\n          });\n          break;\n        }\n      }\n      this.#populateCode();\n    } else {\n      this.parsedCodeString = this.codeString;\n      this.#populateCode();\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}