{"version":3,"names":["imageCss","Image","constructor","hostRef","this","isDarkMode","componentWillLoad","observeThemeChange","render","darkSrc","h","Host","alt","imageTitle","src"],"sources":["src/components/image/image.scss?tag=zane-image&encapsulation=shadow","src/components/image/image.tsx"],"sourcesContent":["@use '../../global/styles/commons';\n\n:host {\n  display: contents;\n}\n\nimg {\n  max-width: 100%;\n  max-height: 100%;\n}\n","import { Component, h, Host, Prop, State } from '@stencil/core';\n\nimport { isDarkMode, observeThemeChange } from '../../utils';\n\n@Component({\n  shadow: true,\n  styleUrl: 'image.scss',\n  tag: 'zane-image',\n})\nexport class Image {\n  @Prop({ reflect: true }) darkSrc: string;\n\n  @Prop() imageTitle: string;\n\n  @State() isDarkMode: boolean = isDarkMode();\n\n  @Prop({ reflect: true }) src: string;\n\n  componentWillLoad() {\n    observeThemeChange(() => {\n      this.isDarkMode = isDarkMode();\n    });\n  }\n\n  render() {\n    return this.isDarkMode && this.darkSrc ? (\n      <Host>\n        <img alt={this.imageTitle} src={this.darkSrc} />\n      </Host>\n    ) : (\n      <Host>\n        <img alt={this.imageTitle} src={this.src} />\n      </Host>\n    );\n  }\n}\n"],"mappings":"6IAAA,MAAMA,EAAW,84E,MCSJC,EAAK,MALlB,WAAAC,CAAAC,G,UAUWC,KAAUC,WAAYA,GAqBhC,CAjBC,iBAAAC,GACEC,GAAmB,KACjBH,KAAKC,WAAaA,GAAY,G,CAIlC,MAAAG,GACE,OAAOJ,KAAKC,YAAcD,KAAKK,QAC7BC,EAACC,EAAI,KACHD,EAAA,OAAKE,IAAKR,KAAKS,WAAYC,IAAKV,KAAKK,WAGvCC,EAACC,EAAI,KACHD,EAAA,OAAKE,IAAKR,KAAKS,WAAYC,IAAKV,KAAKU,M","ignoreList":[]}